/**
 * Copyright Israel Aerospace Industries, Eclipse contributors and others 2021. All rights reserved.
 * This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 * Contributors:
 *     ELTA Ltd - initial API and implementation
 * 
 */
package dsm.oscal.model.Oscal.provider;

import dsm.oscal.model.Oscal.util.OscalAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class OscalItemProviderAdapterFactory extends OscalAdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public OscalItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Link} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinkItemProvider linkItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Link}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinkAdapter() {
		if (linkItemProvider == null) {
			linkItemProvider = new LinkItemProvider(this);
		}

		return linkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Parameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterItemProvider parameterItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Parameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterAdapter() {
		if (parameterItemProvider == null) {
			parameterItemProvider = new ParameterItemProvider(this);
		}

		return parameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.ControlDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ControlDefinitionItemProvider controlDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.ControlDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createControlDefinitionAdapter() {
		if (controlDefinitionItemProvider == null) {
			controlDefinitionItemProvider = new ControlDefinitionItemProvider(this);
		}

		return controlDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Address} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddressItemProvider addressItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Address}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAddressAdapter() {
		if (addressItemProvider == null) {
			addressItemProvider = new AddressItemProvider(this);
		}

		return addressItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Role} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleItemProvider roleItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Role}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleAdapter() {
		if (roleItemProvider == null) {
			roleItemProvider = new RoleItemProvider(this);
		}

		return roleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Remark} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemarkItemProvider remarkItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Remark}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemarkAdapter() {
		if (remarkItemProvider == null) {
			remarkItemProvider = new RemarkItemProvider(this);
		}

		return remarkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Catalog} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CatalogItemProvider catalogItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Catalog}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCatalogAdapter() {
		if (catalogItemProvider == null) {
			catalogItemProvider = new CatalogItemProvider(this);
		}

		return catalogItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.BackMatter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BackMatterItemProvider backMatterItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.BackMatter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBackMatterAdapter() {
		if (backMatterItemProvider == null) {
			backMatterItemProvider = new BackMatterItemProvider(this);
		}

		return backMatterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Revision} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RevisionItemProvider revisionItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Revision}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRevisionAdapter() {
		if (revisionItemProvider == null) {
			revisionItemProvider = new RevisionItemProvider(this);
		}

		return revisionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Group} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupItemProvider groupItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Group}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupAdapter() {
		if (groupItemProvider == null) {
			groupItemProvider = new GroupItemProvider(this);
		}

		return groupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Location} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocationItemProvider locationItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Location}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLocationAdapter() {
		if (locationItemProvider == null) {
			locationItemProvider = new LocationItemProvider(this);
		}

		return locationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Annotation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnnotationItemProvider annotationItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Annotation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnnotationAdapter() {
		if (annotationItemProvider == null) {
			annotationItemProvider = new AnnotationItemProvider(this);
		}

		return annotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.DocumentId} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentIdItemProvider documentIdItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.DocumentId}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentIdAdapter() {
		if (documentIdItemProvider == null) {
			documentIdItemProvider = new DocumentIdItemProvider(this);
		}

		return documentIdItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Property} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyItemProvider propertyItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Property}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyAdapter() {
		if (propertyItemProvider == null) {
			propertyItemProvider = new PropertyItemProvider(this);
		}

		return propertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Metadata} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetadataItemProvider metadataItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Metadata}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetadataAdapter() {
		if (metadataItemProvider == null) {
			metadataItemProvider = new MetadataItemProvider(this);
		}

		return metadataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Revisions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RevisionsItemProvider revisionsItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Revisions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRevisionsAdapter() {
		if (revisionsItemProvider == null) {
			revisionsItemProvider = new RevisionsItemProvider(this);
		}

		return revisionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.TelephoneNumber} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TelephoneNumberItemProvider telephoneNumberItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.TelephoneNumber}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTelephoneNumberAdapter() {
		if (telephoneNumberItemProvider == null) {
			telephoneNumberItemProvider = new TelephoneNumberItemProvider(this);
		}

		return telephoneNumberItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Party} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartyItemProvider partyItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Party}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartyAdapter() {
		if (partyItemProvider == null) {
			partyItemProvider = new PartyItemProvider(this);
		}

		return partyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.ExternalId} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalIdItemProvider externalIdItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.ExternalId}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternalIdAdapter() {
		if (externalIdItemProvider == null) {
			externalIdItemProvider = new ExternalIdItemProvider(this);
		}

		return externalIdItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.ResponsibleParty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResponsiblePartyItemProvider responsiblePartyItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.ResponsibleParty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResponsiblePartyAdapter() {
		if (responsiblePartyItemProvider == null) {
			responsiblePartyItemProvider = new ResponsiblePartyItemProvider(this);
		}

		return responsiblePartyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Constraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintItemProvider constraintItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Constraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintAdapter() {
		if (constraintItemProvider == null) {
			constraintItemProvider = new ConstraintItemProvider(this);
		}

		return constraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Test} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TestItemProvider testItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Test}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTestAdapter() {
		if (testItemProvider == null) {
			testItemProvider = new TestItemProvider(this);
		}

		return testItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Partition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartitionItemProvider partitionItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Partition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartitionAdapter() {
		if (partitionItemProvider == null) {
			partitionItemProvider = new PartitionItemProvider(this);
		}

		return partitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Select} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SelectItemProvider selectItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Select}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSelectAdapter() {
		if (selectItemProvider == null) {
			selectItemProvider = new SelectItemProvider(this);
		}

		return selectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Resource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResourceItemProvider resourceItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Resource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResourceAdapter() {
		if (resourceItemProvider == null) {
			resourceItemProvider = new ResourceItemProvider(this);
		}

		return resourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Citation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CitationItemProvider citationItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Citation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCitationAdapter() {
		if (citationItemProvider == null) {
			citationItemProvider = new CitationItemProvider(this);
		}

		return citationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Rlink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RlinkItemProvider rlinkItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Rlink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRlinkAdapter() {
		if (rlinkItemProvider == null) {
			rlinkItemProvider = new RlinkItemProvider(this);
		}

		return rlinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Hash} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HashItemProvider hashItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Hash}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHashAdapter() {
		if (hashItemProvider == null) {
			hashItemProvider = new HashItemProvider(this);
		}

		return hashItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Base64} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Base64ItemProvider base64ItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Base64}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBase64Adapter() {
		if (base64ItemProvider == null) {
			base64ItemProvider = new Base64ItemProvider(this);
		}

		return base64ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Profile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProfileItemProvider profileItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Profile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProfileAdapter() {
		if (profileItemProvider == null) {
			profileItemProvider = new ProfileItemProvider(this);
		}

		return profileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Import} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportItemProvider importItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Import}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImportAdapter() {
		if (importItemProvider == null) {
			importItemProvider = new ImportItemProvider(this);
		}

		return importItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Merge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergeItemProvider mergeItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Merge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergeAdapter() {
		if (mergeItemProvider == null) {
			mergeItemProvider = new MergeItemProvider(this);
		}

		return mergeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Modify} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModifyItemProvider modifyItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Modify}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModifyAdapter() {
		if (modifyItemProvider == null) {
			modifyItemProvider = new ModifyItemProvider(this);
		}

		return modifyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Include} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IncludeItemProvider includeItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Include}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIncludeAdapter() {
		if (includeItemProvider == null) {
			includeItemProvider = new IncludeItemProvider(this);
		}

		return includeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Exclude} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExcludeItemProvider excludeItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Exclude}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExcludeAdapter() {
		if (excludeItemProvider == null) {
			excludeItemProvider = new ExcludeItemProvider(this);
		}

		return excludeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.All} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AllItemProvider allItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.All}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAllAdapter() {
		if (allItemProvider == null) {
			allItemProvider = new AllItemProvider(this);
		}

		return allItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Call} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CallItemProvider callItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Call}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCallAdapter() {
		if (callItemProvider == null) {
			callItemProvider = new CallItemProvider(this);
		}

		return callItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Match} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MatchItemProvider matchItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Match}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMatchAdapter() {
		if (matchItemProvider == null) {
			matchItemProvider = new MatchItemProvider(this);
		}

		return matchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Combine} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CombineItemProvider combineItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Combine}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCombineAdapter() {
		if (combineItemProvider == null) {
			combineItemProvider = new CombineItemProvider(this);
		}

		return combineItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Custom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomItemProvider customItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Custom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomAdapter() {
		if (customItemProvider == null) {
			customItemProvider = new CustomItemProvider(this);
		}

		return customItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.SetParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SetParameterItemProvider setParameterItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.SetParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSetParameterAdapter() {
		if (setParameterItemProvider == null) {
			setParameterItemProvider = new SetParameterItemProvider(this);
		}

		return setParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.OSCALConstraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OSCALConstraintItemProvider oscalConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.OSCALConstraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOSCALConstraintAdapter() {
		if (oscalConstraintItemProvider == null) {
			oscalConstraintItemProvider = new OSCALConstraintItemProvider(this);
		}

		return oscalConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Alter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlterItemProvider alterItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Alter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlterAdapter() {
		if (alterItemProvider == null) {
			alterItemProvider = new AlterItemProvider(this);
		}

		return alterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Remove} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveItemProvider removeItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Remove}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveAdapter() {
		if (removeItemProvider == null) {
			removeItemProvider = new RemoveItemProvider(this);
		}

		return removeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.Addition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdditionItemProvider additionItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.Addition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdditionAdapter() {
		if (additionItemProvider == null) {
			additionItemProvider = new AdditionItemProvider(this);
		}

		return additionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link dsm.oscal.model.Oscal.NamedElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NamedElementItemProvider namedElementItemProvider;

	/**
	 * This creates an adapter for a {@link dsm.oscal.model.Oscal.NamedElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNamedElementAdapter() {
		if (namedElementItemProvider == null) {
			namedElementItemProvider = new NamedElementItemProvider(this);
		}

		return namedElementItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (linkItemProvider != null)
			linkItemProvider.dispose();
		if (parameterItemProvider != null)
			parameterItemProvider.dispose();
		if (controlDefinitionItemProvider != null)
			controlDefinitionItemProvider.dispose();
		if (addressItemProvider != null)
			addressItemProvider.dispose();
		if (roleItemProvider != null)
			roleItemProvider.dispose();
		if (remarkItemProvider != null)
			remarkItemProvider.dispose();
		if (catalogItemProvider != null)
			catalogItemProvider.dispose();
		if (backMatterItemProvider != null)
			backMatterItemProvider.dispose();
		if (revisionItemProvider != null)
			revisionItemProvider.dispose();
		if (groupItemProvider != null)
			groupItemProvider.dispose();
		if (locationItemProvider != null)
			locationItemProvider.dispose();
		if (annotationItemProvider != null)
			annotationItemProvider.dispose();
		if (documentIdItemProvider != null)
			documentIdItemProvider.dispose();
		if (propertyItemProvider != null)
			propertyItemProvider.dispose();
		if (metadataItemProvider != null)
			metadataItemProvider.dispose();
		if (revisionsItemProvider != null)
			revisionsItemProvider.dispose();
		if (telephoneNumberItemProvider != null)
			telephoneNumberItemProvider.dispose();
		if (partyItemProvider != null)
			partyItemProvider.dispose();
		if (externalIdItemProvider != null)
			externalIdItemProvider.dispose();
		if (responsiblePartyItemProvider != null)
			responsiblePartyItemProvider.dispose();
		if (constraintItemProvider != null)
			constraintItemProvider.dispose();
		if (testItemProvider != null)
			testItemProvider.dispose();
		if (partitionItemProvider != null)
			partitionItemProvider.dispose();
		if (selectItemProvider != null)
			selectItemProvider.dispose();
		if (resourceItemProvider != null)
			resourceItemProvider.dispose();
		if (citationItemProvider != null)
			citationItemProvider.dispose();
		if (rlinkItemProvider != null)
			rlinkItemProvider.dispose();
		if (hashItemProvider != null)
			hashItemProvider.dispose();
		if (base64ItemProvider != null)
			base64ItemProvider.dispose();
		if (profileItemProvider != null)
			profileItemProvider.dispose();
		if (importItemProvider != null)
			importItemProvider.dispose();
		if (mergeItemProvider != null)
			mergeItemProvider.dispose();
		if (modifyItemProvider != null)
			modifyItemProvider.dispose();
		if (includeItemProvider != null)
			includeItemProvider.dispose();
		if (excludeItemProvider != null)
			excludeItemProvider.dispose();
		if (allItemProvider != null)
			allItemProvider.dispose();
		if (callItemProvider != null)
			callItemProvider.dispose();
		if (matchItemProvider != null)
			matchItemProvider.dispose();
		if (combineItemProvider != null)
			combineItemProvider.dispose();
		if (customItemProvider != null)
			customItemProvider.dispose();
		if (setParameterItemProvider != null)
			setParameterItemProvider.dispose();
		if (oscalConstraintItemProvider != null)
			oscalConstraintItemProvider.dispose();
		if (alterItemProvider != null)
			alterItemProvider.dispose();
		if (removeItemProvider != null)
			removeItemProvider.dispose();
		if (additionItemProvider != null)
			additionItemProvider.dispose();
		if (namedElementItemProvider != null)
			namedElementItemProvider.dispose();
	}

}
