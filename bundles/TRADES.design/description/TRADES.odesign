<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:description_2="http://www.eclipse.org/sirius/table/description/1.1.0" xmlns:filter="http://www.eclipse.org/sirius/diagram/description/filter/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:validation="http://www.eclipse.org/sirius/description/validation/1.1.0" name="TRADES" version="12.0.0.2017041100">
  <ownedViewpoints name="NoOp">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="NoOPDiag" domainClass="TRADES::Analysis" preconditionExpression="aql:false" enablePopupBars="true">
      <metamodel href="dsm.TRADES#/"/>
      <defaultLayer name="Default">
        <toolSections name="NoOpTool">
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteDifficultyTool">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(TRADES::DifficultyScore)">
                <subModelOperations xsi:type="tool_1:For" expression="aql:self.getLinkedConfigurations()" iteratorName="conf">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="TRADES.design.SemanticService"/>
  </ownedViewpoints>
  <ownedViewpoints name="TRADESview">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="TRADES diagram" initialisation="true" showOnStartup="true" domainClass="TRADES::Analysis" enablePopupBars="true">
      <dropDescriptions href="#//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='copyThreatDragDrop']"/>
      <dropDescriptions href="#//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='DropCatalogControl_TD']"/>
      <dropDescriptions href="#//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='DropCatalogThreat_TD']"/>
      <dropDescriptions href="../../dsm.oscal.design/description/oscal.odesign#//@ownedViewpoints[name='OscalViewPoint']/@ownedRepresentationExtensions[name='TRADES.design']/@layers[name='OscalLayer']/@toolSections.0/@ownedTools[name='DropOScalControl']"/>
      <dropDescriptions href="../../dsm.oscal.design/description/oscal.odesign#//@ownedViewpoints[name='OscalViewPoint']/@ownedRepresentationExtensions[name='TRADES.design']/@layers[name='OscalLayer']/@toolSections.0/@ownedTools[name='DropOScalControl_TDExt']"/>
      <dropDescriptions href="#//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='ExternalControlDrop_TD']"/>
      <metamodel href="dsm.TRADES#/"/>
      <metamodel href="http://www.eclipse.org/sirius/diagram/1.1.0#/"/>
      <metamodel href="http://www.eclipse.org/sirius/1.1.0#/"/>
      <filters xsi:type="filter:CompositeFilterDescription" name="HideComponentFilter_TD" label="Hide Components">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@containerMappings[name='ComponentPackage_TD']"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="HideThreatFilter_TD" label="Hide Threats">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="HideControlFilter_TD" label="Hide controls">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ControlNode']"/>
      </filters>
      <filters xsi:type="filter:CompositeFilterDescription" name="ComponentBlackFilter_TD" label="Component Black Box Filter">
        <filters xsi:type="filter:MappingFilter" mappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ControlNode'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@containerMappings[name='ComponentPackage_TD']" semanticConditionExpression="aql:not self.containedInComponent()"/>
      </filters>
      <validationSet name="threatRelatedValidation">
        <ownedRules xsi:type="validation:SemanticValidationRule" name="rejControlMitigates" label="Mitigation by rejected control" level="WARNING" message="The control for this mitigation has been rejected" targetClass="TRADES::ThreatMitigationRelation">
          <audits auditExpression="aql: (self.control.status!=TRADES::ControlStatusENUM::Rejected) or self.assessment!=TRADES::AssessmentENUM::Accepted"/>
        </ownedRules>
        <ownedRules xsi:type="validation:SemanticValidationRule" name="unmitigatedThreat" label="Unmitigated threat accepted" message="This threat allocation is accepted despite having no mitigations designed" targetClass="TRADES::ThreatAllocationRelation">
          <audits auditExpression="aql: self.assessment!=TRADES::AssessmentENUM::Accepted or self.eInverse(TRADES::ThreatMitigationRelation)->notEmpty()"/>
        </ownedRules>
        <ownedRules xsi:type="validation:ViewValidationRule" name="UnassignedControl" level="ERROR" message="This control has not been assigned to a component" targets="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Component%20Analysis']/@defaultLayer/@nodeMappings[name='ControlNode_CA'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ControlNode']">
          <audits auditExpression="aql: self.target.eContainer(TRADES::Component)!=null"/>
        </ownedRules>
        <ownedRules xsi:type="validation:SemanticValidationRule" name="Well-defined scope" message="There are several components placed in the top hierarchy. The TRADES methodology recommends a single, well-defined compnent as the system scope." targetClass="TRADES::Analysis">
          <audits auditExpression="aql: self.components->size()&lt;2"/>
          <fixes name="Create a top level component as a single system scope and place other components within the top level component">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: self">
                <subModelOperations xsi:type="tool_1:Let" variableName="currentComponents" valueExpression="aql: self.components">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::Component" referenceName="components" variableName="scopeComponent">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="System Scope"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: self.eContainerOrSelf(TRADES::Analysis)">
                      <subModelOperations xsi:type="tool_1:For" expression="aql: currentComponents">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql: i &lt;> scopeComponent">
                          <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="aql: scopeComponent" featureName="components"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </fixes>
        </ownedRules>
      </validationSet>
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.layered" label="ELK Layered" description="Layer-based algorithm provided by the Eclipse Layout Kernel. Arranges as many edges as possible into one direction by placing nodes into subsequent layers. This implementation supports different routing styles (straight, orthogonal, splines); if orthogonal routing is selected, arbitrary port constraints are respected, thus enabling the layout of block diagrams such as actor-oriented models or circuit schematics. Furthermore, full layout of compound graphs with cross-hierarchy edges is supported when the respective option is activated on the top level.">
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.hierarchyHandling">
          <targets>PARENT</targets>
          <targets>NODE</targets>
          <value name="INCLUDE_CHILDREN"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.componentComponent" value="25.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.edgeEdge" value="25.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.nodeNode" value="25.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.layered.spacing.baseValue" value="25.0">
          <targets>PARENT</targets>
        </layoutOptions>
      </layout>
      <defaultLayer name="Default_TD">
        <nodeMappings name="ThreatNode_TD" deletionDescription="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='DeleteThreatFromDiagram']" labelDirectEdit="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Change%20name']" semanticCandidatesExpression="aql:self.eContainerOrSelf(TRADES::Analysis).threatOwner.eAllContents(TRADES::Threat)" createElements="false" doubleClickDescription="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='OpenProgramTool']" domainClass="TRADES::Threat">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" labelExpression="aql:self.getLabelProviderText()" tooltipExpression="aql:self.getLabelProviderText()" sizeComputationExpression="-1" workspacePath="/TRADES.design/Images/ThreatImage.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(TRADES::ExternalThreat)">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" labelExpression="aql:''" tooltipExpression="feature:name" sizeComputationExpression="-1" workspacePath="/TRADES.design/Images/ExteenalThreatImage.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <nodeMappings name="ControlNode" labelDirectEdit="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Change%20name']" semanticCandidatesExpression="aql: self.getAllControls()" domainClass="TRADES::Control">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.getLabelProviderText()" tooltipExpression="aql:self.getLabelProviderText()" sizeComputationExpression="-1" workspacePath="/TRADES.design/Images/controlImage.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(TRADES::ExternalControl)">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.getLabelProviderText()" tooltipExpression="feature:name" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/TRADES.design/Images/ExternalControlImage.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.status=TRADES::ControlStatusENUM::Implemented">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.getLabelProviderText()" tooltipExpression="feature:name" sizeComputationExpression="-1" workspacePath="/TRADES.design/Images/controlImageGreen.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.status=TRADES::ControlStatusENUM::Rejected">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.getLabelProviderText()" tooltipExpression="feature:name" sizeComputationExpression="-1" workspacePath="/TRADES.design/Images/controlImageRed.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.status=TRADES::ControlStatusENUM::Agreed">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.getLabelProviderText()" tooltipExpression="feature:name" sizeComputationExpression="-1" workspacePath="/TRADES.design/Images/controlImageBlue.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <edgeMappings name="allocatedThreat_TD" navigationDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='AttachChainDiagramNavTool_TD']" labelDirectEdit="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Change%20name']" sourceMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']" targetMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@containerMappings[name='ComponentPackage_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Component%20Analysis']/@defaultLayer/@containerMappings[name='ComponentContainer_CA']" targetFinderExpression="feature:component" sourceFinderExpression="feature:threat" targetExpression="var:self" domainClass="TRADES::ThreatAllocationRelation" useDomainElement="true" reconnections="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeThreatInThreatAllocation'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeComponentInThreatAllocation']">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql: self.eGet('assessment')->toString()='Accepted'">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.eGet('assessment')->toString()='Gap'">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="mitigatesThreat" labelDirectEdit="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Change%20name']" sourceMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ControlNode'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Component%20Analysis']/@defaultLayer/@nodeMappings[name='ControlNode_CA']" targetMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']" targetFinderExpression="feature:threat" sourceFinderExpression="feature:control" targetExpression="var:self" domainClass="TRADES::ThreatMitigationRelation" useDomainElement="true">
          <style lineStyle="dash" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql: self.eGet('assessment')->toString()='Accepted'">
            <style lineStyle="dash" sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              <centerLabelStyleDescription labelSize="12">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.eGet('assessment')->toString()='Gap'">
            <style lineStyle="dash" sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription labelSize="12">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="Affect" labelDirectEdit="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='AffectEditLabel']" semanticCandidatesExpression="feature:eAllContents" sourceMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@containerMappings[name='ComponentPackage_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@containerMappings[name='ComponentContainer_SD']/@subContainerMappings[name='ComponentPackage_SD']" targetMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@containerMappings[name='ComponentPackage_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@containerMappings[name='ComponentContainer_SD']/@subContainerMappings[name='ComponentPackage_SD']" targetFinderExpression="feature:targetComponent" sourceFinderExpression="feature:sourceComponent" targetExpression="var: self" domainClass="TRADES::AffectRelation" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.dataLabelOnAffect()">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql: self.eGet('analysisStatus')->toString()='Confirmed'">
            <style targetArrow="InputClosedArrow" sizeComputationExpression="3">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.dataLabelOnAffect()">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="mitigatesThreatAllocation" labelDirectEdit="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Change%20name']" sourceMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@edgeMappings[name='allocatedThreat_TD']" targetMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Component%20Analysis']/@defaultLayer/@nodeMappings[name='ControlNode_CA'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ControlNode']" targetFinderExpression="feature:control" sourceFinderExpression="feature:mitigatedAllocation" targetExpression="var:self" domainClass="TRADES::ThreatMitigationRelation" useDomainElement="true">
          <style lineStyle="dash" sourceArrow="InputClosedArrow" targetArrow="NoDecoration" sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql: self.eGet('assessment')->toString()='Accepted'">
            <style lineStyle="dash" sourceArrow="InputClosedArrow" targetArrow="NoDecoration" sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              <centerLabelStyleDescription labelSize="12">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.eGet('assessment')->toString()='Gap'">
            <style lineStyle="dash" targetArrow="InputClosedArrow" sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription labelSize="12">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <containerMappings name="ComponentPackage_TD" detailDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='SubComponentDiagramCreation'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ComponentDesignDiagramCreation']" navigationDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='ComponentDiagNavTool']" preconditionExpression="aql: self->notEmpty() = true" labelDirectEdit="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Change%20name']" semanticCandidatesExpression="aql:self.components" domainClass="TRADES::ComponentOwner" reusedNodeMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ControlNode']" reusedContainerMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@containerMappings[name='ComponentPackage_TD']">
          <dropDescriptions href="#//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='DnDThreatOnComponent_TD']"/>
          <dropDescriptions href="#//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='DropCatalogControl_TD']"/>
          <dropDescriptions href="../../dsm.oscal.design/description/oscal.odesign#//@ownedViewpoints[name='OscalViewPoint']/@ownedRepresentationExtensions[name='TRADES.design']/@layers[name='OscalLayer']/@toolSections.0/@ownedTools[name='DropOScalControl']"/>
          <dropDescriptions href="../../dsm.oscal.design/description/oscal.odesign#//@ownedViewpoints[name='OscalViewPoint']/@ownedRepresentationExtensions[name='TRADES.design']/@layers[name='OscalLayer']/@toolSections.0/@ownedTools[name='DropOScalControl_TDExt']"/>
          <dropDescriptions href="#//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='ExternalControlDrop_TD']"/>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='Colors']/@entries[name='ComponetBGColor']" foregroundColor="//@userColorsPalettes[name='Colors']/@entries[name='ComponetBGColor']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelFormat>underline</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </containerMappings>
        <toolSections name="TRADES tools" label="Add" icon="/TRADES.design/Images/logo_16.png">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Threat" nodeMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.eContainerOrSelf(TRADES::Analysis).threatOwner">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::Threat" referenceName="internals">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="aql:self.generateUUID()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Control" nodeMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ControlNode']" iconPath="/TRADES.design/Images/ContrilIcon.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.createInternalControl()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="ComponentCreationTool" label="Component" containerMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@containerMappings[name='ComponentPackage_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@containerMappings[name='ComponentContainer_SD']/@subContainerMappings[name='ComponentPackage_SD']" iconPath="/TRADES.design/Images/ComponentIcon.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::Component" referenceName="components"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Threat Allocation" edgeMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@edgeMappings[name='allocatedThreat_TD']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:target">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::ThreatAllocationRelation" referenceName="threatAllocations">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="threat" valueExpression="var:source"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: self.threat.name + ' on ' + self.component.name"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Threat Mitigation " edgeMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@edgeMappings[name='mitigatesThreat'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@edgeMappings[name='mitigatesThreatAllocation']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: source">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::ThreatMitigationRelation" referenceName="mitigationRelations">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: instance">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="control" valueExpression="var:source"/>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql: target.oclIsKindOf(TRADES::Threat)">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="threat" valueExpression="var:target"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql: target.oclIsTypeOf(TRADES::ThreatAllocationRelation)">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="mitigatedAllocation" valueExpression="var:target"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Effect" edgeMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@edgeMappings[name='Affect']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: source">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::AffectRelation" referenceName="affectRelations">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="sourceComponent" valueExpression="var:source"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="targetComponent" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="Change name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ChangeThreatInThreatAllocation" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: element">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="threat" valueExpression="aql: target">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: element.threat.name + ' on ' + element.component.name"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ChangeComponentInThreatAllocation">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: element">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="component" valueExpression="aql: target">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: element.threat.name + ' on ' + element.component.name"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OpenProgramTool" precondition="aql:self.oclIsTypeOf(TRADES::ExternalThreat)" mappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.link.openInBrowser()"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PopupMenu" name="NewMenu_TD" label="New">
            <menuItemDescription xsi:type="tool_1:OperationAction" name="CreateScoreSystemTool_TD" label="New score system" precondition="aql:self.scoreSystem = null">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::ScoreSystem" referenceName="scoreSystem"/>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramNavigationDescription" name="AttachChainDiagramNavTool_TD" navigationNameExpression="aql:self.attackChain.name" diagramDescription="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='AttackChainDiagram']">
            <containerViewVariable name="containerView"/>
            <containerVariable name="container"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" name="SubComponentDiagramCreation" label="Analysis of component" diagramDescription="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Component%20Analysis']">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PopupMenu" name="DataMenu" label="Data" precondition="aql:self.oclIsKindOf(TRADES::AffectRelation)">
            <menuItemDescription xsi:type="tool_1:OperationAction" name="CreateNewData" label="Create New Data" precondition="aql:self.oclIsKindOf(TRADES::AffectRelation)">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(TRADES::AffectRelation)">
                  <subModelOperations xsi:type="tool_1:Let" variableName="affectRelation" valueExpression="var:self"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().createData()">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Add New Data">
                      <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:RemoveElement"/>
                        </initialOperation>
                      </buttons>
                      <buttons labelExpression="Add" default="true" closeDialogOnClick="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                            <subModelOperations xsi:type="tool_1:Let" variableName="newData" valueExpression="aql:self">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:affectRelation">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="data" valueExpression="var:newData"/>
                              </subModelOperations>
                            </subModelOperations>
                          </firstModelOperations>
                        </initialOperation>
                      </buttons>
                      <page name="Default Page" domainClass="TRADES::Data" semanticCandidateExpression="var:self" extends="//@extensions.0/@categories.0/@groups.13/@controls.0/@controls.0/@actions.0/@initialOperation/@firstModelOperations/@subModelOperations.1/@subModelOperations.0/@page"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
          <ownedTools xsi:type="tool_1:OperationAction" name="CreateAttackChainTool_TD" label="Create attack decomposition" precondition="aql:self.oclIsTypeOf(TRADES::ThreatAllocationRelation)">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(TRADES::ThreatAllocationRelation)">
                <subModelOperations xsi:type="tool_1:Let" variableName="relation" valueExpression="var:self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::AttackChain" referenceName="attackChain">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Attack decomposition on '+relation.threat.name"/>
                    <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='AttackChainDiagram']"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="AffectEditLabel">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.editAffectLabel(arg0)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" name="ComponentDesignDiagramCreation" label="Design component" diagramDescription="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
        </toolSections>
        <toolSections name="Representation Tools" label="Diagram tools" icon="/TRADES.design/Images/icons/diagram.gif">
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="Hide details" precondition="aql:self.oclAsType(TRADES::ComponentOwner)" candidatesExpression="aql:self.oclAsType(TRADES::ComponentOwner).components" multiple="true" message="Select components to hide in this diagram" iconPath="/TRADES.design/Images/inspectEncapSmall.png" windowTitle="Component encapsulation">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element->filter(TRADES::Component).encapsulateElements(containerView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="Unhide details" precondition="aql:self.oclAsType(TRADES::ComponentOwner)" candidatesExpression="aql:self.oclAsType(TRADES::ComponentOwner).components" multiple="true" message="Select components to show in this diagram" iconPath="/TRADES.design/Images/inspectDeEncapSmall.png" windowTitle="Cancel Component Encapsulation">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: element->filter(TRADES::Component).decapsulateElements(containerView)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="copyThreatDragDrop" precondition="aql:element.oclIsKindOf(TRADES::Threat) and not self.isFromCatalog()" mappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']" containerViewExpression="aql:newContainerView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:OperationAction" name="ImportControl" label="Import External Control in project" precondition="aql:self.oclIsTypeOf(TRADES::ExternalThreat)" icon="/TRADES.design/Images/icons/import_wiz.png">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" variableName="externalThreat" valueExpression="var:self">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Import controls">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                    </initialOperation>
                  </buttons>
                  <buttons labelExpression="Create" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:externalThreat.oclAsType(TRADES::ExternalThreat).copyControl(controls)"/>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='ImportControl']/@initialOperation/@firstModelOperations/@subModelOperations.0/@groups.0"/>
                  <groups name="RelatedControls" labelExpression="aql:'Controls for ' + self.name" domainClass="TRADES::ExternalThreat" semanticCandidateExpression="var:self">
                    <controls xsi:type="properties:ListDescription" name="ControlsList" labelExpression="aql:'Linked control'" helpExpression="aql:'Controls related to ' + self.name " valueExpression="aql:self.getLinkedControlInDataBases()" displayExpression="aql:value.name">
                      <onClickOperation>
                        <firstModelOperations xsi:type="tool_1:Let" variableName="controls" valueExpression="var:selection"/>
                      </onClickOperation>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="ExternalControlDrop_TD" precondition="aql:not element.isFromCatalog()" mappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ControlNode']">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newSemanticContainer.moveControl(element)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramNavigationDescription" name="ComponentDiagNavTool" diagramDescription="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Component%20Analysis']">
            <containerViewVariable name="containerView"/>
            <containerVariable name="container"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="DnDThreatOnComponent_TD" precondition="aql:element.oclIsKindOf(TRADES::Threat) and not self.isFromCatalog()" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newSemanticContainer">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::ThreatAllocationRelation" referenceName="threatAllocations">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="threat" valueExpression="var:element"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']" containerViewExpression="aql:newContainerView.oclAsType(viewpoint::DSemanticDecorator).getContainingDiagram()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="DropCatalogThreat_TD" precondition="aql:element.oclIsTypeOf(TRADES::ExternalThreat) and self.isFromCatalog()" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newSemanticContainer.copyTreat(element)">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']" containerViewExpression="aql:newContainerView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="DropCatalogControl_TD" precondition="aql:element.oclIsTypeOf(TRADES::ExternalControl) and element.isFromCatalog()" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newSemanticContainer.copyControl(element)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="ThreatsSectionTool_TD" label="Threats Tools" icon="/dsm.TRADES.edit/icons/custom/Threat.png">
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="ExtThreatImportTool_TD" label="Import external threat" precondition="aql:container.oclAsType(TRADES::Analysis)" candidatesExpression="aql:self.oclAsType(TRADES::Analysis).getAvailableExternalServices()->collect(e |e.eAllContents(TRADES::ExternalThreat))->union(self.oclAsType(TRADES::Analysis).getAvailableExternalServices())" multiple="true" tree="true" rootExpression="aql:self.oclAsType(TRADES::Analysis).getAvailableExternalServices()" childrenExpression="aql:self.eAllContents(TRADES::ExternalThreat)" iconPath="/TRADES.design/Images/icons/import_wiz.png">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="aql:element.oclAsType(TRADES::ExternalThreat)">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.oclAsType(TRADES::Analysis).copyTreat(i)">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']" containerViewExpression="var:containerView"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" documentation="Display a threat in the diagram (only non displayed threats are displayed)" name="AddThreat" label="Display threats" candidatesExpression="aql:self.getAllNonDisplayedThreats(containerView)" multiple="true" message="Please select threat(s)" iconPath="/TRADES.design/Images/icons/Display.png" windowImagePath="/TRADES.design/Images/icons/Display.png">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="aql: element">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']" containerViewExpression="var:containerView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" documentation="Display all allocated threats on the selection Component" name="Display Allocated Threats" label="Display Allocated Threats" precondition="aql:container.oclIsKindOf(TRADES::Component)" candidatesExpression="aql:self.threatAllocations.threat" multiple="true" iconPath="/TRADES.design/Images/icons/Display.png" windowImagePath="/TRADES.design/Images/icons/Display.png">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="aql: element">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self"/>
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']" containerViewExpression="var:diagram"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" documentation="Displays all the threats allocated to the target and its descendants." name="RelatedThreatTool_TD" label="Display All Allocated threats" precondition="aql:container.oclIsKindOf(TRADES::ComponentOwner)" candidatesExpression="aql:containerView.getRelatedThreats()" multiple="true" iconPath="/TRADES.design/Images/icons/Display.png" windowImagePath="/TRADES.design/Images/icons/Display.png">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="var:element" iteratorName="rThreat">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']" containerViewExpression="var:diagram"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteThreatFromDiagram">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:elementView">
                <subModelOperations xsi:type="tool_1:DeleteView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:OperationAction" name="DeleteThreatFromModelMenu" label="Delete from model" precondition="aql:views->any(v | not v.target.oclIsKindOf(TRADES::Threat)) == null" icon="/TRADES.design/Images/delete.png">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:views">
                <subModelOperations xsi:type="tool_1:For" expression="var:views" iteratorName="view">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:view.target">
                    <subModelOperations xsi:type="tool_1:Switch">
                      <cases conditionExpression="aql:self.oclIsKindOf(TRADES::Threat)">
                        <subModelOperations xsi:type="tool_1:For" expression="aql:self.threatAllocations">
                          <subModelOperations xsi:type="tool_1:RemoveElement"/>
                        </subModelOperations>
                      </cases>
                      <default>
                        <subModelOperations xsi:type="tool_1:RemoveElement"/>
                      </default>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='copyThreatDragDrop'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Component%20Analysis']/@defaultLayer/@toolSections.1/@ownedTools[name='ExternalControlDrop_CA'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='DropCatalogControl_TD']" name="Component Analysis" titleExpression="aql: 'Analysis of ' + self.name" domainClass="TRADES::Component">
      <metamodel href="dsm.TRADES#/"/>
      <validationSet name="threatRelatedValidation_CA" reusedRules="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@validationSet/@ownedRules[name='rejControlMitigates'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@validationSet/@ownedRules[name='unmitigatedThreat']"/>
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.layered" label="ELK Layered" description="Layer-based algorithm provided by the Eclipse Layout Kernel. Arranges as many edges as possible into one direction by placing nodes into subsequent layers. This implementation supports different routing styles (straight, orthogonal, splines); if orthogonal routing is selected, arbitrary port constraints are respected, thus enabling the layout of block diagrams such as actor-oriented models or circuit schematics. Furthermore, full layout of compound graphs with cross-hierarchy edges is supported when the respective option is activated on the top level.">
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.hierarchyHandling">
          <targets>PARENT</targets>
          <targets>NODE</targets>
          <value name="INCLUDE_CHILDREN"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.componentComponent" value="25.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.edgeEdge" value="25.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.nodeNode" value="25.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.layered.spacing.baseValue" value="25.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.layered.nodePlacement.strategy">
          <targets>PARENT</targets>
          <value name="NETWORK_SIMPLEX"/>
        </layoutOptions>
      </layout>
      <defaultLayer name="Default_CA" reusedMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@edgeMappings[name='allocatedThreat_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@edgeMappings[name='mitigatesThreat'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@edgeMappings[name='Affect'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@edgeMappings[name='mitigatesThreatAllocation'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']" reusedTools="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='DropCatalogControl_TD']">
        <nodeMappings name="ControlNode_CA" labelDirectEdit="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Change%20name']" semanticCandidatesExpression="aql:self.eContainerOrSelf(TRADES::Analysis).getAllControls()" createElements="false" domainClass="TRADES::Control">
          <borderedNodeMappings name="ControlLabel_CA" labelDirectEdit="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Change%20name']" semanticCandidatesExpression="var:self" domainClass="TRADES::Control">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.getLabelProviderText()" tooltipExpression="aql:self.getLabelProviderText()" labelPosition="node" width="7" height="2">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>EAST</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </borderedNodeMappings>
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" tooltipExpression="feature:name" hideLabelByDefault="true" sizeComputationExpression="-1" workspacePath="/TRADES.design/Images/controlImage.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(TRADES::ExternalControl)">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" tooltipExpression="feature:name" hideLabelByDefault="true" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/TRADES.design/Images/ExternalControlImage.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <containerMappings name="ComponentContainer_CA" detailDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ComponentDesignDiagramCreation']" semanticCandidatesExpression="aql:self" documentation="Used for component analysis. To be removed after resolving problem with seed element in componentPackage" domainClass="TRADES::Component" reusedNodeMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ControlNode'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']" reusedContainerMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@containerMappings[name='ComponentPackage_TD']">
          <dropDescriptions href="#//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='DropCatalogControl_TD']"/>
          <dropDescriptions href="../../dsm.oscal.design/description/oscal.odesign#//@ownedViewpoints[name='OscalViewPoint']/@ownedRepresentationExtensions[name='TRADES.design']/@layers[name='OscalLayer']/@toolSections.0/@ownedTools[name='DropOScalControl_TDExt']"/>
          <dropDescriptions href="#//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='ExternalControlDrop_TD']"/>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" backgroundColor="//@userColorsPalettes[name='Colors']/@entries[name='ComponetBGColor']" foregroundColor="//@userColorsPalettes[name='Colors']/@entries[name='ComponetBGColor']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </containerMappings>
        <toolSections name="Add" icon="/TRADES.design/Images/icons/add.gif" reusedTools="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Threat'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Control'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ComponentCreationTool'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Threat%20Allocation'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Threat%20Mitigation%20'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Effect'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='copyThreatDragDrop'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='ExternalControlDrop_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='DeleteThreatFromModelMenu'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='DeleteThreatFromDiagram'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='AttachChainDiagramNavTool_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Change%20name'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeComponentInThreatAllocation'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeThreatInThreatAllocation'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NewMenu_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='CreateAttackChainTool_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='OpenProgramTool'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='DropCatalogControl_TD']"/>
        <toolSections name="RepresentationTool_CAs" label="Diagram tools" icon="/TRADES.design/Images/icons/diagram.gif" reusedTools="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='Hide%20details'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='Unhide%20details']">
          <ownedTools xsi:type="tool_1:OperationAction" name="DisplayLinkedControl" label="Display linked controls on selection" precondition="aql:views->canImportLinkedControlOn()" icon="/TRADES.design/Images/icons/Display.png">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="var:views" iteratorName="view">
                <subModelOperations xsi:type="tool_1:For" expression="aql:view.getRelatedControls()" iteratorName="control">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Component%20Analysis']/@defaultLayer/@nodeMappings[name='ControlNode_CA']" containerViewExpression="var:diagram"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="ExternalControlDrop_CA" precondition="aql:not element.isFromCatalog()" mappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Component%20Analysis']/@defaultLayer/@nodeMappings[name='ControlNode_CA']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Component%20Analysis']/@defaultLayer/@nodeMappings[name='ControlNode_CA']" containerViewExpression="aql:newContainerView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="All Threats" reusedMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']" activeByDefault="true">
        <toolSections name="ThreatsSectionTool_CA" label="Threats Tools" icon="/dsm.TRADES.edit/icons/custom/Threat.png" reusedTools="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='AddThreat'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Display%20Allocated%20Threats'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='RelatedThreatTool_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='copyThreatDragDrop'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='ImportControl']">
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="ExtThreatImportTool_TD" label="Import external threat" candidatesExpression="aql:self.eContainer(TRADES::Analysis).getAvailableExternalServices()->collect(e |e.eAllContents(TRADES::ExternalThreat))->union(self.eContainer(TRADES::Analysis).getAvailableExternalServices())" multiple="true" tree="true" rootExpression="aql:self.eContainer(TRADES::Analysis).getAvailableExternalServices()" childrenExpression="aql:self.eAllContents(TRADES::ExternalThreat)" iconPath="/TRADES.design/Images/icons/import_wiz.png">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="aql:element.oclAsType(TRADES::ExternalThreat)">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.eContainer(TRADES::Analysis).copyTreat(i)">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']" containerViewExpression="var:containerView"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:CrossTableDescription" name="RiskManagementSummaryTable" label="Risk Management Summary" titleExpression="aql: self.name + ' Risk Management Summary'" initialisation="true" domainClass="TRADES::Analysis">
      <metamodel href="dsm.TRADES#/"/>
      <ownedLineMappings name="ImpactRow_RMS" label="Impac Row" domainClass="TRADES::ImpactScore" semanticCandidatesExpression="aql:self.scoreSystem.impactScores" headerLabelExpression="aql:self.getLabelProviderText()">
        <defaultForeground labelSize="15">
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
        </defaultForeground>
        <defaultBackground>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultBackground>
      </ownedLineMappings>
      <ownedCreateLine name="NewImpactRow_RMS" label="New impact score" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='RiskManagementSummaryTable']/@ownedLineMappings[name='ImpactRow_RMS']">
        <variables name="root" documentation="The semantic root element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="aql:self.scoreSystem">
          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::ImpactScore" referenceName="impactScores">
            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:instance.initImpactScore()"/>
          </subModelOperations>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedColumnMappings name="DifficultyColumn_RMS" label="Difficulty column" headerLabelExpression="aql:self.getLabelProviderText()" domainClass="TRADES::DifficultyScore" semanticCandidatesExpression="aql:self.scoreSystem.difficultyScores">
        <defaultBackground>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultBackground>
        <delete name="DeleteDiffultyTool" label="Delete difficulty">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:self">
            <subModelOperations xsi:type="tool_1:For" expression="aql:self.getLinkedConfigurations()" iteratorName="conf">
              <subModelOperations xsi:type="tool_1:RemoveElement"/>
            </subModelOperations>
            <subModelOperations xsi:type="tool_1:RemoveElement"/>
          </firstModelOperation>
        </delete>
      </ownedColumnMappings>
      <intersection name="ImpactConfiguration_RMS" semanticElements="aql:self.makeUnion(self, self.eContainer(),self.difficulty,self.impact)" canEdit="aql:false" lineMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='RiskManagementSummaryTable']/@ownedLineMappings[name='ImpactRow_RMS']" columnMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='RiskManagementSummaryTable']/@ownedColumnMappings.0" labelExpression="aql:lineSemantic.eInverse(TRADES::ThreatAllocationRelation)->select(r | r.difficultyScore = columnSemantic).getLabelProviderText()" useDomainClass="true" columnFinderExpression="aql:self.difficulty" lineFinderExpression="aql:self.impact" semanticCandidatesExpression="aql:self.scoreSystem.impactScores.configurations" domainClass="TRADES::ImpactConfiguration">
        <defaultForeground labelSize="10" foreGroundColor="//@userColorsPalettes[name='Colors']/@entries[name='HeatMapColorForeground']"/>
        <defaultBackground backgroundColor="//@userColorsPalettes[name='Colors']/@entries[name='HeatMapColorBackGround']"/>
      </intersection>
      <createColumn name="CreateDifficultyColum" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='RiskManagementSummaryTable']/@ownedColumnMappings.0">
        <variables name="root" documentation="The semantic root element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="aql:self.scoreSystem">
          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::DifficultyScore" referenceName="difficultyScores">
            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:instance.initDifficulty()"/>
          </subModelOperations>
        </firstModelOperation>
      </createColumn>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:CrossTableDescription" name="Controls to Components " domainClass="TRADES::Analysis">
      <metamodel href="dsm.TRADES#/"/>
      <ownedLineMappings name="Component Row" reusedInMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Controls%20to%20Components%20']/@ownedLineMappings[name='Component%20Row']/@ownedSubLines[name='subComp%20Row']" domainClass="TRADES::Component" semanticCandidatesExpression="aql:self.components">
        <ownedSubLines name="subComp Row" reusedSubLines="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Controls%20to%20Components%20']/@ownedLineMappings[name='Component%20Row']" domainClass="TRADES::Component" semanticCandidatesExpression="aql:self.components"/>
      </ownedLineMappings>
      <ownedColumnMappings name="Control Column" domainClass="TRADES::Control"/>
      <intersection name="Controls to Components Mapping Rejected" semanticElements="var:view" lineMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Controls%20to%20Components%20']/@ownedLineMappings[name='Component%20Row'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Controls%20to%20Components%20']/@ownedLineMappings[name='Component%20Row']/@ownedSubLines[name='subComp%20Row']" columnMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Controls%20to%20Components%20']/@ownedColumnMappings.0" labelExpression="aql:'V'" columnFinderExpression="aql:self.controlOwner.eAllContents(TRADES::Control)->select(c | c.status = TRADES::ControlStatusENUM::Rejected)" lineFinderExpression="feature:eContainer" domainClass="TRADES::Control">
        <defaultForeground>
          <labelFormat>bold</labelFormat>
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
        </defaultForeground>
      </intersection>
      <intersection name="Controls to Components Mapping Agreed" semanticElements="var:view" lineMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Controls%20to%20Components%20']/@ownedLineMappings[name='Component%20Row'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Controls%20to%20Components%20']/@ownedLineMappings[name='Component%20Row']/@ownedSubLines[name='subComp%20Row']" columnMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Controls%20to%20Components%20']/@ownedColumnMappings.0" labelExpression="aql:'V'" columnFinderExpression="aql:self.controlOwner.eAllContents(TRADES::Control)->select(c | c.status = TRADES::ControlStatusENUM::Agreed)" lineFinderExpression="feature:eContainer" domainClass="TRADES::Control">
        <defaultForeground>
          <labelFormat>bold</labelFormat>
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
        </defaultForeground>
      </intersection>
      <intersection name="Controls to Components Mapping Implemented" semanticElements="var:view" lineMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Controls%20to%20Components%20']/@ownedLineMappings[name='Component%20Row'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Controls%20to%20Components%20']/@ownedLineMappings[name='Component%20Row']/@ownedSubLines[name='subComp%20Row']" columnMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Controls%20to%20Components%20']/@ownedColumnMappings.0" labelExpression="aql:'V'" columnFinderExpression="aql:self.controlOwner.eAllContents(TRADES::Control)->select(c | c.status = TRADES::ControlStatusENUM::Implemented)" lineFinderExpression="feature:eContainer" domainClass="TRADES::Control">
        <defaultForeground>
          <labelFormat>bold</labelFormat>
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
        </defaultForeground>
      </intersection>
      <intersection name="Controls to Components Mapping Proposed" semanticElements="var:view" lineMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Controls%20to%20Components%20']/@ownedLineMappings[name='Component%20Row'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Controls%20to%20Components%20']/@ownedLineMappings[name='Component%20Row']/@ownedSubLines[name='subComp%20Row']" columnMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Controls%20to%20Components%20']/@ownedColumnMappings.0" labelExpression="aql:'V'" columnFinderExpression="aql:self.controlOwner.eAllContents(TRADES::Control)->select(c | c.status = TRADES::ControlStatusENUM::Proposed)" lineFinderExpression="feature:eContainer" domainClass="TRADES::Control">
        <defaultForeground>
          <labelFormat>bold</labelFormat>
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
        </defaultForeground>
      </intersection>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='AttackChainDiagram']/@additionalLayers[name='Threats']/@toolSections.0/@ownedTools[name='DropThreatRepresentation']" name="AttackChainDiagram" label="Attack chain diagram" titleExpression="aql:self.name+' description'" domainClass="TRADES::AttackChain" enablePopupBars="true">
      <metamodel href="dsm.TRADES#/"/>
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.layered" label="ELK Layered" description="Layer-based algorithm provided by the Eclipse Layout Kernel. Arranges as many edges as possible into one direction by placing nodes into subsequent layers. This implementation supports different routing styles (straight, orthogonal, splines); if orthogonal routing is selected, arbitrary port constraints are respected, thus enabling the layout of block diagrams such as actor-oriented models or circuit schematics. Furthermore, full layout of compound graphs with cross-hierarchy edges is supported when the respective option is activated on the top level.">
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.edgeNode" value="50.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.edgeEdge" value="50.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.hierarchyHandling">
          <targets>NODE</targets>
          <targets>PARENT</targets>
          <value name="INCLUDE_CHILDREN"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.layered.spacing.nodeNodeBetweenLayers" value="75.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.nodeNode" value="50.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.portPort">
          <targets>PARENT</targets>
          <targets>NODE</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.nodeSelfLoop">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.layered.spacing.edgeNodeBetweenLayers">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.componentComponent">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.labelLabel">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.edgeRouting">
          <targets>PARENT</targets>
          <value name="ORTHOGONAL"/>
        </layoutOptions>
      </layout>
      <defaultLayer name="Default">
        <nodeMappings name="AttackChainStep_ACD" semanticCandidatesExpression="feature:attackchainSteps" domainClass="TRADES::AttackChainStep" dropDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='AttackChainDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DropAllocation']">
          <style xsi:type="style:BundledImageDescription" labelSize="12" showIcon="false" labelExpression="aql:self.getAttackChainLabel()" sizeComputationExpression="13" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="NextMapping_ACT" deletionDescription="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='AttackChainDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DeleteNextLink_Tool_ACD']" sourceMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='AttackChainDiagram']/@defaultLayer/@nodeMappings[name='AttackChainStep_ACD']" targetMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='AttackChainDiagram']/@defaultLayer/@nodeMappings[name='AttackChainStep_ACD']" targetFinderExpression="feature:next" reconnections="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='AttackChainDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectAttackChaineTool_ACD']">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <toolSections name="Creation">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="StepCreationTool_ACD" label="Create step" nodeMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='AttackChainDiagram']/@defaultLayer/@nodeMappings[name='AttackChainStep_ACD']" iconPath="/TRADES.design/Images/icons/attack_chain_step.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::AttackChainStep" referenceName="attackchainSteps"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="NextEdgetCreationTool" label="Step link" precondition="aql:preSource.getAllPrevious()->intersection(preTarget.getAllNext())->isEmpty()" edgeMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='AttackChainDiagram']/@defaultLayer/@edgeMappings[name='NextMapping_ACT']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="next" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ReconnectAttackChaineTool_ACD">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="nexts" elementExpression="var:source"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="nexts" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="DropAllocation" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newSemanticContainer">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="threatAllocationRelation" valueExpression="var:element"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteNextLink_Tool_ACD">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="next" elementExpression="aql:elementView.targetNode.target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:OperationAction" name="DeleteAttackChainTool" label="Delete this attack chain" precondition="aql:self.oclIsKindOf(TRADES::AttackChain)">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" variableName="attackChain" valueExpression="var:self">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer()">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="attackChains" elementExpression="var:attackChain"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="Threats">
        <nodeMappings name="RelatedThreats" deletionDescription="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='AttackChainDiagram']/@additionalLayers[name='Threats']/@toolSections.0/@ownedTools[name='DeleteRelatedThreat']" semanticCandidatesExpression="aql:self.attackchainSteps.threatAllocationRelation.threat" createElements="false" domainClass="TRADES::Threat">
          <style xsi:type="style:EllipseNodeDescription" labelSize="15" tooltipExpression="aql: self.name" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="ThreatLink" sourceMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='AttackChainDiagram']/@defaultLayer/@nodeMappings[name='AttackChainStep_ACD']" targetMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='AttackChainDiagram']/@additionalLayers[name='Threats']/@nodeMappings[name='RelatedThreats']" targetFinderExpression="aql:self.threatAllocationRelation.threat">
          <style lineStyle="dot" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.threatAllocationRelation.component.name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <toolSections name="MainToolSection_ACD">
          <ownedTools xsi:type="tool:ContainerDropDescription" name="DropThreatRepresentation" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='AttackChainDiagram']/@additionalLayers[name='Threats']/@nodeMappings[name='RelatedThreats']" containerViewExpression="var:newContainerView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="SelectThreatWizardAndDisplay" candidatesExpression="aql:self.attackchainSteps.threatAllocationRelation.threat" multiple="true">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="var:element">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='AttackChainDiagram']/@additionalLayers[name='Threats']/@nodeMappings[name='RelatedThreats']" containerViewExpression="var:containerView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteRelatedThreat">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:DeleteView"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="DataByComponentDiagram" label="Data Structure" domainClass="TRADES::Analysis" enablePopupBars="true">
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.layered" label="ELK Layered" description="Layer-based algorithm provided by the Eclipse Layout Kernel. Arranges as many edges as possible into one direction by placing nodes into subsequent layers. This implementation supports different routing styles (straight, orthogonal, splines); if orthogonal routing is selected, arbitrary port constraints are respected, thus enabling the layout of block diagrams such as actor-oriented models or circuit schematics. Furthermore, full layout of compound graphs with cross-hierarchy edges is supported when the respective option is activated on the top level.">
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.edgeNode" value="50.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.edgeEdge" value="50.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.hierarchyHandling">
          <targets>NODE</targets>
          <targets>PARENT</targets>
          <value name="SEPARATE_CHILDREN"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.layered.spacing.nodeNodeBetweenLayers" value="75.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.nodeNode" value="50.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.portPort">
          <targets>PARENT</targets>
          <targets>NODE</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.nodeSelfLoop">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.layered.spacing.edgeNodeBetweenLayers">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.componentComponent">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.labelLabel">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.edgeRouting">
          <targets>PARENT</targets>
          <value name="ORTHOGONAL"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.direction">
          <targets>PARENT</targets>
          <value name="DOWN"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.layered.layering.strategy">
          <targets>PARENT</targets>
          <value name="INTERACTIVE"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.layered.nodePlacement.strategy">
          <targets>PARENT</targets>
          <value name="LINEAR_SEGMENTS"/>
        </layoutOptions>
      </layout>
      <defaultLayer name="Default">
        <edgeMappings name="Children_DCD" sourceMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataByComponentDiagram']/@defaultLayer/@containerMappings[name='DataOwnerElement_DCD']" targetMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataByComponentDiagram']/@defaultLayer/@containerMappings[name='DataOwnerElement_DCD']" targetFinderExpression="aql:self.components">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="DataOwnerElement_DCD" semanticCandidatesExpression="aql:self.getDataOwnerElements()" domainClass="TRADES::DataOwnerElement" dropDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataByComponentDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DataDNDTool_DCD']" childrenPresentation="List">
          <subNodeMappings name="Data" detailDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataByComponentDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DataflowCreationTool']" navigationDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataByComponentDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DataflowNavigationTool']" labelDirectEdit="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataByComponentDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='RenameDataTool_DCD']" semanticCandidatesExpression="aql:self.getDatas()" domainClass="TRADES::Data">
            <style xsi:type="style:BundledImageDescription" labelSize="12" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" widthComputationExpression="15" heightComputationExpression="15" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='Colors']/@entries[name='ComponetBGColor']" foregroundColor="//@userColorsPalettes[name='Colors']/@entries[name='ComponetBGColor']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelFormat>underline</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
          <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(TRADES::Analysis)">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <toolSections name="DCDTools">
          <ownedTools xsi:type="tool:DirectEditLabel" name="RenameDataTool_DCD">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="DataDNDTool_DCD" mappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataByComponentDiagram']/@defaultLayer/@containerMappings[name='DataOwnerElement_DCD']/@subNodeMappings[name='Data']">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.moveData(newSemanticContainer)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="DataCreationTool_DCD" nodeMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataByComponentDiagram']/@defaultLayer/@containerMappings[name='DataOwnerElement_DCD']/@subNodeMappings[name='Data']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.createData()"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramNavigationDescription" name="DataflowNavigationTool" diagramDescription="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataFlowDiagram']">
            <containerViewVariable name="containerView"/>
            <containerVariable name="container"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" name="DataflowCreationTool" diagramDescription="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataFlowDiagram']">
            <initialOperation/>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="AvailableData_DCD" label="Available Data">
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="ComponentNode_DS" detailDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ComponentDesignDiagramCreation']" reusedNodeMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataByComponentDiagram']/@defaultLayer/@containerMappings[name='DataOwnerElement_DCD']/@subNodeMappings[name='Data']" childrenPresentation="List" importedMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataByComponentDiagram']/@defaultLayer/@containerMappings[name='DataOwnerElement_DCD']">
          <subNodeMappings name="InheritedData" semanticCandidatesExpression="aql:self.getInheritedData()" domainClass="TRADES::Data">
            <style xsi:type="style:BundledImageDescription" labelSize="12" labelExpression="aql:'/'+self.name" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>underline</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
        </containerMappings>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" documentation="Display the flow of a data" name="DataFlowDiagram" label="Data Flow Diagram" titleExpression="aql:'Data flow of '+self.name" domainClass="TRADES::Data" enablePopupBars="true">
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.layered" label="ELK Layered" description="Layer-based algorithm provided by the Eclipse Layout Kernel. Arranges as many edges as possible into one direction by placing nodes into subsequent layers. This implementation supports different routing styles (straight, orthogonal, splines); if orthogonal routing is selected, arbitrary port constraints are respected, thus enabling the layout of block diagrams such as actor-oriented models or circuit schematics. Furthermore, full layout of compound graphs with cross-hierarchy edges is supported when the respective option is activated on the top level.">
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.edgeNode" value="50.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.edgeEdge" value="10.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.hierarchyHandling">
          <targets>NODE</targets>
          <targets>PARENT</targets>
          <value name="INCLUDE_CHILDREN"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.layered.spacing.nodeNodeBetweenLayers" value="75.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.nodeNode" value="50.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.portPort" value="10.0">
          <targets>PARENT</targets>
          <targets>NODE</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.nodeSelfLoop" value="10.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.layered.spacing.edgeNodeBetweenLayers" value="10.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.componentComponent" value="20.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.labelLabel" value="10.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.edgeRouting">
          <targets>PARENT</targets>
          <value name="ORTHOGONAL"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.direction">
          <targets>PARENT</targets>
          <value name="UP"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.layered.layering.strategy">
          <targets>PARENT</targets>
          <value name="LONGEST_PATH"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.layered.nodePlacement.strategy">
          <targets>PARENT</targets>
          <value name="LINEAR_SEGMENTS"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.layered.crossingMinimization.strategy">
          <targets>PARENT</targets>
          <value name="LAYER_SWEEP"/>
        </layoutOptions>
      </layout>
      <defaultLayer name="Default">
        <edgeMappings name="AffetRelation_DFD" semanticCandidatesExpression="aql:self.getAffectRelationsBy()" sourceMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataFlowDiagram']/@defaultLayer/@containerMappings[name='FitleredByDataComponent_DFD']/@subContainerMappings[name='FitleredByDataComponentChild_DFD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataFlowDiagram']/@defaultLayer/@containerMappings[name='FitleredByDataComponent_DFD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@containerMappings[name='ComponentPackage_TD']" targetMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataFlowDiagram']/@defaultLayer/@containerMappings[name='FitleredByDataComponent_DFD']/@subContainerMappings[name='FitleredByDataComponentChild_DFD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataFlowDiagram']/@defaultLayer/@containerMappings[name='FitleredByDataComponent_DFD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@containerMappings[name='ComponentPackage_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Component%20Analysis']/@defaultLayer/@containerMappings[name='ComponentContainer_CA']" targetFinderExpression="aql:self.targetComponent" sourceFinderExpression="aql:self.sourceComponent" domainClass="TRADES::AffectRelation" useDomainElement="true">
          <style sizeComputationExpression="4">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:diagram.target.name">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings xsi:type="description_1:ContainerMappingImport" name="FitleredByDataComponent_DFD" semanticCandidatesExpression="aql:self.getRootAffectedComponentsByData()" domainClass="TRADES::Component" importedMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@containerMappings[name='ComponentPackage_TD']">
          <subContainerMappings xsi:type="description_1:ContainerMappingImport" name="FitleredByDataComponentChild_DFD" semanticCandidatesExpression="aql:self.getSubComponentAffectBy(diagram.target)" domainClass="TRADES::Component" reusedContainerMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='DataFlowDiagram']/@defaultLayer/@containerMappings[name='FitleredByDataComponent_DFD']/@subContainerMappings[name='FitleredByDataComponentChild_DFD']" importedMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@containerMappings[name='ComponentPackage_TD']">
            <conditionnalStyles predicateExpression="aql:self.isComponentDataPassThrough(view)">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" borderLineStyle="dash" labelSize="12" showIcon="false" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='Colors']/@entries[name='ComponetBGColor']" foregroundColor="//@userColorsPalettes[name='Colors']/@entries[name='ComponetBGColor']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
                <labelFormat>bold</labelFormat>
                <labelFormat>underline</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              </style>
            </conditionnalStyles>
          </subContainerMappings>
        </containerMappings>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='copyThreatDragDrop'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@toolSections.1/@ownedTools[name='ExternalControlDrop_CA'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='DropCatalogThreat_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='DropCatalogControl_TD']" name="System Design" titleExpression="aql: 'Design of ' + self.name" domainClass="TRADES::Component">
      <metamodel href="dsm.TRADES#/"/>
      <validationSet name="SystemDesignValidation" reusedRules="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@validationSet/@ownedRules[name='rejControlMitigates'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@validationSet/@ownedRules[name='unmitigatedThreat']">
        <ownedRules xsi:type="validation:ViewValidationRule" name="NoLinkType" message="No link type was specified for this link">
          <audits auditExpression="aql: not(self.target.linkType->isEmpty())"/>
        </ownedRules>
        <ownedRules xsi:type="validation:SemanticValidationRule" name="noLinkRoute" level="WARNING" message="aql: 'Linked components are not covered by the conveying links [' + self.name + ']'" targetClass="TRADES::Link">
          <audits auditExpression="aql: self.conveyingLink.components->includesAll(self.components) or self.conveyingLink->isEmpty()"/>
        </ownedRules>
        <ownedRules xsi:type="validation:SemanticValidationRule" name="noLinkForAffect" message="aql: 'No link was specified for conveying the data/effect flow [' + self.data.name + ' from ' +self.sourceComponent.name + ' to ' + self.targetComponent.name +']'" targetClass="TRADES::AffectRelation">
          <audits auditExpression="aql: self.link->notEmpty()"/>
        </ownedRules>
        <ownedRules xsi:type="validation:SemanticValidationRule" name="linkMismatchForAffect" level="ERROR" message="aql: 'Conveying link does not connect the data/effect flow source and target [' + self.sourceComponent.name + ' and ' + self.targetComponent.name +' respectively]'" targetClass="TRADES::AffectRelation">
          <audits auditExpression="aql: (self.link.components->includes(self.sourceComponent) and self.link.components->includes(self.targetComponent)) or self.link->isEmpty()"/>
          <fixes name="Connect the data/effect flow source and target components using the conveying link">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" variableName="affect" valueExpression="aql: self">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: affect.link">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="components" valueExpression="aql: affect.sourceComponent"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="components" valueExpression="aql: affect.targetComponent"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </fixes>
          <fixes name="Change the conveying link to another link which conncets the source and target elements"/>
        </ownedRules>
      </validationSet>
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.layered" label="ELK Layered" description="Layer-based algorithm provided by the Eclipse Layout Kernel. Arranges as many edges as possible into one direction by placing nodes into subsequent layers. This implementation supports different routing styles (straight, orthogonal, splines); if orthogonal routing is selected, arbitrary port constraints are respected, thus enabling the layout of block diagrams such as actor-oriented models or circuit schematics. Furthermore, full layout of compound graphs with cross-hierarchy edges is supported when the respective option is activated on the top level.">
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.hierarchyHandling">
          <targets>PARENT</targets>
          <targets>NODE</targets>
          <value name="INCLUDE_CHILDREN"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.componentComponent" value="25.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.edgeEdge" value="25.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.nodeNode" value="25.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.layered.spacing.baseValue" value="25.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.layered.nodePlacement.strategy">
          <targets>PARENT</targets>
          <value name="NETWORK_SIMPLEX"/>
        </layoutOptions>
      </layout>
      <defaultLayer name="Default" reusedMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@edgeMappings[name='allocatedThreat_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@edgeMappings[name='mitigatesThreat'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@edgeMappings[name='Affect'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@edgeMappings[name='mitigatesThreatAllocation'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Component%20Analysis']/@defaultLayer/@nodeMappings[name='ControlNode_CA']" reusedTools="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='AffectEditLabel'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='SubComponentDiagramCreation'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='AttachChainDiagramNavTool_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Change%20name'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeComponentInThreatAllocation'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeThreatInThreatAllocation'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ComponentCreationTool'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DataMenu'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DataMenu']/@menuItemDescription.0 //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Effect'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NewMenu_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NewMenu_TD']/@menuItemDescription.0 //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='OpenProgramTool']">
        <nodeMappings name="extComponentLinks_SD" labelDirectEdit="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Change%20name']" semanticCandidatesExpression="aql: self.eContainer(TRADES::Analysis).eAllContents(TRADES::Link)->select(myLink | self.eAllContents(TRADES::Link)->excludes(myLink))" createElements="false" domainClass="TRADES::Link">
          <style xsi:type="style:WorkspaceImageDescription" borderColor="//@userColorsPalettes[name='Colors']/@entries[name='LinkTypeColor']" showIcon="false" labelColor="//@userColorsPalettes[name='Colors']/@entries[name='LinkTypeColor']" labelAlignment="RIGHT" tooltipExpression="aql: self.name" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/TRADES.design/Images/Link30.svg"/>
        </nodeMappings>
        <edgeMappings name="LinkComponents_SD" sourceMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@containerMappings[name='ComponentContainer_SD']/@subNodeMappings[name='componentLinks'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@nodeMappings[name='extComponentLinks_SD']" targetMapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='Component%20Analysis']/@defaultLayer/@containerMappings[name='ComponentContainer_CA'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@containerMappings[name='ComponentContainer_SD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@containerMappings[name='ComponentContainer_SD']/@subContainerMappings[name='ComponentPackage_SD']" targetFinderExpression="aql: self.components">
          <style strokeColor="//@userColorsPalettes[name='Colors']/@entries[name='LinkTypeColor']" targetArrow="NoDecoration" sizeComputationExpression="2">
            <centerLabelStyleDescription labelSize="12" labelColor="//@userColorsPalettes[name='Colors']/@entries[name='LinkTypeColor']"/>
          </style>
        </edgeMappings>
        <containerMappings name="LinkTypeContainer_SD" semanticCandidatesExpression="aql: self.eContainer(TRADES::Analysis)" domainClass="TRADES::Analysis" childrenPresentation="List">
          <subNodeMappings name="linkType" semanticCandidatesExpression="aql: self.eContents(TRADES::LinkType)" domainClass="TRADES::LinkType">
            <style xsi:type="style:BundledImageDescription" borderColor="//@userColorsPalettes[name='Colors']/@entries[name='HeatMapColorBackGround']" showIcon="false" labelColor="//@userColorsPalettes[name='Colors']/@entries[name='HeatMapColorBackGround']" labelAlignment="LEFT" tooltipExpression="aql: self.name" labelPosition="node" resizeKind="NSEW" color="//@userColorsPalettes[name='Colors']/@entries[name='HeatMapColorBackGround']"/>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql: 'Link Types Legend'" tooltipExpression="Link Types" roundedCorner="true">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="ComponentContainer_SD" detailDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ComponentDesignDiagramCreation']" semanticCandidatesExpression="aql:self" documentation="Used for component analysis. To be removed after resolving problem with seed element in componentPackage" domainClass="TRADES::Component" dropDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='DropCatalogControl_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='ExternalControlDrop_TD']" reusedNodeMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ControlNode'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ThreatNode_TD']">
          <subNodeMappings name="componentLinks" labelDirectEdit="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Change%20name']" semanticCandidatesExpression="aql: self.links" domainClass="TRADES::Link">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelAlignment="RIGHT" tooltipExpression="aql: self.name" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/TRADES.design/Images/Link30.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <subContainerMappings name="ComponentPackage_SD" detailDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='SubComponentDiagramCreation'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ComponentDesignDiagramCreation']" navigationDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='ComponentDiagNavTool']" preconditionExpression="aql: self->notEmpty() = true" labelDirectEdit="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Change%20name']" semanticCandidatesExpression="aql:self.components" domainClass="TRADES::ComponentOwner" dropDescriptions="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='DnDThreatOnComponent_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='DropCatalogControl_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='ExternalControlDrop_TD']" reusedNodeMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@nodeMappings[name='ControlNode'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@containerMappings[name='ComponentContainer_SD']/@subNodeMappings[name='componentLinks']" reusedContainerMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@containerMappings[name='ComponentContainer_SD']/@subContainerMappings[name='ComponentPackage_SD']">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='Colors']/@entries[name='ComponetBGColor']" foregroundColor="//@userColorsPalettes[name='Colors']/@entries[name='ComponetBGColor']">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelFormat>underline</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" backgroundColor="//@userColorsPalettes[name='Colors']/@entries[name='ComponetBGColor']" foregroundColor="//@userColorsPalettes[name='Colors']/@entries[name='ComponetBGColor']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </containerMappings>
        <toolSections name="Add" icon="/TRADES.design/Images/icons/add.gif" reusedTools="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ComponentCreationTool'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Effect'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='copyThreatDragDrop'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='ExternalControlDrop_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='DeleteThreatFromModelMenu'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='DeleteThreatFromDiagram'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='AttachChainDiagramNavTool_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Change%20name'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeComponentInThreatAllocation'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeThreatInThreatAllocation'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NewMenu_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='CreateAttackChainTool_TD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='OpenProgramTool']">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="AddLinkOrComponent" label="Link Components" edgeMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@edgeMappings[name='LinkComponents_SD']" iconPath="/TRADES.design/Images/Link16.png" extraSourceMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@containerMappings[name='ComponentContainer_SD']/@subContainerMappings[name='ComponentPackage_SD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@containerMappings[name='ComponentContainer_SD']/@subNodeMappings[name='componentLinks'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@containerMappings[name='ComponentContainer_SD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@nodeMappings[name='extComponentLinks_SD']" extraTargetMappings="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@containerMappings[name='ComponentContainer_SD']/@subContainerMappings[name='ComponentPackage_SD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@containerMappings[name='ComponentContainer_SD']/@subNodeMappings[name='componentLinks'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@containerMappings[name='ComponentContainer_SD'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@nodeMappings[name='extComponentLinks_SD']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: source">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql: source.oclIsTypeOf(TRADES::Link)">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="components" valueExpression="aql: target"/>
                  </cases>
                  <cases conditionExpression="aql: target.oclIsTypeOf(TRADES::Link)">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: target">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="components" valueExpression="aql: source"/>
                    </subModelOperations>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: source.eContainer()">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::Link" referenceName="links">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="components" valueExpression="aql: source"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="components" valueExpression="aql: target"/>
                      </subModelOperations>
                    </subModelOperations>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="RepresentationTool_CAs" label="Diagram tools" icon="/TRADES.design/Images/icons/diagram.gif" reusedTools="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='Hide%20details'] //@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='TRADES%20diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='Unhide%20details']">
          <ownedTools xsi:type="tool_1:OperationAction" name="DisplayLinkedControl" label="Display linked controls on selection" precondition="aql:views->canImportLinkedControlOn()" icon="/TRADES.design/Images/icons/Display.png">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="var:views" iteratorName="view">
                <subModelOperations xsi:type="tool_1:For" expression="aql:view.getRelatedControls()" iteratorName="control">
                  <subModelOperations xsi:type="tool:CreateView" containerViewExpression="var:diagram"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="ExternalControlDrop_CA" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:CreateView" containerViewExpression="aql:newContainerView"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="LinksSectionTool_TD" label="Links Tools" icon="/TRADES.design/Images/Link16.png">
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" documentation="Display a threat in the diagram (only non displayed threats are displayed)" name="Display available links" label="Display links" candidatesExpression="aql: self.eContainer(TRADES::Analysis).eAllContents(TRADES::Link)->select(myLink | self.eAllContents(TRADES::Link)->excludes(myLink))" multiple="true" message="Please select threat(s)" iconPath="/TRADES.design/Images/icons/Display.png" windowImagePath="/TRADES.design/Images/icons/Display.png">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="aql: element">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self"/>
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@nodeMappings[name='extComponentLinks_SD']" containerViewExpression="var:diagram"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" documentation="Display all allocated threats on the selection Component" name="Display Allocated Links" precondition="aql:container.oclIsKindOf(TRADES::Component)" candidatesExpression="aql:self.eContainer(TRADES::Analysis).eAllContents(TRADES::Link)->select(myLink | myLink.components->includes(self))" multiple="true" iconPath="/TRADES.design/Images/icons/Display.png" windowImagePath="/TRADES.design/Images/icons/Display.png">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="aql: element">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self"/>
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='TRADESview']/@ownedRepresentations[name='System%20Design']/@defaultLayer/@nodeMappings[name='extComponentLinks_SD']" containerViewExpression="var:diagram"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="TRADES.design.DiagramService"/>
    <ownedJavaExtensions qualifiedClassName="TRADES.design.ExtThreatServices"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.sirius.ext.emf.edit.EditingDomainServices"/>
    <ownedJavaExtensions qualifiedClassName="TRADES.design.ColorService"/>
    <ownedJavaExtensions qualifiedClassName="TRADES.design.SemanticService"/>
    <ownedJavaExtensions qualifiedClassName="TRADES.design.DebugService"/>
  </ownedViewpoints>
  <userColorsPalettes name="Colors">
    <entries xsi:type="description:ComputedColor" name="HeatMapColorBackGround" red="aql:self.color.getRed()" green="aql:self.color.getGreen()" blue="aql:self.color.getBlue()"/>
    <entries xsi:type="description:ComputedColor" name="HeatMapColorForeground" red="aql:self.oclAsType(TRADES::ImpactConfiguration).color.getForegroundColorForColor().getRed()" green="aql:self.oclAsType(TRADES::ImpactConfiguration).color.getForegroundColorForColor().getGreen()" blue="aql:self.oclAsType(TRADES::ImpactConfiguration).color.getForegroundColorForColor().getBlue()"/>
    <entries xsi:type="description:UserFixedColor" red="245" green="245" blue="245" name="ComponetBGColor"/>
    <entries xsi:type="description:UserFixedColor" red="230" green="230" blue="230" name="ComponetDiagramBGColor"/>
    <entries xsi:type="description:ComputedColor" name="LinkTypeColor" red="aql:self.linkType.color.getRed()" green="aql:self.linkType.color.getGreen()" blue="aql:self.linkType.color.getBlue()"/>
    <entries xsi:type="description:ComputedColor" name="ControlStatusColor" red="aql: co" green="aql: self.status*1000" blue="aql: if(columnSemantic.status=TRADES::ControlStatusENUM::Rejected) then 1000 else 0"/>
  </userColorsPalettes>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Properties">
    <metamodels href="dsm.TRADES#/"/>
    <metamodels href="http://www.eclipse.org/emf/2002/Ecore#/"/>
    <categories name="GeneralCategory">
      <pages name="ThreatGeneralPage" label="Threat General" labelExpression="General" domainClass="TRADES::Threat" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0 //@extensions.0/@categories.0/@groups.1 //@extensions.0/@categories.0/@groups.7"/>
      <pages name="ControlGeneralPage" label="Control General Page" labelExpression="General" domainClass="TRADES::Control" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0 //@extensions.0/@categories.0/@groups.2 //@extensions.0/@categories.0/@groups.8"/>
      <pages name="ComponentGeneralPage" label="Component General Page" labelExpression="Component" domainClass="TRADES::Component" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0 //@extensions.0/@categories.0/@groups.3"/>
      <pages name="AttackChainStep_Page" labelExpression="Attack chain step" domainClass="TRADES::AttackChainStep" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.15"/>
      <pages name="AttackChain_Page" labelExpression="Attack chain" domainClass="TRADES::AttackChain" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.14"/>
      <pages name="ThreatAllocationPage" label="Threat Allocation Page" labelExpression="Threat allocation Relation" domainClass="TRADES::ThreatAllocationRelation" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.4 //@extensions.0/@categories.0/@groups.16"/>
      <pages name="ThreatMitigationPage" label="Threat Mitigation Page" labelExpression="General" domainClass="TRADES::ThreatMitigationRelation" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0 //@extensions.0/@categories.0/@groups.5"/>
      <pages name="AnalysisPage" label="Analysis Page" labelExpression="General " domainClass="TRADES::Analysis" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0 //@extensions.0/@categories.0/@groups.6"/>
      <pages name="ImpactConfigurationPage" label="Impact Configuration" labelExpression="Impact configuration" domainClass="TRADES::ImpactConfiguration" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.11"/>
      <pages name="ImpactScorePage" labelExpression="Impact score" domainClass="TRADES::ImpactScore" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0 //@extensions.0/@categories.0/@groups.9"/>
      <pages name="DifficultyPage" labelExpression="Difficulty" domainClass="TRADES::DifficultyScore" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0 //@extensions.0/@categories.0/@groups.10"/>
      <pages name="ScoreSystemPage" labelExpression="Score system" domainClass="TRADES::ScoreSystem" semanticCandidateExpression="aql:Sequence{self,self.eContainer()}" groups="//@extensions.0/@categories.0/@groups.12"/>
      <pages name="AffectPage" label="Affect Page" labelExpression="Affect" domainClass="TRADES::AffectRelation" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.13 //@extensions.0/@categories.0/@groups.19"/>
      <pages name="LinkeThreatAllocationRelation_Page" label="Linked Threat Allocation" labelExpression="Linked allocation" domainClass="TRADES::ThreatAllocationRelation" semanticCandidateExpression="aql:self.threatAllocationRelation" groups="//@extensions.0/@categories.0/@groups.4" indented="true"/>
      <pages name="DataPage" labelExpression="Data" domainClass="TRADES::Data" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0"/>
      <pages name="OwnedDataPage" labelExpression="Available Data" domainClass="TRADES::DataOwnerElement" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.17"/>
      <pages name="LinkPage" label="Link Page" labelExpression="Link" domainClass="TRADES::Link" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0 //@extensions.0/@categories.0/@groups.20"/>
      <pages name="LinkTypePage" label="Link Type Page" labelExpression="Link type" domainClass="TRADES::LinkType" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.21"/>
      <pages name="CatalogPage" labelExpression="General" domainClass="TRADES::Catalog" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.22"/>
      <groups name="ModelElementGroup" label="Model element" labelExpression="Basic Properties" domainClass="TRADES::NamedElement" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="ElementNameFiald" label="Name" labelExpression="Name" helpExpression="Name of the element" isEnabledExpression="aql:not(self.oclIsTypeOf(TRADES::ExternalThreat) or self.oclIsTypeOf(TRADES::ExternalControl) or self.oclIsTypeOf(TRADES::ThreatMitigationRelation)" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ThreatGroup" label="Threat Details" labelExpression="Threat Details" domainClass="TRADES::Threat" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="ThreatContainer">
          <controls xsi:type="properties:TextDescription" name="ThreatIDFieald" label="ID" labelExpression="ID" helpExpression="ID of the threat" isEnabledExpression="aql:self.oclIsTypeOf(TRADES::Threat)" valueExpression="aql:self.id">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="ThreatTypeField" label="Threat Type" labelExpression="Threat Type" helpExpression="The type of the treat" isEnabledExpression="aql:self.oclIsTypeOf(TRADES::Threat)" valueExpression="aql:TRADES::threatTypeENUM.getEEnumLiteral(self.threatType.toString())" candidatesExpression="aql:TRADES::threatTypeENUM.eLiterals" candidateDisplayExpression="aql:candidate.name">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="threatType" valueExpression="aql:newValue.instance"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:FillLayoutDescription" orientation="HORIZONTAL"/>
        </controls>
        <controls xsi:type="properties:TextDescription" name="ThreatApplicabilityField" label="Applicability Field" labelExpression="Applicability" isEnabledExpression="aql:self.oclIsTypeOf(TRADES::Threat)" valueExpression="aql:self.applicability">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="applicability" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="ThreatDescriptionField" label="Threat Description" labelExpression="Description" isEnabledExpression="aql:self.oclIsTypeOf(TRADES::Threat)" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ControlGroup" label="Control Details" labelExpression="Control Details" domainClass="TRADES::Control" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:SelectDescription" name="Status" labelExpression="Status" isEnabledExpression="aql:self.oclIsTypeOf(TRADES::Control)" valueExpression="aql: TRADES::ControlStatusENUM.getEEnumLiteral(self.status.toString())" candidatesExpression="aql: TRADES::ControlStatusENUM.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="status" valueExpression="aql:newValue.instance"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="ControlDFieald" label="ID" labelExpression="ID" helpExpression="ID of the control" isEnabledExpression="aql:self.oclIsTypeOf(TRADES::Control)" valueExpression="aql:self.id">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="ControlDescriptionField" label="Control Description" labelExpression="Description" isEnabledExpression="aql:self.oclIsTypeOf(TRADES::Control)" valueExpression="aql:self.description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="description" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ComponentGroup" label="Component Details" labelExpression="Component Details" domainClass="TRADES::Component" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ListDescription" name="ThreatAllocationList" label="Threat Allocation" labelExpression="Allocated Threats" valueExpression="aql:self.threatAllocations.threat" displayExpression="aql:value.name">
          <onClickOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
          </onClickOperation>
        </controls>
      </groups>
      <groups name="ThreatAllocationGroup" label="Threat Allocation Details" labelExpression="Details" domainClass="TRADES::ThreatAllocationRelation" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="ThreatAlocationContainer_DiffImapct">
          <controls xsi:type="properties:ContainerDescription" name="ImpactDiff_Container">
            <controls xsi:type="properties:SelectDescription" name="ImpactField" label="Impact Field" labelExpression="Impact" helpExpression="The Impact of the threat from declered impacts in scoring system (can be added/changed)" valueExpression="aql:self.impactScore" candidatesExpression="aql:self.eContainer(TRADES::Analysis).scoreSystem.impactScores" candidateDisplayExpression="aql:candidate.getLabelProviderText()">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="impactScore" valueExpression="aql:newValue"/>
                </firstModelOperations>
              </initialOperation>
            </controls>
            <controls xsi:type="properties:ButtonDescription" name="NewImpactScoreFromThreatAllocation_Button" helpExpression="Creates a new impact score" imageExpression="/TRADES.design/Images/add_obj.gif">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:Let" variableName="threatAlloc" valueExpression="var:self"/>
                  <subModelOperations xsi:type="tool_1:Let" variableName="scoreSystem" valueExpression="aql:self.eContainerOrSelf(TRADES::Analysis).scoreSystem">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:scoreSystem">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::ImpactScore" referenceName="impactScores" variableName="newImpact">
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newImpact.initImpactScore()">
                          <subModelOperations xsi:type="tool_1:Let" variableName="newImpactScore" valueExpression="var:newImpact">
                            <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New impact score">
                              <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                                <initialOperation>
                                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newImpactScore">
                                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                                  </firstModelOperations>
                                </initialOperation>
                              </buttons>
                              <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                                <initialOperation>
                                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:threatAlloc">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="impactScore" valueExpression="var:newImpactScore"/>
                                  </firstModelOperations>
                                </initialOperation>
                              </buttons>
                              <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.4/@controls.0/@controls.0/@controls.1/@initialOperation/@firstModelOperations/@subModelOperations.1/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                              <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
                                <controls xsi:type="properties:TextDescription" name="NewImpactScoreScore_Text" labelExpression="New score" valueExpression="aql:newImpactScore.impact">
                                  <initialOperation>
                                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newImpactScore">
                                      <subModelOperations xsi:type="tool_1:SetValue" featureName="impact" valueExpression="var:newValue"/>
                                    </firstModelOperations>
                                  </initialOperation>
                                </controls>
                              </groups>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </controls>
            <controls xsi:type="properties:SelectDescription" name="DifficultyScoreField" label="Difficulty Score Field" labelExpression="Difficulty" helpExpression="The difficulty of the threat from declered impacts in scoring system (can be added/changed)" valueExpression="aql:self.difficultyScore" candidatesExpression="aql:self.eContainer(TRADES::Analysis).scoreSystem.difficultyScores" candidateDisplayExpression="aql:candidate.getLabelProviderText()">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="difficultyScore" valueExpression="aql:newValue"/>
                </firstModelOperations>
              </initialOperation>
            </controls>
            <controls xsi:type="properties:ButtonDescription" name="NewDifficultyScoreFromThreatAllocation_Button" helpExpression="Creates a new Difficulty score" imageExpression="/TRADES.design/Images/add_obj.gif">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:Let" variableName="threatAlloc" valueExpression="var:self"/>
                  <subModelOperations xsi:type="tool_1:Let" variableName="scoreSystem" valueExpression="aql:self.eContainerOrSelf(TRADES::Analysis).scoreSystem"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:scoreSystem">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::DifficultyScore" referenceName="difficultyScores" variableName="newDifficulty">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:newDifficulty.initDifficulty()">
                        <subModelOperations xsi:type="tool_1:Let" variableName="newDifficultyScore" valueExpression="var:newDifficulty"/>
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New difficulty score">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newDifficultyScore">
                                <subModelOperations xsi:type="tool_1:RemoveElement"/>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:threatAlloc">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="difficultyScore" valueExpression="var:newDifficultyScore"/>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.4/@controls.0/@controls.0/@controls.3/@initialOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.0/@subModelOperations.0/@subModelOperations.1/@groups.0"/>
                          <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
                            <controls xsi:type="properties:TextDescription" name="NewDifficultyScoreScore_Text" labelExpression="New score" valueExpression="aql:newDifficultyScore.difficulty">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newDifficultyScore">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="difficulty" valueExpression="var:newValue"/>
                                </firstModelOperations>
                              </initialOperation>
                            </controls>
                          </groups>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </controls>
            <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2"/>
          </controls>
          <controls xsi:type="properties:ContainerDescription" name="AssessmentContainer">
            <controls xsi:type="properties:SelectDescription" name="AssessmentField" labelExpression="Assessment" valueExpression="aql:TRADES::AssessmentENUM.getEEnumLiteral(self.assessment.toString())" candidatesExpression="aql:TRADES::AssessmentENUM.eLiterals" candidateDisplayExpression="aql:candidate.name">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="assessment" valueExpression="aql:newValue.instance"/>
                </firstModelOperations>
              </initialOperation>
            </controls>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2"/>
        </controls>
      </groups>
      <groups name="ThreatMitigationGroup" label="Threat Mitigation Details" labelExpression="Threat Mitigation Details" domainClass="TRADES::ThreatMitigationRelation" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextAreaDescription" name="ThreatMitigationRelation_Description_Widget" labelExpression="Description" isEnabledExpression="aql:self.control.oclIsTypeOf(TRADES::Control) or self.threat.oclIsTypeOf(TRADES::Threat)" valueExpression="feature:description">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="AssessmentField" labelExpression="Assessment" valueExpression="aql:TRADES::AssessmentENUM.getEEnumLiteral(self.assessment.toString())" candidatesExpression="aql:TRADES::AssessmentENUM.eLiterals" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="assessment" valueExpression="aql:newValue.instance"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="AnalysisGroup" label="Analysis Details" labelExpression="Analysis Details" domainClass="TRADES::Analysis" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ListDescription" name="ComponentList" label="Component List" labelExpression="Component List" valueExpression="aql:self.component" displayExpression="aql:value.name">
          <onClickOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
          </onClickOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="AnalysisDFieald" label="ID" labelExpression="ID" helpExpression="ID of the analysis" isEnabledExpression="aql:false" valueExpression="aql:self.id">
          <initialOperation/>
        </controls>
      </groups>
      <groups name="ExternalThreatGroup" label="ExternalThreatDetails" labelExpression="External Threat Details" domainClass="TRADES::ExternalThreat" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="ExternalThreatSource" label=" External lThreat Source" labelExpression="Source" helpExpression="The source of the threat" isEnabledExpression="aql:false" valueExpression="aql:self.source">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="aql:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="TRADES::ExternalThreat sourceID" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('sourceID')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('sourceID'))" isEnabledExpression="aql:false" valueExpression="aql:self.sourceID">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="sourceID" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:HyperlinkDescription" name="ExternalThreatLink" labelExpression="Link" helpExpression="Link to the original source" valueExpression="aql:self.link" displayExpression="aql:self.link">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.displayLink(selection)"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ExternalControlGroup" labelExpression="External Control detail" domainClass="TRADES::ExternalControl" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="ExternalControlSource" label=" External Control Source" labelExpression="Source" helpExpression="The source of the control" isEnabledExpression="aql:false" valueExpression="aql:self.source">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="aql:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextDescription" name="TRADES::ExternalControl sourceID" labelExpression="aql:input.emfEditServices(self).getText(self.eClass().getEStructuralFeature('sourceID')) + ':'" helpExpression="aql:input.emfEditServices(self).getDescription(self.eClass().getEStructuralFeature('sourceID'))" isEnabledExpression="aql:false" valueExpression="aql:self.sourceID">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:SetValue" featureName="sourceID" valueExpression="var:newValue"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:HyperlinkDescription" name="ExternalControlLink" label=" External Control Link" labelExpression="Link" helpExpression="Link to the original source" valueExpression="aql:self.link" displayExpression="aql:self.link">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.displayLink(selection)"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ImpactScoreGroup" label="Impact score" labelExpression="Impact score" domainClass="TRADES::ImpactScore" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="ImpactWidget" label="Impact" labelExpression="Impact" valueExpression="aql:self.impact">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="impact" valueExpression="aql:newValue.toInteger()"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="DifficultyGroup" label="Difficulty Group" labelExpression="Difficulty" domainClass="TRADES::DifficultyScore" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="DifficultyWidget" label="Difficulty" labelExpression="Difficulty" valueExpression="aql:self.difficulty">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="difficulty" valueExpression="aql:newValue.toInteger()"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ImpactConfigurationGroup" label="Impact configuration" labelExpression="Configuration" domainClass="TRADES::ImpactConfiguration" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ButtonDescription" name="ImpactConfigurationColor" labelExpression="'  Change color  '">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.setRGBColorByUI()"/>
          </initialOperation>
          <style labelBackgroundColor="//@userColorsPalettes[name='Colors']/@entries[name='HeatMapColorBackGround']" labelForegroundColor="//@userColorsPalettes[name='Colors']/@entries[name='HeatMapColorForeground']"/>
        </controls>
      </groups>
      <groups name="ScoreSystemGroup" labelExpression="Score system" domainClass="TRADES::ScoreSystem" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ButtonDescription" name="InitColorMap" labelExpression="Initialize colors" helpExpression="Compute a default color for each cell of the 'Risk Managemet Summary' table" buttonLabelExpression="Change all colors">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(TRADES::ScoreSystem)">
              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.initColors()"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:ButtonDescription" name="DeleteUnusedDiff_Button" labelExpression="Delete unused difficulties" helpExpression="Delete all Difficulty score that are not used" buttonLabelExpression="Delete">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(TRADES::ScoreSystem)">
              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.clearUnusedDifficulties()"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:ButtonDescription" name="DeleteUnusedImpatcs_Button" labelExpression="Delete unused impacts" helpExpression="Delete all Impact score that are not used" buttonLabelExpression="Delete">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(TRADES::ScoreSystem)">
              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.clearUnusedImpacts()"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="AffectGroup" label="Affect Group" labelExpression="Data" domainClass="TRADES::AffectRelation" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="AffectDataContainer">
          <controls xsi:type="properties:ListDescription" name="AvailableData" labelExpression="Available  Data" valueExpression="aql:self.availableData()" displayExpression="aql:value.name">
            <onClickOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </onClickOperation>
            <actions labelExpression="New">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:Let" variableName="affectRelation" valueExpression="var:self"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().oclAsType(TRADES::DataOwnerElement).createDataInRoot()">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Add New Data">
                      <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:RemoveElement"/>
                        </initialOperation>
                      </buttons>
                      <buttons labelExpression="Add" default="true" closeDialogOnClick="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                            <subModelOperations xsi:type="tool_1:Let" variableName="newData" valueExpression="aql:self">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:affectRelation">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="data" valueExpression="var:newData"/>
                              </subModelOperations>
                            </subModelOperations>
                          </firstModelOperations>
                        </initialOperation>
                      </buttons>
                      <page name="AffectRelation_NewData_Page" domainClass="TRADES::Data" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.13/@controls.0/@controls.0/@actions.0/@initialOperation/@firstModelOperations/@subModelOperations.1/@subModelOperations.0/@groups.0"/>
                      <groups name="AffectRelation_NewData_Group" domainClass="TRADES::Data" semanticCandidateExpression="var:self">
                        <controls xsi:type="properties:TextDescription" name="DataName" labelExpression="Data Name" valueExpression="aql:self.name">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                            </firstModelOperations>
                          </initialOperation>
                        </controls>
                        <controls xsi:type="properties:SelectDescription" name="DataOwnerSelectWidget" labelExpression="aql:'Data Owner'" valueExpression="aql:self.eContainer().eContainer()" candidatesExpression="aql:affectRelation.ancestors()->filter(TRADES::DataOwnerElement)" candidateDisplayExpression="aql:candidate.name">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                              <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="aql:newValue.oclAsType(TRADES::DataOwnerElement) .getOrCreateDataOwner()" featureName="data"/>
                            </firstModelOperations>
                          </initialOperation>
                        </controls>
                      </groups>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </actions>
            <actions labelExpression="Add">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:Let" variableName="affectRelationEntityA" valueExpression="aql:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="var:selection" iteratorName="currentData">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:affectRelationEntityA">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="data" valueExpression="var:currentData"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </actions>
          </controls>
          <controls xsi:type="properties:ListDescription" name="RelatedDataList" labelExpression="Related Data" valueExpression="aql:self.data" displayExpression="aql:value.name">
            <onClickOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </onClickOperation>
            <actions labelExpression="Remove">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:Let" variableName="affectRelationEntityR" valueExpression="aql:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="var:selection" iteratorName="currentData">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:affectRelationEntityR">
                      <subModelOperations xsi:type="tool_1:Unset" featureName="data" elementExpression="var:currentData"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </actions>
          </controls>
          <layout xsi:type="properties:FillLayoutDescription" orientation="HORIZONTAL"/>
        </controls>
      </groups>
      <groups name="AttackChain_Group" labelExpression="Attack chain" domainClass="TRADES::AttackChain" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="ComputedDifficulty_Widget" labelExpression="Computed difficulty" isEnabledExpression="aql:false" valueExpression="aql:self.computedDifficulty">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
          </initialOperation>
        </controls>
      </groups>
      <groups name="AttackChainStep_Group" labelExpression="AttackChainStep" domainClass="TRADES::AttackChainStep" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:SelectDescription" name="ThreatAllocation_Widget" labelExpression="Threat allocation" valueExpression="aql:self.threatAllocationRelation" candidatesExpression="aql:self.getThreatAllocationRelationCandidates()" candidateDisplayExpression="aql:candidate.getLabelProviderText()">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="threatAllocationRelation" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ThreatAllocationGroup_Difficulty" labelExpression="Threat allocation difficulty detail" domainClass="TRADES::ThreatAllocationRelation" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="Container">
          <controls xsi:type="properties:TextDescription" name="ComputedDifficulty" labelExpression="Computed difficulty" isEnabledExpression="aql:false" valueExpression="aql:if self.attackChain &lt;> null then self.attackChain.computedDifficulty else ' ' endif">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:ButtonDescription" name="UpdateDifficulty_Button" buttonLabelExpression="Update difficulty">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.synchronizeDifficulty()"/>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2"/>
        </controls>
      </groups>
      <groups name="OwnedDataGroup" labelExpression="Group" domainClass="TRADES::DataOwnerElement" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ListDescription" name="OwnedDataList" labelExpression="aql:'Owned Data'" valueExpression="aql:self.getDatas()" displayExpression="aql:value.name">
          <onClickOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
          </onClickOperation>
          <actions labelExpression="New">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(TRADES::DataOwnerElement).createData()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Name">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:RemoveElement"/>
                    </initialOperation>
                  </buttons>
                  <buttons labelExpression="Add" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self"/>
                    </initialOperation>
                  </buttons>
                  <page name="AffectRelation_NewData_Page" domainClass="TRADES::Data" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </actions>
          <actions labelExpression="Rename">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:selection">
                <subModelOperations xsi:type="tool_1:For" expression="var:selection" iteratorName="data">
                  <subModelOperations xsi:type="tool_1:Let" variableName="oldName" valueExpression="aql:data.oclAsType(TRADES::Data).name"/>
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Rename dialog">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:data">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:oldName"/>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" labelExpression="Name" domainClass="TRADES::Data" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </actions>
          <actions labelExpression="Delete">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="var:selection">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </actions>
        </controls>
        <controls xsi:type="properties:ListDescription" name="InheritedDataList" labelExpression="aql:'Inherited data'" valueExpression="aql:self.getInheritedDatas()" displayExpression="aql:value.name">
          <onClickOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
          </onClickOperation>
          <actions labelExpression="Rename">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:selection">
                <subModelOperations xsi:type="tool_1:For" expression="var:selection" iteratorName="data">
                  <subModelOperations xsi:type="tool_1:Let" variableName="oldName" valueExpression="aql:data.name"/>
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Rename dialog">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:data">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:oldName"/>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                      </initialOperation>
                    </buttons>
                    <page name="Default Page" labelExpression="Name" domainClass="TRADES::Data" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </actions>
        </controls>
      </groups>
      <groups name="ComponentLinksGroup" label="Component Links Group" labelExpression="Links" domainClass="TRADES::Component" semanticCandidateExpression="aql: self">
        <controls xsi:type="properties:ContainerDescription" name="LinksContainer">
          <controls xsi:type="properties:SelectDescription" name="LinkSelect" labelExpression="Select Link" valueExpression="aql: self" candidatesExpression="aql: self.links" candidateDisplayExpression="aql: candidate.name">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:Let" variableName="selectedLink" valueExpression="aql: selection"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:ListDescription" name="Link components" labelExpression="Link components" valueExpression="aql:self.components" displayExpression="aql:value.name">
            <onClickOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </onClickOperation>
            <actions labelExpression="New">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:Let" variableName="affectRelation" valueExpression="var:self"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().oclAsType(TRADES::DataOwnerElement).createDataInRoot()">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Add New Data">
                      <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:RemoveElement"/>
                        </initialOperation>
                      </buttons>
                      <buttons labelExpression="Add" default="true" closeDialogOnClick="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                            <subModelOperations xsi:type="tool_1:Let" variableName="newData" valueExpression="aql:self">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:affectRelation">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="data" valueExpression="var:newData"/>
                              </subModelOperations>
                            </subModelOperations>
                          </firstModelOperations>
                        </initialOperation>
                      </buttons>
                      <page name="AffectRelation_NewData_Page" domainClass="TRADES::Data" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.18/@controls.0/@controls.1/@actions.0/@initialOperation/@firstModelOperations/@subModelOperations.1/@subModelOperations.0/@groups.0"/>
                      <groups name="AffectRelation_NewData_Group" domainClass="TRADES::Data" semanticCandidateExpression="var:self">
                        <controls xsi:type="properties:TextDescription" name="DataName" labelExpression="Data Name" valueExpression="aql:self.name">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                            </firstModelOperations>
                          </initialOperation>
                        </controls>
                        <controls xsi:type="properties:SelectDescription" name="DataOwnerSelectWidget" labelExpression="aql:'Data Owner'" valueExpression="aql:self.eContainer().eContainer()" candidatesExpression="aql:affectRelation.ancestors()->filter(TRADES::DataOwnerElement)" candidateDisplayExpression="aql:candidate.name">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                              <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="aql:newValue.oclAsType(TRADES::DataOwnerElement) .getOrCreateDataOwner()" featureName="data"/>
                            </firstModelOperations>
                          </initialOperation>
                        </controls>
                      </groups>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </actions>
            <actions labelExpression="Add">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:Let" variableName="selectedLink" valueExpression="aql:selection"/>
                  <subModelOperations xsi:type="tool_1:For" expression="var:selection" iteratorName="currentData">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:affectRelationEntityA">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="data" valueExpression="var:currentData"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </actions>
          </controls>
          <controls xsi:type="properties:ListDescription" name="AvailableComponents" labelExpression="Available Components" valueExpression="aql:self.components" displayExpression="aql:value.name">
            <onClickOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </onClickOperation>
            <actions labelExpression="New">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:Let" variableName="affectRelation" valueExpression="var:self"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().oclAsType(TRADES::DataOwnerElement).createDataInRoot()">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Add New Data">
                      <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:RemoveElement"/>
                        </initialOperation>
                      </buttons>
                      <buttons labelExpression="Add" default="true" closeDialogOnClick="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                            <subModelOperations xsi:type="tool_1:Let" variableName="newData" valueExpression="aql:self">
                              <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:affectRelation">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="data" valueExpression="var:newData"/>
                              </subModelOperations>
                            </subModelOperations>
                          </firstModelOperations>
                        </initialOperation>
                      </buttons>
                      <page name="AffectRelation_NewData_Page" domainClass="TRADES::Data" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.18/@controls.0/@controls.2/@actions.0/@initialOperation/@firstModelOperations/@subModelOperations.1/@subModelOperations.0/@groups.0"/>
                      <groups name="AffectRelation_NewData_Group" domainClass="TRADES::Data" semanticCandidateExpression="var:self">
                        <controls xsi:type="properties:TextDescription" name="DataName" labelExpression="Data Name" valueExpression="aql:self.name">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                            </firstModelOperations>
                          </initialOperation>
                        </controls>
                        <controls xsi:type="properties:SelectDescription" name="DataOwnerSelectWidget" labelExpression="aql:'Data Owner'" valueExpression="aql:self.eContainer().eContainer()" candidatesExpression="aql:affectRelation.ancestors()->filter(TRADES::DataOwnerElement)" candidateDisplayExpression="aql:candidate.name">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                              <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="aql:newValue.oclAsType(TRADES::DataOwnerElement) .getOrCreateDataOwner()" featureName="data"/>
                            </firstModelOperations>
                          </initialOperation>
                        </controls>
                      </groups>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </actions>
            <actions labelExpression="Add">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:Let" variableName="affectRelationEntityA" valueExpression="aql:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="var:selection" iteratorName="currentData">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:affectRelationEntityA">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="data" valueExpression="var:currentData"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </actions>
          </controls>
          <layout xsi:type="properties:FillLayoutDescription" orientation="HORIZONTAL"/>
        </controls>
      </groups>
      <groups name="ConveyingLinkGroup" labelExpression="Link" domainClass="TRADES::AffectRelation" semanticCandidateExpression="aql: self">
        <controls xsi:type="properties:ContainerDescription" name="AffectDataContainer">
          <controls xsi:type="properties:SelectDescription" name="ConveyingLink" labelExpression="Conveying Link" helpExpression="The link which conveys this data" valueExpression="aql:self.link" candidatesExpression="aql:self.eContainer(TRADES::Analysis).eAllContents(TRADES::Link)" candidateDisplayExpression="aql:candidate.name">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="link" valueExpression="aql:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:TextDescription" name="LinkType" label="Link Type" labelExpression="Link Type" isEnabledExpression="aql: false" valueExpression="aql:self.link.linkType.name.toString()">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:FillLayoutDescription" orientation="HORIZONTAL"/>
        </controls>
      </groups>
      <groups name="LinkGroup" label="Link Group" labelExpression="Link definitions" domainClass="TRADES::Link" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:SelectDescription" name="LinkType" labelExpression="Link Type" helpExpression="The link type for this link" isEnabledExpression="aql: false" valueExpression="aql:self.linkType" candidatesExpression="aql: self.eContainer(TRADES::Analysis).linkTypes" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="linkType" valueExpression="aql:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:ListDescription" name="LinkType" label="Link Type" labelExpression="Available Link Types" helpExpression="Link types available" valueExpression="aql: self.eContainer(TRADES::Analysis).linkTypes" displayExpression="aql:value.name">
          <onClickOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
          </onClickOperation>
          <actions labelExpression="Set type">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="linkType" valueExpression="aql: selection->first()"/>
              </firstModelOperations>
            </initialOperation>
          </actions>
          <actions labelExpression="New">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer(TRADES::Analysis)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="TRADES::LinkType" referenceName="linkTypes" variableName="newLinkType">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: newLinkType">
                      <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Add New Link Type">
                        <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:RemoveElement"/>
                          </initialOperation>
                        </buttons>
                        <buttons labelExpression="Add" default="true" closeDialogOnClick="true">
                          <initialOperation/>
                        </buttons>
                        <page name="NewLinkType_Page" domainClass="TRADES::LinkType" groups="//@extensions.0/@categories.0/@groups.20/@controls.1/@actions.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                        <groups name="NewTypeGroup" domainClass="TRADES::LinkType" semanticCandidateExpression="var:self">
                          <controls xsi:type="properties:TextDescription" name="LinkTypeName" labelExpression="Link Name" valueExpression="aql: newLinkType.name">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: newLinkType">
                                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                              </firstModelOperations>
                            </initialOperation>
                          </controls>
                        </groups>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </actions>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="LinkContainer">
          <controls xsi:type="properties:ListDescription" name="AvailableComponents" labelExpression="Available Components" valueExpression="aql:self.eContainer(TRADES::Analysis).eAllContents(TRADES::Component)->select(myComponent | self.components->excludes(myComponent))" displayExpression="aql:value.name">
            <onClickOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </onClickOperation>
            <actions labelExpression="Add">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:Let" variableName="affectRelationEntityA" valueExpression="aql:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="var:selection" iteratorName="currentData">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:affectRelationEntityA">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="components" valueExpression="var:currentData"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </actions>
          </controls>
          <controls xsi:type="properties:ListDescription" name="LinkedComponentsList" labelExpression="Linked Components" valueExpression="aql:self.components" displayExpression="aql:value.name">
            <onClickOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </onClickOperation>
            <actions labelExpression="Remove">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:Let" variableName="affectRelationEntityR" valueExpression="aql:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="var:selection" iteratorName="currentData">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:affectRelationEntityR">
                      <subModelOperations xsi:type="tool_1:Unset" featureName="components" elementExpression="var:currentData"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </actions>
          </controls>
          <layout xsi:type="properties:FillLayoutDescription" orientation="HORIZONTAL"/>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="ConveyingLinksContainer">
          <controls xsi:type="properties:ListDescription" name="AvailableLinks" labelExpression="Available Links" valueExpression="aql:self.eContainer(TRADES::Analysis).eAllContents(TRADES::Link)" displayExpression="aql:value.name">
            <onClickOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </onClickOperation>
            <actions labelExpression="Add">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:Let" variableName="LinkEntityA" valueExpression="aql:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="var:selection" iteratorName="currentLink">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:LinkEntityA">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="conveyingLink" valueExpression="var:currentLink"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </actions>
          </controls>
          <controls xsi:type="properties:ListDescription" name="ConveyingLinks" labelExpression="Conveying Links" valueExpression="aql:self.conveyingLink" displayExpression="aql:value.name">
            <onClickOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </onClickOperation>
            <actions labelExpression="Remove">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:Let" variableName="linkEntity" valueExpression="aql:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="var:selection" iteratorName="currentLink">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:linkEntity">
                      <subModelOperations xsi:type="tool_1:Unset" featureName="conveyingLink" elementExpression="var:currentLink"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </actions>
          </controls>
          <layout xsi:type="properties:FillLayoutDescription" orientation="HORIZONTAL"/>
        </controls>
      </groups>
      <groups name="LinkTypeGroup" label="Link Type Group" labelExpression="Configuration" domainClass="TRADES::LinkType" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ButtonDescription" name="ImpactConfigurationColor" labelExpression="'  Change color  '">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.setRGBColorByUI()"/>
          </initialOperation>
          <style labelBackgroundColor="//@userColorsPalettes[name='Colors']/@entries[name='HeatMapColorBackGround']" labelForegroundColor="//@userColorsPalettes[name='Colors']/@entries[name='HeatMapColorForeground']"/>
        </controls>
      </groups>
      <groups name="CatalogGroup" labelExpression="Catalog Details" domainClass="TRADES::Catalog" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="AnalysisDFieald" label="ID" labelExpression="ID" helpExpression="ID of the catalog" isEnabledExpression="aql:false" valueExpression="aql:self.id">
          <initialOperation/>
        </controls>
      </groups>
    </categories>
  </extensions>
</description:Group>
