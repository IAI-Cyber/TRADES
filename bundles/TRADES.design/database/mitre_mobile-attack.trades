<?xml version="1.0" encoding="ASCII"?>
<TRADES:Catalog xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:TRADES="dsm.TRADES" xmi:id="_b-4XUKwUEeuTd_dJv2zYfQ" name="Mitre Att&amp;ck : mobile-attack">
  <threatOwner xmi:id="_b-4XUawUEeuTd_dJv2zYfQ">
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XUqwUEeuTd_dJv2zYfQ" name="Abuse Accessibility Features" id="T1453" description="**This technique has been deprecated. Please use [Input Capture](https://attack.mitre.org/techniques/T1417), [Input Injection](https://attack.mitre.org/techniques/T1516), and [Input Prompt](https://attack.mitre.org/techniques/T1411) where appropriate.**&#xA;&#xA;A malicious app could abuse Android's accessibility features to capture sensitive data or perform other malicious actions.(Citation: Skycure-Accessibility)&#xA;&#xA;Adversaries may abuse accessibility features on Android to emulate a user's clicks, for example to steal money from a user's bank account.(Citation: android-trojan-steals-paypal-2fa)(Citation: banking-trojans-google-play)&#xA;&#xA;Adversaries may abuse accessibility features on Android devices to evade defenses by repeatedly clicking the &quot;Back&quot; button when a targeted app manager or mobile security app is launched, or when strings suggesting uninstallation are detected in the foreground. This effectively prevents the malicious application from being uninstalled.(Citation: android-trojan-steals-paypal-2fa)" applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1453"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XU6wUEeuTd_dJv2zYfQ" name="Abuse Device Administrator Access to Prevent Removal" id="T1401" description="A malicious application can request Device Administrator privileges. If the user grants the privileges, the application can take steps to make its removal more difficult." applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1401"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XVKwUEeuTd_dJv2zYfQ" name="Abuse of iOS Enterprise App Signing Key" id="T1445" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1445"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XVawUEeuTd_dJv2zYfQ" name="Access Calendar Entries" id="T1435" description="An adversary could call standard operating system APIs from a malicious application to gather calendar entry data, or with escalated privileges could directly access files containing calendar data." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1435"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XVqwUEeuTd_dJv2zYfQ" name="Access Call Log" id="T1433" description="On Android, an adversary could call standard operating system APIs from a malicious application to gather call log data, or with escalated privileges could directly access files containing call log data.&#xA;&#xA;On iOS, applications do not have access to the call log, so privilege escalation would be required in order to access the data." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1433"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XV6wUEeuTd_dJv2zYfQ" name="Access Contact List" id="T1432" description="An adversary could call standard operating system APIs from a malicious application to gather contact list (i.e., address book) data, or with escalated privileges could directly access files containing contact list data." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1432"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XWKwUEeuTd_dJv2zYfQ" name="Access Notifications" id="T1517" description="A malicious application can read notifications sent by the operating system or other applications, which may contain sensitive data such as one-time authentication codes sent over SMS, email, or other mediums. A malicious application can also dismiss notifications to prevent the user from noticing that the notifications arrived and can trigger action buttons contained within notifications.(Citation: ESET 2FA Bypass)" applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1517"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XWawUEeuTd_dJv2zYfQ" name="Access Sensitive Data in Device Logs" id="T1413" description="On versions of Android prior to 4.1, an adversary may use a malicious application that holds the READ_LOGS permission to obtain private keys, passwords, other credentials, or other sensitive data stored in the device's system log. On Android 4.1 and later, an adversary would need to attempt to perform an operating system privilege escalation attack to be able to access the log." applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1413"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XWqwUEeuTd_dJv2zYfQ" name="Access Stored Application Data" id="T1409" description="Adversaries may access and collect application data resident on the device. Adversaries often target popular applications such as Facebook, WeChat, and Gmail.(Citation: SWB Exodus March 2019)&#xA;&#xA;This technique requires either escalated privileges or for the targeted app to have stored the data in an insecure manner (e.g., with insecure file permissions or in an insecure location such as an external storage directory)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1409"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XW6wUEeuTd_dJv2zYfQ" name="Alternate Network Mediums" id="T1438" description="Adversaries can communicate using cellular networks rather than enterprise Wi-Fi in order to bypass enterprise network monitoring systems. Adversaries may also communicate using other non-Internet Protocol mediums such as SMS, NFC, or Bluetooth to bypass network monitoring systems." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1438"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XXKwUEeuTd_dJv2zYfQ" name="App Delivered via Email Attachment" id="T1434" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1434"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XXawUEeuTd_dJv2zYfQ" name="App Delivered via Web Download" id="T1431" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1431"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XXqwUEeuTd_dJv2zYfQ" name="Application Discovery" id="T1418" description="Adversaries may seek to identify all applications installed on the device. One use case for doing so is to identify the presence of endpoint security applications that may increase the adversary's risk of detection. Another use case is to identify the presence of applications that the adversary may wish to target.&#xA;&#xA;On Android, applications can use methods in the PackageManager class (Citation: Android-PackageManager) to enumerate other apps installed on device, or an entity with shell access can use the pm command line tool.&#xA;&#xA;On iOS, apps can use private API calls to obtain a list of other apps installed on the device. (Citation: Kurtz-MaliciousiOSApps) However, use of private API calls will likely prevent the application from being distributed through Apple's App Store." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1418"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XX6wUEeuTd_dJv2zYfQ" name="Attack PC via USB Connection" id="T1427" description="With escalated privileges, an adversary could program the mobile device to impersonate USB devices such as input devices (keyboard and mouse), storage devices, and/or networking devices in order to attack a physically connected PC(Citation: Wang-ExploitingUSB)(Citation: ArsTechnica-PoisonTap) This technique has been demonstrated on Android. We are unaware of any demonstrations on iOS." applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1427"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XYKwUEeuTd_dJv2zYfQ" name="Biometric Spoofing" id="T1460" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1460"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XYawUEeuTd_dJv2zYfQ" name="Broadcast Receivers" id="T1402" description="An intent is a message passed between Android application or system components. Applications can register to receive broadcast intents at runtime, which are system-wide intents delivered to each app when certain events happen on the device, such as network changes or the user unlocking the screen. Malicious applications can then trigger certain actions within the app based on which broadcast intent was received.&#xA;&#xA;Further, malicious applications can register for intents broadcasted by other applications in addition to the Android system itself. This allows the malware to respond based on actions in other applications. This behavior typically indicates a more intimate knowledge, or potentially the targeting of specific devices, users, or applications.&#xA;&#xA;In Android 8 (API level 26), broadcast intent behavior was changed, limiting the implicit intents that applications can register for in the manifest. In most cases, applications that register through the manifest will no longer receive the broadcasts. Now, applications must register context-specific broadcast receivers while the user is actively using the app.(Citation: Android Changes to System Broadcasts)" applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1402"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XYqwUEeuTd_dJv2zYfQ" name="Capture Audio" id="T1429" description="Adversaries may capture audio to collect information on a user of a mobile device using standard operating system APIs. Adversaries may target audio information such as user conversations, surroundings, phone calls, or other sensitive information.&#xA;&#xA;Android and iOS, by default, requires that an application request access to microphone devices from the user. In Android, applications must hold the &lt;code>android.permission.RECORD_AUDIO&lt;/code> permission to access the microphone and the &lt;code>android.permission.CAPTURE_AUDIO_OUTPUT&lt;/code> permission to access audio output such as speakers. Android does not allow third-party applications to hold &lt;code>android.permission.CAPTURE_AUDIO_OUTPUT&lt;/code>, so audio output can only be obtained by privileged applications (distributed by Google or the device vendor) or after a successful privilege escalation attack. In iOS, applications must include the `NSMicrophoneUsageDescription` key in their `Info.plist` file." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1429"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XY6wUEeuTd_dJv2zYfQ" name="Capture Camera" id="T1512" description="Adversaries may utilize the camera to capture information about the user, their surroundings, or other physical identifiers. Adversaries may use the physical camera devices on a mobile device to capture images or video. By default, in Android and iOS, an application must request permission to access a camera device which is granted by the user through a request prompt. In Android, applications must hold the `android.permission.CAMERA` permission to access the camera. In iOS, applications must include the `NSCameraUsageDescription` key in the `Info.plist` file, and must request access to the camera at runtime." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1512"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XZKwUEeuTd_dJv2zYfQ" name="Capture Clipboard Data" id="T1414" description="Adversaries may abuse Clipboard Manager APIs to obtain sensitive information copied to the global clipboard. For example, passwords being copy-and-pasted from a password manager app could be captured by another application installed on the device.(Citation: Fahl-Clipboard)&#xA;&#xA;On Android, &lt;code>ClipboardManager.OnPrimaryClipChangedListener&lt;/code> can be used by applications to register as a listener and monitor the clipboard for changes.(Citation: Github Capture Clipboard 2019)&#xA;&#xA;Android 10 mitigates this technique by preventing applications from accessing clipboard data unless the application is on the foreground or is set as the device&#x2019;s default input method editor (IME).(Citation: Android 10 Privacy Changes)" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1414"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XZawUEeuTd_dJv2zYfQ" name="Capture SMS Messages" id="T1412" description="A malicious application could capture sensitive data sent via SMS, including authentication credentials. SMS is frequently used to transmit codes used for multi-factor authentication.&#xA;&#xA;On Android, a malicious application must request and obtain permission (either at app install time or run time) in order to receive SMS messages. Alternatively, a malicious application could attempt to perform an operating system privilege escalation attack to bypass the permission requirement.&#xA;&#xA;On iOS, applications cannot access SMS messages in normal operation, so an adversary would need to attempt to perform an operating system privilege escalation attack to potentially be able to access SMS messages." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1412"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XZqwUEeuTd_dJv2zYfQ" name="Carrier Billing Fraud" id="T1448" description="A malicious app may trigger fraudulent charges on a victim&#x2019;s carrier billing statement in several different ways, including SMS toll fraud and SMS shortcodes that make purchases.&#xA;&#xA;Performing SMS fraud relies heavily upon the fact that, when making SMS purchases, the carriers perform device verification but not user verification. This allows adversaries to make purchases on behalf of the user, with little or no user interaction.(Citation: Google Bread)&#xA;&#xA;Malicious applications may also perform toll billing, which occurs when carriers provide payment endpoints over a web page. The application connects to the web page over cellular data so the carrier can directly verify the number, or the application must retrieve a code sent via SMS and enter it into the web page.(Citation: Google Bread)&#xA;&#xA;On iOS, apps cannot send SMS messages.&#xA;&#xA;On Android, apps must hold the `SEND_SMS` permission to send SMS messages. Additionally, Android version 4.2 and above has mitigations against this threat by requiring user consent before allowing SMS messages to be sent to premium numbers (Citation: AndroidSecurity2014)." applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1448"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XZ6wUEeuTd_dJv2zYfQ" name="Clipboard Modification" id="T1510" description="Adversaries may abuse clipboard functionality to intercept and replace information in the Android device clipboard.(Citation: ESET Clipboard Modification February 2019)(Citation: Welivesecurity Clipboard Modification February 2019)(Citation: Syracuse Clipboard Modification 2014) Malicious applications may monitor the clipboard activity through the &lt;code>ClipboardManager.OnPrimaryClipChangedListener&lt;/code> interface on Android to determine when the clipboard contents have changed.(Citation: Dr.Webb Clipboard Modification origin2 August 2018)(Citation: Dr.Webb Clipboard Modification origin August 2018) Listening to clipboard activity, reading the clipboard contents, and modifying the clipboard contents requires no explicit application permissions and can be performed by applications running in the background, however, this behavior has changed with the release of Android 10.(Citation: Android 10 Privacy Changes)&#xA;&#xA;Adversaries may use [Clipboard Modification](https://attack.mitre.org/techniques/T1510) to replace text prior to being pasted, for example, replacing a copied Bitcoin wallet address with a wallet address that is under adversarial control.&#xA;&#xA;[Clipboard Modification](https://attack.mitre.org/techniques/T1510) had been seen within the Android/Clipper.C trojan. This sample had been detected by ESET in an application distributed through the Google Play Store targeting cryptocurrency wallet numbers.(Citation: ESET Clipboard Modification February 2019)" applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1510"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XaKwUEeuTd_dJv2zYfQ" name="Code Injection" id="T1540" description="Adversaries may use code injection attacks to implant arbitrary code into the address space of a running application. Code is then executed or interpreted by that application. Adversaries utilizing this technique may exploit capabilities to load code in at runtime through dynamic libraries.&#xA;&#xA;With root access, `ptrace` can be used to target specific applications and load shared libraries into its process memory.(Citation: Shunix Code Injection Mar 2016)(Citation: Fadeev Code Injection Aug 2018) By injecting code, an adversary may be able to gain access to higher permissions held by the targeted application by executing as the targeted application. In addition, the adversary may be able to evade detection or enable persistent access to a system under the guise of the application&#x2019;s process.(Citation: Google Triada June 2019)&#xA;" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1540"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XaawUEeuTd_dJv2zYfQ" name="Commonly Used Port" id="T1436" description="Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. &#xA;&#xA;They may use commonly open ports such as&#xA;&#xA;* TCP:80 (HTTP)&#xA;* TCP:443 (HTTPS)&#xA;* TCP:25 (SMTP)&#xA;* TCP/UDP:53 (DNS)&#xA;&#xA;They may use the protocol associated with the port or a completely different protocol." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1436"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XaqwUEeuTd_dJv2zYfQ" name="Compromise Application Executable" id="T1577" description="Adversaries may modify applications installed on a device to establish persistent access to a victim. These malicious modifications can be used to make legitimate applications carry out adversary tasks when these applications are in use.&#xA;&#xA;There are multiple ways an adversary can inject malicious code into applications. One method is by taking advantages of device vulnerabilities, the most well-known being Janus, an Android vulnerability that allows adversaries to add extra bytes to APK (application) and DEX (executable) files without affecting the file's signature. By being able to add arbitrary bytes to valid applications, attackers can seamlessly inject code into genuine executables without the user's knowledge.(Citation: Guardsquare Janus)&#xA;&#xA;Adversaries may also rebuild applications to include malicious modifications. This can be achieved by decompiling the genuine application, merging it with the malicious code, and recompiling it.(Citation: CheckPoint Agent Smith)&#xA;&#xA;Adversaries may also take action to conceal modifications to application executables and bypass user consent. These actions include altering modifications to appear as an update or exploiting vulnerabilities that allow activities of the malicious application to run inside a system application.(Citation: CheckPoint Agent Smith)" applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1577"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xa6wUEeuTd_dJv2zYfQ" name="Data Encrypted" id="T1532" description="Data is encrypted before being exfiltrated in order to hide the information that is being exfiltrated from detection or to make the exfiltration less conspicuous upon inspection by a defender. The encryption is performed by a utility, programming library, or custom algorithm on the data itself and is considered separate from any encryption performed by the command and control or file transfer protocol. Common file formats that can encrypt files are RAR and zip." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1532"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XbKwUEeuTd_dJv2zYfQ" name="Data Encrypted for Impact" id="T1471" description="An adversary may encrypt files stored on the mobile device to prevent the user from accessing them, for example with the intent of only unlocking access to the files after a ransom is paid. Without escalated privileges, the adversary is generally limited to only encrypting files in external/shared storage locations. This technique has been demonstrated on Android. We are unaware of any demonstrated use on iOS." applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1471"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XbawUEeuTd_dJv2zYfQ" name="Data from Local System" id="T1533" description="Sensitive data can be collected from local system sources, such as the file system or databases of information residing on the system.&#xA;&#xA;Local system data includes information stored by the operating system. Access to local system data often requires escalated privileges (e.g. root access). Examples of local system data include authentication tokens, the device keyboard cache, Wi-Fi passwords, and photos." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1533"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XbqwUEeuTd_dJv2zYfQ" name="Delete Device Data" id="T1447" description="Adversaries may wipe a device or delete individual files in order to manipulate external outcomes or hide activity. An application must have administrator access to fully wipe the device, while individual files may not require special permissions to delete depending on their storage location. (Citation: Android DevicePolicyManager 2019)&#xA;&#xA;Stored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The impact file deletion will have depends on the type of data as well as the goals and objectives of the adversary, but can include deleting update files to evade detection or deleting attacker-specified files for impact." applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1447"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xb6wUEeuTd_dJv2zYfQ" name="Deliver Malicious App via Authorized App Store" id="T1475" description="Malicious applications are a common attack vector used by adversaries to gain a presence on mobile devices. Mobile devices often are configured to allow application installation only from an authorized app store (e.g., Google Play Store or Apple App Store). An adversary may seek to place a malicious application in an authorized app store, enabling the application to be installed onto targeted devices.&#xA;&#xA;App stores typically require developer registration and use vetting techniques to identify malicious applications. Adversaries may use these techniques against app store defenses:&#xA;&#xA;* [Download New Code at Runtime](https://attack.mitre.org/techniques/T1407)&#xA;* [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1406)&#xA;&#xA;Adversaries may also seek to evade vetting by placing code in a malicious application to detect whether it is running in an app analysis environment and, if so, avoid performing malicious actions while under analysis. (Citation: Petsas) (Citation: Oberheide-Bouncer) (Citation: Percoco-Bouncer) (Citation: Wang)&#xA;&#xA;Adversaries may also use fake identities, payment cards, etc., to create developer accounts to publish malicious applications to app stores. (Citation: Oberheide-Bouncer)&#xA;&#xA;Adversaries may also use control of a target's Google account to use the Google Play Store's remote installation capability to install apps onto the Android devices associated with the Google account. (Citation: Oberheide-RemoteInstall) (Citation: Konoth) (Only applications that are available for download through the Google Play Store can be remotely installed using this technique.)" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1475"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XcKwUEeuTd_dJv2zYfQ" name="Deliver Malicious App via Other Means" id="T1476" description="Malicious applications are a common attack vector used by adversaries to gain a presence on mobile devices. This technique describes installing a malicious application on targeted mobile devices without involving an authorized app store (e.g., Google Play Store or Apple App Store). Adversaries may wish to avoid placing malicious applications in an authorized app store due to increased potential risk of detection or other reasons. However, mobile devices often are configured to allow application installation only from an authorized app store which would prevent this technique from working.&#xA;&#xA;Delivery methods for the malicious application include:&#xA;&#xA;* [Spearphishing Attachment](https://attack.mitre.org/techniques/T1193) - Including the mobile app package as an attachment to an email message.&#xA;* [Spearphishing Link](https://attack.mitre.org/techniques/T1192) - Including a link to the mobile app package within an email, text message (e.g. SMS, iMessage, Hangouts, WhatsApp, etc.), web site, QR code, or other means.&#xA;* Third-Party App Store - Installed from a third-party app store (as opposed to an authorized app store that the device implicitly trusts as part of its default behavior), which may not apply the same level of scrutiny to apps as applied by an authorized app store.(Citation: IBTimes-ThirdParty)(Citation: TrendMicro-RootingMalware)(Citation: TrendMicro-FlappyBird)&#xA;&#xA;Some Android malware comes with functionality to install additional applications, either automatically or when the adversary instructs it to.(Citation: android-trojan-steals-paypal-2fa)" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1476"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XcawUEeuTd_dJv2zYfQ" name="Detect App Analysis Environment" id="T1440" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1440"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XcqwUEeuTd_dJv2zYfQ" name="Device Lockout" id="T1446" description="An adversary may seek to lock the legitimate user out of the device, for example to inhibit user interaction or to obtain a ransom payment.&#xA;&#xA;On Android versions prior to 7, apps can abuse Device Administrator access to reset the device lock passcode to prevent the user from unlocking the device. After Android 7, only device or profile owners (e.g. MDMs) can reset the device&#x2019;s passcode.(Citation: Android resetPassword)&#xA;&#xA;On iOS devices, this technique does not work because mobile device management servers can only remove the screen lock passcode, they cannot set a new passcode. However, on jailbroken devices, malware has been discovered that can lock the user out of the device.(Citation: Xiao-KeyRaider)" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1446"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xc6wUEeuTd_dJv2zYfQ" name="Device Type Discovery" id="T1419" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1419"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XdKwUEeuTd_dJv2zYfQ" name="Device Unlock Code Guessing or Brute Force" id="T1459" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1459"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XdawUEeuTd_dJv2zYfQ" name="Disguise Root/Jailbreak Indicators" id="T1408" description="An adversary could use knowledge of the techniques used by security software to evade detection(Citation: Brodie)(Citation: Tan). For example, some mobile security products perform compromised device detection by searching for particular artifacts such as an installed &quot;su&quot; binary, but that check could be evaded by naming the binary something else. Similarly, polymorphic code techniques could be used to evade signature-based detection(Citation: Rastogi)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1408"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XdqwUEeuTd_dJv2zYfQ" name="Domain Generation Algorithms" id="T1520" description="Adversaries may use [Domain Generation Algorithms](https://attack.mitre.org/techniques/T1520) (DGAs) to procedurally generate domain names for command and control communication, and other uses such as malicious application distribution.(Citation: securelist rotexy 2018)&#xA;&#xA;DGAs increase the difficulty for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1520"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xd6wUEeuTd_dJv2zYfQ" name="Downgrade to Insecure Protocols" id="T1466" description="An adversary could cause the mobile device to use less secure protocols, for example by jamming frequencies used by newer protocols such as LTE and only allowing older protocols such as GSM to communicate(Citation: NIST-SP800187). Use of less secure protocols may make communication easier to eavesdrop upon or manipulate." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1466"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XeKwUEeuTd_dJv2zYfQ" name="Download New Code at Runtime" id="T1407" description="An app could download and execute dynamic code (not included in the original application package) after installation to evade static analysis techniques (and potentially dynamic analysis techniques) used for application vetting or application store review.(Citation: Poeplau-ExecuteThis)&#xA;&#xA;On Android, dynamic code could include native code, Dalvik code, or JavaScript code that uses the Android WebView's JavascriptInterface capability.(Citation: Bromium-AndroidRCE)&#xA;&#xA;On iOS, techniques also exist for executing dynamic code downloaded after application installation.(Citation: FireEye-JSPatch)(Citation: Wang)" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1407"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XeawUEeuTd_dJv2zYfQ" name="Drive-by Compromise" id="T1456" description="As described by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), a drive-by compromise is when an adversary gains access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is targeted for exploitation. For example, a website may contain malicious media content intended to exploit vulnerabilities in media parsers as demonstrated by the Android Stagefright vulnerability  (Citation: Zimperium-Stagefright).&#xA;&#xA;(This technique was formerly known as Malicious Web Content. It has been renamed to better align with ATT&amp;CK for Enterprise.)" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1456"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XeqwUEeuTd_dJv2zYfQ" name="Eavesdrop on Insecure Network Communication" id="T1439" description="If network traffic between the mobile device and remote servers is unencrypted or is encrypted in an insecure manner, then an adversary positioned on the network can eavesdrop on communication.(Citation: mHealth)" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1439"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xe6wUEeuTd_dJv2zYfQ" name="Evade Analysis Environment" id="T1523" description="Malicious applications may attempt to detect their operating environment prior to fully executing their payloads. These checks are often used to ensure the application is not running within an analysis environment such as a sandbox used for application vetting, security research, or reverse engineering. &#xA;Adversaries may use many different checks such as physical sensors, location, and system properties to fingerprint emulators and sandbox environments.(Citation: Talos Gustuff Apr 2019)(Citation: ThreatFabric Cerberus)(Citation: Xiao-ZergHelper)(Citation: Cyberscoop Evade Analysis January 2019) Adversaries may access `android.os.SystemProperties` via Java reflection to obtain specific system information.(Citation: Github Anti-emulator) Standard values such as phone number, IMEI, IMSI, device IDs, and device drivers may be checked against default signatures of common sandboxes.(Citation: Sophos Anti-emulation)&#xA;" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1523"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XfKwUEeuTd_dJv2zYfQ" name="Exploit Baseband Vulnerability" id="T1455" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1455"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XfawUEeuTd_dJv2zYfQ" name="Exploit Enterprise Resources" id="T1428" description="Adversaries may attempt to exploit enterprise servers, workstations, or other resources over the network. This technique may take advantage of the mobile device's access to an internal enterprise network either through local connectivity or through a Virtual Private Network (VPN)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1428"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XfqwUEeuTd_dJv2zYfQ" name="Exploit OS Vulnerability" id="T1404" description="A malicious app can exploit unpatched vulnerabilities in the operating system to obtain escalated privileges." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1404"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xf6wUEeuTd_dJv2zYfQ" name="Exploit SS7 to Redirect Phone Calls/SMS" id="T1449" description="An adversary could exploit signaling system vulnerabilities to redirect calls or text messages (SMS) to a phone number under the attacker's control. The adversary could then act as a man-in-the-middle to intercept or manipulate the communication. (Citation: Engel-SS7) (Citation: Engel-SS7-2008) (Citation: 3GPP-Security) (Citation: Positive-SS7) (Citation: CSRIC5-WG10-FinalReport) Interception of SMS messages could enable adversaries to obtain authentication codes used for multi-factor authentication(Citation: TheRegister-SS7)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1449"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XgKwUEeuTd_dJv2zYfQ" name="Exploit SS7 to Track Device Location" id="T1450" description="An adversary could exploit signaling system vulnerabilities to track the location of mobile devices. (Citation: Engel-SS7) (Citation: Engel-SS7-2008) (Citation: 3GPP-Security) (Citation: Positive-SS7) (Citation: CSRIC5-WG10-FinalReport)" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1450"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XgawUEeuTd_dJv2zYfQ" name="Exploit TEE Vulnerability" id="T1405" description="A malicious app or other attack vector could be used to exploit vulnerabilities in code running within the Trusted Execution Environment (TEE) (Citation: Thomas-TrustZone). The adversary could then obtain privileges held by the TEE potentially including the ability to access cryptographic keys or other sensitive data (Citation: QualcommKeyMaster). Escalated operating system privileges may be first required in order to have the ability to attack the TEE (Citation: EkbergTEE). If not, privileges within the TEE can potentially be used to exploit the operating system (Citation: laginimaineb-TEE)." applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1405"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XgqwUEeuTd_dJv2zYfQ" name="Exploit via Charging Station or PC" id="T1458" description="If the mobile device is connected (typically via USB) to a charging station or a PC, for example to charge the device's battery, then a compromised or malicious charging station or PC could attempt to exploit the mobile device via the connection(Citation: Krebs-JuiceJacking).&#xA;&#xA;Previous demonstrations have included:&#xA;&#xA;* Injecting malicious applications into iOS devices(Citation: Lau-Mactans).&#xA;* Exploiting a Nexus 6 or 6P device over USB and gaining the ability to perform actions including intercepting phone calls, intercepting network traffic, and obtaining the device physical location(Citation: IBM-NexusUSB).&#xA;* Exploiting Android devices such as the Google Pixel 2 over USB(Citation: GoogleProjectZero-OATmeal).&#xA;&#xA;Products from Cellebrite and Grayshift purportedly can use physical access to the data port to unlock the passcode on some iOS devices(Citation: Computerworld-iPhoneCracking)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1458"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xg6wUEeuTd_dJv2zYfQ" name="Exploit via Radio Interfaces" id="T1477" description="The mobile device may be targeted for exploitation through its interface to cellular networks or other radio interfaces.&#xA;&#xA;### Baseband Vulnerability Exploitation&#xA;&#xA;A message sent over a radio interface (typically cellular, but potentially Bluetooth, GPS, NFC, Wi-Fi(Citation: ProjectZero-BroadcomWiFi) or other) to the mobile device could exploit a vulnerability in code running on the device(Citation: Register-BaseStation)(Citation: Weinmann-Baseband).&#xA;&#xA;### Malicious SMS Message&#xA;&#xA;An SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device(Citation: Forbes-iPhoneSMS). An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages(Citation: SRLabs-SIMCard)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1477"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XhKwUEeuTd_dJv2zYfQ" name="Fake Developer Accounts" id="T1442" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1442"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XhawUEeuTd_dJv2zYfQ" name="File and Directory Discovery" id="T1420" description="On Android, command line tools or the Java file APIs can be used to enumerate file system contents. However, Linux file permissions and SELinux policies generally strongly restrict what can be accessed by apps (without taking advantage of a privilege escalation exploit). The contents of the external storage directory are generally visible, which could present concern if sensitive data is inappropriately stored there.&#xA;&#xA;iOS's security architecture generally restricts the ability to perform file and directory discovery without use of escalated privileges." applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1420"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XhqwUEeuTd_dJv2zYfQ" name="Foreground Persistence" id="T1541" description="Adversaries may abuse Android's `startForeground()` API method to maintain continuous sensor access. Beginning in Android 9, idle applications running in the background no longer have access to device sensors, such as the camera, microphone, and gyroscope.(Citation: Android-SensorsOverview) Applications can retain sensor access by running in the foreground, using Android&#x2019;s `startForeground()` API method. This informs the system that the user is actively interacting with the application, and it should not be killed. The only requirement to start a foreground service is showing a persistent notification to the user.(Citation: Android-ForegroundServices)&#xA;&#xA;Malicious applications may abuse the `startForeground()` API method to continue running in the foreground, while presenting a notification to the user pretending to be a genuine application. This would allow unhindered access to the device&#x2019;s sensors, assuming permission has been previously granted.(Citation: BlackHat Sutter Android Foreground 2019)&#xA;&#xA;Malicious applications may also abuse the `startForeground()` API to inform the Android system that the user is actively interacting with the application, thus preventing it from being killed by the low memory killer.(Citation: TrendMicro-Yellow Camera)" applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1541"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xh6wUEeuTd_dJv2zYfQ" name="Generate Fraudulent Advertising Revenue" id="T1472" description="An adversary could seek to generate fraudulent advertising revenue from mobile devices, for example by triggering automatic clicks of advertising links without user involvement." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1472"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XiKwUEeuTd_dJv2zYfQ" name="Geofencing" id="T1581" description="Adversaries may use a device&#x2019;s geographical location to limit certain malicious behaviors. For example, malware operators may limit the distribution of a second stage payload to certain geographic regions.(Citation: Lookout eSurv)&#xA;&#xA;[Geofencing](https://attack.mitre.org/techniques/T1581) is accomplished by persuading the user to grant the application permission to access location services. The application can then collect, process, and exfiltrate the device&#x2019;s location to perform location-based actions, such as ceasing malicious behavior or showing region-specific advertisements.&#xA;&#xA;One method to accomplish [Geofencing](https://attack.mitre.org/techniques/T1581) on Android is to use the built-in Geofencing API to automatically trigger certain behaviors when the device enters or exits a specified radius around a geographical location. Similar to other [Geofencing](https://attack.mitre.org/techniques/T1581) methods, this requires that the user has granted the `ACCESS_FINE_LOCATION` and `ACCESS_BACKGROUND_LOCATION` permissions. The latter is only required if the application targets Android 10 (API level 29) or higher. However, Android 11 introduced additional permission controls that may restrict background location collection based on user permission choices at runtime. These additional controls include &#x201c;Allow only while using the app&#x201d;, which will effectively prohibit background location collection.(Citation: Android Geofencing API)&#xA;&#xA;Similarly, on iOS, developers can use built-in APIs to setup and execute geofencing. Depending on the use case, the app will either need to call `requestWhenInUseAuthorization()` or `requestAlwaysAuthorization()`, depending on when access to the location services is required. Similar to Android, users also have the option to limit when the application can access the device&#x2019;s location, including one-time use and only when the application is running in the foreground.(Citation: Apple Location Services)&#xA;&#xA;[Geofencing](https://attack.mitre.org/techniques/T1581) can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. For example, location data could be used to limit malware spread and/or capabilities, which could also potentially evade application analysis environments (ex: malware analysis outside of the target geographic area). Other malicious usages could include showing language-specific [Input Prompt](https://attack.mitre.org/techniques/T1411)s and/or advertisements." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1581"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XiawUEeuTd_dJv2zYfQ" name="Input Capture" id="T1417" description="Adversaries may capture user input to obtain credentials or other information from the user through various methods.&#xA;&#xA;Malware may masquerade as a legitimate third-party keyboard to record user keystrokes.(Citation: Zeltser-Keyboard) On both Android and iOS, users must explicitly authorize the use of third-party keyboard apps. Users should be advised to use extreme caution before granting this authorization when it is requested.&#xA;&#xA;On Android, malware may abuse accessibility features to record keystrokes by registering an `AccessibilityService` class, overriding the `onAccessibilityEvent` method, and listening for the `AccessibilityEvent.TYPE_VIEW_TEXT_CHANGED` event type. The event object passed into the function will contain the data that the user typed.&#xA;&#xA;Additional methods of keylogging may be possible if root access is available." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1417"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XiqwUEeuTd_dJv2zYfQ" name="Input Injection" id="T1516" description="A malicious application can inject input to the user interface to mimic user interaction through the abuse of Android's accessibility APIs.&#xA;&#xA;[Input Injection](https://attack.mitre.org/techniques/T1516) can be achieved using any of the following methods:&#xA;&#xA;* Mimicking user clicks on the screen, for example to steal money from a user's PayPal account.(Citation: android-trojan-steals-paypal-2fa)&#xA;* Injecting global actions, such as `GLOBAL_ACTION_BACK` (programatically mimicking a physical back button press), to trigger actions on behalf of the user.(Citation: Talos Gustuff Apr 2019)&#xA;* Inserting input into text fields on behalf of the user. This method is used legitimately to auto-fill text fields by applications such as password managers.(Citation: bitwarden autofill logins)" applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1516"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xi6wUEeuTd_dJv2zYfQ" name="Input Prompt" id="T1411" description="The operating system and installed applications often have legitimate needs to prompt the user for sensitive information such as account credentials, bank account information, or Personally Identifiable Information (PII). Adversaries may mimic this functionality to prompt users for sensitive information.&#xA;&#xA;Compared to traditional PCs, the constrained display size of mobile devices may impair the ability to provide users with contextual information, making users more susceptible to this technique&#x2019;s use.(Citation: Felt-PhishingOnMobileDevices)&#xA;&#xA;Specific approaches to this technique include:&#xA;&#xA;### Impersonate the identity of a legitimate application&#xA;&#xA;A malicious application could impersonate the identity of a legitimate application (e.g. use the same application name and/or icon) and get installed on the device. The malicious app could then prompt the user for sensitive information.(Citation: eset-finance)&#xA;&#xA;### Display a prompt on top of a running legitimate application&#xA;&#xA;A malicious application could display a prompt on top of a running legitimate application to trick users into entering sensitive information into the malicious application rather than the legitimate application. Typically, the malicious application would need to know when the targeted application (and individual activity within the targeted application) is running in the foreground, so that the malicious application knows when to display its prompt. Android 5.0 and 5.1.1, respectively, increased the difficulty of determining the current foreground application through modifications to the `ActivityManager` API.(Citation: Android-getRunningTasks)(Citation: StackOverflow-getRunningAppProcesses). A malicious application can still abuse Android&#x2019;s accessibility features to determine which application is currently in the foreground.(Citation: ThreatFabric Cerberus) Approaches to display a prompt include:&#xA;&#xA;* A malicious application could start a new activity on top of a running legitimate application.(Citation: Felt-PhishingOnMobileDevices)(Citation: Hassell-ExploitingAndroid) Android 10 places new restrictions on the ability for an application to start a new activity on top of another application, which may make it more difficult for adversaries to utilize this technique.(Citation: Android Background)&#xA;* A malicious application could create an application overlay window on top of a running legitimate application. Applications must hold the `SYSTEM_ALERT_WINDOW` permission to create overlay windows. This permission is handled differently than typical Android permissions, and at least under certain conditions is automatically granted to applications installed from the Google Play Store.(Citation: Cloak and Dagger)(Citation: NowSecure Android Overlay)(Citation: Skycure-Accessibility) The `SYSTEM_ALERT_WINDOW` permission and its associated ability to create application overlay windows are expected to be deprecated in a future release of Android in favor of a new API.(Citation: XDA Bubbles)&#xA;&#xA;### Fake device notifications&#xA;&#xA;A malicious application could send fake device notifications to the user. Clicking on the device notification could trigger the malicious application to display an input prompt.(Citation: Group IB Gustuff Mar 2019)" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1411"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XjKwUEeuTd_dJv2zYfQ" name="Insecure Third-Party Libraries" id="T1425" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1425"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XjawUEeuTd_dJv2zYfQ" name="Install Insecure or Malicious Configuration" id="T1478" description="An adversary could attempt to install insecure or malicious configuration settings on the mobile device, through means such as phishing emails or text messages either directly containing the configuration settings as an attachment, or containing a web link to the configuration settings. The device user may be tricked into installing the configuration settings through social engineering techniques (Citation: Symantec-iOSProfile).&#xA;&#xA;For example, an unwanted Certification Authority (CA) certificate could be placed in the device's trusted certificate store, increasing the device's susceptibility to man-in-the-middle network attacks seeking to eavesdrop on or manipulate the device's network communication ([Eavesdrop on Insecure Network Communication](https://attack.mitre.org/techniques/T1439) and [Manipulate Device Communication](https://attack.mitre.org/techniques/T1463)).&#xA;&#xA;On iOS, malicious Configuration Profiles could contain unwanted Certification Authority (CA) certificates or other insecure settings such as unwanted proxy server or VPN settings to route the device's network traffic through an adversary's system. The device could also potentially be enrolled into a malicious Mobile Device Management (MDM) system (Citation: Talos-MDM)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1478"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XjqwUEeuTd_dJv2zYfQ" name="Jamming or Denial of Service" id="T1464" description="An attacker could jam radio signals (e.g. Wi-Fi, cellular, GPS) to prevent the mobile device from communicating. (Citation: NIST-SP800187)(Citation: CNET-Celljammer)(Citation: NYTimes-Celljam)(Citation: Digitaltrends-Celljam)(Citation: Arstechnica-Celljam)" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1464"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xj6wUEeuTd_dJv2zYfQ" name="Keychain" id="T1579" description="Adversaries may collect the keychain storage data from an iOS device to acquire credentials. Keychains are the built-in way for iOS to keep track of users' passwords and credentials for many services and features such as Wi-Fi passwords, websites, secure notes, certificates, private keys, and VPN credentials.&#xA;&#xA;On the device, the keychain database is stored outside of application sandboxes to prevent unauthorized access to the raw data. Standard iOS APIs allow applications access to their own keychain contained within the database. By utilizing a privilege escalation exploit or existing root access, an adversary can access the entire encrypted database.(Citation: Apple Keychain Services)(Citation: Elcomsoft Decrypt Keychain)" applicability="iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1579"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XkKwUEeuTd_dJv2zYfQ" name="Location Tracking" id="T1430" description="An adversary could use a malicious or exploited application to surreptitiously track the device's physical location through use of standard operating system APIs." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1430"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XkawUEeuTd_dJv2zYfQ" name="Lockscreen Bypass" id="T1461" description="An adversary with physical access to a mobile device may seek to bypass the device's lockscreen.&#xA;&#xA;### Biometric Spoofing&#xA;If biometric authentication is used, an adversary could attempt to spoof a mobile device's biometric authentication mechanism(Citation: SRLabs-Fingerprint)(Citation: SecureIDNews-Spoof)(Citation: TheSun-FaceID).&#xA;&#xA;iOS partly mitigates this attack by requiring the device passcode rather than a fingerprint to unlock the device after every device restart and after 48 hours since the device was last unlocked (Citation: Apple-TouchID). Android has similar mitigations.&#xA;&#xA;### Device Unlock Code Guessing or Brute Force&#xA;An adversary could attempt to brute-force or otherwise guess the lockscreen passcode (typically a PIN or password), including physically observing (&quot;shoulder surfing&quot;) the device owner's use of the lockscreen passcode. &#xA;&#xA;### Exploit Other Device Lockscreen Vulnerabilities&#xA;Techniques have periodically been demonstrated that exploit vulnerabilities on Android (Citation: Wired-AndroidBypass), iOS (Citation: Kaspersky-iOSBypass), or other mobile devices to bypass the device lockscreen. The vulnerabilities are generally patched by the device/operating system vendor once they become aware of their existence." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1461"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XkqwUEeuTd_dJv2zYfQ" name="Malicious Media Content" id="T1457" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1457"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xk6wUEeuTd_dJv2zYfQ" name="Malicious SMS Message" id="T1454" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1454"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XlKwUEeuTd_dJv2zYfQ" name="Malicious Software Development Tools" id="T1462" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1462"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XlawUEeuTd_dJv2zYfQ" name="Malicious or Vulnerable Built-in Device Functionality" id="T1473" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1473"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XlqwUEeuTd_dJv2zYfQ" name="Manipulate App Store Rankings or Ratings" id="T1452" description="An adversary could use access to a compromised device's credentials to attempt to manipulate app store rankings or ratings by triggering application downloads or posting fake reviews of applications. This technique likely requires privileged access (a rooted or jailbroken device)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1452"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xl6wUEeuTd_dJv2zYfQ" name="Manipulate Device Communication" id="T1463" description="If network traffic between the mobile device and a remote server is not securely protected, then an attacker positioned on the network may be able to manipulate network communication without being detected. For example, FireEye researchers found in 2014 that 68% of the top 1,000 free applications in the Google Play Store had at least one Transport Layer Security (TLS) implementation vulnerability potentially opening the applications' network traffic to man-in-the-middle attacks (Citation: FireEye-SSL)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1463"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XmKwUEeuTd_dJv2zYfQ" name="Masquerade as Legitimate Application" id="T1444" description="An adversary could distribute developed malware by masquerading the malware as a legitimate application. This can be done in two different ways: by embedding the malware in a legitimate application, or by pretending to be a legitimate application.&#xA;&#xA;Embedding the malware in a legitimate application is done by downloading the application, disassembling it, adding the malicious code, and then re-assembling it.(Citation: Zhou) The app would appear to be the original app, but would contain additional malicious functionality. The adversary could then publish the malicious application to app stores or use another delivery method.&#xA;&#xA;Pretending to be a legitimate application relies heavily on lack of scrutinization by the user. Typically, a malicious app pretending to be a legitimate one will have many similar details as the legitimate one, such as name, icon, and description.(Citation: Palo Alto HenBox)&#xA;&#xA;Malicious applications may also masquerade as legitimate applications when requesting access to the accessibility service in order to appear as legitimate to the user, increasing the likelihood that the access will be granted." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1444"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XmawUEeuTd_dJv2zYfQ" name="Modify Cached Executable Code" id="T1403" description="ART (the Android Runtime) compiles optimized code on the device itself to improve performance. An adversary may be able to use escalated privileges to modify the cached code in order to hide malicious behavior. Since the code is compiled on the device, it may not receive the same level of integrity checks that are provided to code running in the system partition.(Citation: Sabanal-ART)" applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1403"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XmqwUEeuTd_dJv2zYfQ" name="Modify OS Kernel or Boot Partition" id="T1398" description="If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the device kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit as described under Detection), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.&#xA;&#xA;Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.&#xA;&#xA;If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1398"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xm6wUEeuTd_dJv2zYfQ" name="Modify System Partition" id="T1400" description="If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the device system partition, where it may persist after device resets and may not be easily removed by the device user.&#xA;&#xA;Many Android devices provide the ability to unlock the bootloader for development purposes. An unlocked bootloader may provide the ability for an adversary to modify the system partition. Even if the bootloader is locked, it may be possible for an adversary to escalate privileges and then modify the system partition." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1400"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XnKwUEeuTd_dJv2zYfQ" name="Modify Trusted Execution Environment" id="T1399" description="If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the device's Trusted Execution Environment (TEE) or other similar isolated execution environment where the code can evade detection, may persist after device resets, and may not be removable by the device user. Running code within the TEE may provide an adversary with the ability to monitor or tamper with overall device behavior.(Citation: Roth-Rootkits)" applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1399"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XnawUEeuTd_dJv2zYfQ" name="Native Code" id="T1575" description="Adversaries may use Android&#x2019;s Native Development Kit (NDK) to write native functions that can achieve execution of binaries or functions. Like system calls on a traditional desktop operating system, native code achieves execution on a lower level than normal Android SDK calls.&#xA;&#xA;The NDK allows developers to write native code in C or C++ that is compiled directly to machine code, avoiding all intermediate languages and steps in compilation that higher level languages, like Java, typically have. The Java Native Interface (JNI) is the component that allows Java functions in the Android app to call functions in a native library.(Citation: Google NDK Getting Started)&#xA;&#xA;Adversaries may also choose to use native functions to execute malicious code since native actions are typically much more difficult to analyze than standard, non-native behaviors.(Citation: MITRE App Vetting Effectiveness)" applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1575"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XnqwUEeuTd_dJv2zYfQ" name="Network Information Discovery" id="T1507" description="Adversaries may use device sensors to collect information about nearby networks, such as Wi-Fi and Bluetooth." applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1507"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xn6wUEeuTd_dJv2zYfQ" name="Network Service Scanning" id="T1423" description="Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans from the mobile device. This technique may take advantage of the mobile device's access to an internal enterprise network either through local connectivity or through a Virtual Private Network (VPN)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1423"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XoKwUEeuTd_dJv2zYfQ" name="Network Traffic Capture or Redirection" id="T1410" description="An adversary may capture network traffic to and from the device to obtain credentials or other sensitive data, or redirect network traffic to flow through an adversary-controlled gateway to do the same.&#xA;&#xA;A malicious app could register itself as a VPN client on Android or iOS to gain access to network packets. However, on both platforms, the user must grant consent to the app to act as a VPN client, and on iOS the app requires a special entitlement that must be granted by Apple.&#xA;&#xA;Alternatively, if a malicious app is able to escalate operating system privileges, it may be able to use those privileges to gain access to network traffic.&#xA;&#xA;An adversary could redirect network traffic to an adversary-controlled gateway by establishing a VPN connection or by manipulating the device's proxy settings. For example, Skycure (Citation: Skycure-Profiles) describes the ability to redirect network traffic by installing a malicious iOS Configuration Profile.&#xA;&#xA;If applications encrypt their network traffic, sensitive data may not be accessible to an adversary, depending on the point of capture." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1410"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XoawUEeuTd_dJv2zYfQ" name="Obfuscated Files or Information" id="T1406" description="An app could contain malicious code in obfuscated or encrypted form, then deobfuscate or decrypt the code at runtime to evade many app vetting techniques.(Citation: Rastogi) (Citation: Zhou) (Citation: TrendMicro-Obad) (Citation: Xiao-iOS)" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1406"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XoqwUEeuTd_dJv2zYfQ" name="Obtain Device Cloud Backups" id="T1470" description="An adversary who is able to obtain unauthorized access to or misuse authorized access to cloud backup services (e.g. Google's Android backup service or Apple's iCloud) could use that access to obtain sensitive data stored in device backups. For example, the Elcomsoft Phone Breaker product advertises the ability to retrieve iOS backup data from Apple's iCloud (Citation: Elcomsoft-EPPB). Elcomsoft also describes (Citation: Elcomsoft-WhatsApp) obtaining WhatsApp communication histories from backups stored in iCloud." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1470"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xo6wUEeuTd_dJv2zYfQ" name="Process Discovery" id="T1424" description="On Android versions prior to 5, applications can observe information about other processes that are running through methods in the ActivityManager class. On Android versions prior to 7, applications can obtain this information by executing the &lt;code>ps&lt;/code> command, or by examining the &lt;code>/proc&lt;/code> directory. Starting in Android version 7, use of the Linux kernel's &lt;code>hidepid&lt;/code> feature prevents applications (without escalated privileges) from accessing this information (Citation: Android-SELinuxChanges)." applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1424"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XpKwUEeuTd_dJv2zYfQ" name="Remote File Copy" id="T1544" description="Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Files may be copied from an external adversary-controlled system through the Command and Control channel to bring tools into the victim network or onto the victim&#x2019;s device." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1544"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XpawUEeuTd_dJv2zYfQ" name="Remotely Install Application" id="T1443" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1443"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XpqwUEeuTd_dJv2zYfQ" name="Remotely Track Device Without Authorization" id="T1468" description="An adversary who is able to obtain unauthorized access to or misuse authorized access to cloud services (e.g. Google's Android Device Manager or Apple iCloud's Find my iPhone) or to an enterprise mobility management (EMM) / mobile device management (MDM) server console could use that access to track mobile devices.(Citation: Krebs-Location)" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1468"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xp6wUEeuTd_dJv2zYfQ" name="Remotely Wipe Data Without Authorization" id="T1469" description="An adversary who is able to obtain unauthorized access to or misuse authorized access to cloud services (e.g. Google's Android Device Manager or Apple iCloud's Find my iPhone) or to an EMM console could use that access to wipe enrolled devices (Citation: Honan-Hacking)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1469"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XqKwUEeuTd_dJv2zYfQ" name="Rogue Cellular Base Station" id="T1467" description="An adversary could set up a rogue cellular base station and then use it to eavesdrop on or manipulate cellular device communication. A compromised cellular femtocell could be used to carry out this technique(Citation: Computerworld-Femtocell)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1467"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XqawUEeuTd_dJv2zYfQ" name="Rogue Wi-Fi Access Points" id="T1465" description="An adversary could set up unauthorized Wi-Fi access points or compromise existing access points and, if the device connects to them, carry out network-based attacks such as eavesdropping on or modifying network communication(Citation: NIST-SP800153)(Citation: Kaspersky-DarkHotel)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1465"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XqqwUEeuTd_dJv2zYfQ" name="SIM Card Swap" id="T1451" description="An adversary could convince the mobile network operator (e.g. through social networking, forged identification, or insider attacks performed by trusted employees) to issue a new SIM card and associate it with an existing phone number and account (Citation: NYGov-Simswap) (Citation: Motherboard-Simswap2). The adversary could then obtain SMS messages or hijack phone calls intended for someone else (Citation: Betanews-Simswap). &#xA;&#xA;One use case is intercepting authentication messages or phone calls to obtain illicit access to online banking or other online accounts, as many online services allow account password resets by sending an authentication code over SMS to a phone number associated with the account (Citation: Guardian-Simswap) (Citation: Motherboard-Simswap1)(Citation: Krebs-SimSwap)(Citation: TechCrunch-SimSwap)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1451"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xq6wUEeuTd_dJv2zYfQ" name="SMS Control" id="T1582" description="Adversaries may delete, alter, or send SMS messages without user authorization. This could be used to hide C2 SMS messages, spread malware, or various external effects.&#xA;&#xA;This can be accomplished by requesting the `RECEIVE_SMS` or `SEND_SMS` permissions depending on what the malware is attempting to do. If the app is set as the default SMS handler on the device, the `SMS_DELIVER` broadcast intent can be registered, which allows the app to write to the SMS content provider. The content provider directly modifies the messaging database on the device, which could allow malicious applications with this ability to insert, modify, or delete arbitrary messages on the device.(Citation: SMS KitKat)(Citation: Android SmsProvider)" applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1582"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XrKwUEeuTd_dJv2zYfQ" name="Screen Capture" id="T1513" description="Adversaries may use screen captures to collect information about applications running in the foreground, capture user data, credentials, or other sensitive information. Applications running in the background can capture screenshots or videos of another application running in the foreground by using the Android `MediaProjectionManager` (generally requires the device user to grant consent).(Citation: Fortinet screencap July 2019)(Citation: Android ScreenCap1 2019) Background applications can also use Android accessibility services to capture screen contents being displayed by a foreground application.(Citation: Lookout-Monokle) An adversary with root access or Android Debug Bridge (adb) access could call the Android `screencap` or `screenrecord` commands.(Citation: Android ScreenCap2 2019)(Citation: Trend Micro ScreenCap July 2015)" applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1513"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XrawUEeuTd_dJv2zYfQ" name="Standard Application Layer Protocol" id="T1437" description="Adversaries may communicate using a common, standardized application layer protocol such as HTTP, HTTPS, SMTP, or DNS to avoid detection by blending in with existing traffic.&#xA;&#xA;In the mobile environment, the Google Cloud Messaging (GCM; two-way) and Apple Push Notification Service (APNS; one-way server-to-device) are commonly used protocols on Android and iOS respectively that would blend in with routine device traffic and are difficult for enterprises to inspect. Google reportedly responds to reports of abuse by blocking access to GCM.(Citation: Kaspersky-MobileMalware)" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1437"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XrqwUEeuTd_dJv2zYfQ" name="Standard Cryptographic Protocol" id="T1521" description="Adversaries may explicitly employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if necessary secret keys are encoded and/or generated within malware samples/configuration files." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1521"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xr6wUEeuTd_dJv2zYfQ" name="Stolen Developer Credentials or Signing Keys" id="T1441" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1441"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XsKwUEeuTd_dJv2zYfQ" name="Supply Chain Compromise" id="T1474" description="As further described in [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195), supply chain compromise is the manipulation of products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise. Somewhat related, adversaries could also identify and exploit inadvertently present vulnerabilities. In many cases, it may be difficult to be certain whether exploitable functionality is due to malicious intent or simply inadvertent mistake.&#xA;&#xA;Third-party libraries incorporated into mobile apps could contain malicious behavior, privacy-invasive behavior, or exploitable vulnerabilities. An adversary could deliberately insert malicious behavior or could exploit inadvertent vulnerabilities. For example, security issues have previously been identified in third-party advertising libraries incorporated into apps.(Citation: NowSecure-RemoteCode)(Citation: Grace-Advertisement)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1474"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XsawUEeuTd_dJv2zYfQ" name="Suppress Application Icon" id="T1508" description="A malicious application could suppress its icon from being displayed to the user in the application launcher to hide the fact that it is installed, and to make it more difficult for the user to uninstall the application. Hiding the application's icon programmatically does not require any special permissions.&#xA;&#xA;This behavior has been seen in the BankBot/Spy Banker family of malware.(Citation: android-trojan-steals-paypal-2fa)(Citation: sunny-stolen-credentials)(Citation: bankbot-spybanker)" applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1508"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XsqwUEeuTd_dJv2zYfQ" name="System Information Discovery" id="T1426" description="An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, and architecture.&#xA;&#xA;On Android, much of this information is programmatically accessible to applications through the android.os.Build class.(Citation: Android-Build)&#xA;&#xA;On iOS, techniques exist for applications to programmatically access this information.(Citation: StackOverflow-iOSVersion)" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1426"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xs6wUEeuTd_dJv2zYfQ" name="System Network Configuration Discovery" id="T1422" description="On Android, details of onboard network interfaces are accessible to apps through the `java.net.NetworkInterface` class.(Citation: NetworkInterface) The Android `TelephonyManager` class can be used to gather related information such as the IMSI, IMEI, and phone number.(Citation: TelephonyManager)&#xA;&#xA;On iOS, gathering network configuration information is not possible without root access." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1422"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XtKwUEeuTd_dJv2zYfQ" name="System Network Connections Discovery" id="T1421" description="On Android, applications can use standard APIs to gather a list of network connections to and from the device. For example, the Network Connections app available in the Google Play Store (Citation: ConnMonitor) advertises this functionality." applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1421"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XtawUEeuTd_dJv2zYfQ" name="URI Hijacking" id="T1416" description="Adversaries may register Uniform Resource Identifiers (URIs) to intercept sensitive data.&#xA;&#xA;Applications regularly register URIs with the operating system to act as a response handler for various actions, such as logging into an app using an external account via single sign-on. This allows redirections to that specific URI to be intercepted by the application. If a malicious application were to register for a URI that was already in use by a genuine application, the malicious application may be able to intercept data intended for the genuine application or perform a phishing attack against the genuine application. Intercepted data may include OAuth authorization codes or tokens that could be used by the malicious application to gain access to resources.(Citation: Trend Micro iOS URL Hijacking)(Citation: IETF-PKCE)" applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1416"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XtqwUEeuTd_dJv2zYfQ" name="URL Scheme Hijacking" id="T1415" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1415"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4Xt6wUEeuTd_dJv2zYfQ" name="Uncommonly Used Port" id="T1509" description="Adversaries may use non-standard ports to exfiltrate information." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1509"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XuKwUEeuTd_dJv2zYfQ" name="Uninstall Malicious Application" id="T1576" description="Adversaries may include functionality in malware that uninstalls the malicious application from the device. This can be achieved by:&#xA;&#xA;* Abusing device owner permissions to perform silent uninstallation using device owner API calls.&#xA;* Abusing root permissions to delete files from the filesystem.&#xA;* Abusing the accessibility service. This requires an intent be sent to the system to request uninstallation, and then abusing the accessibility service to click the proper places on the screen to confirm uninstallation." applicability="Android" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1576"/>
    <externals xsi:type="TRADES:ExternalThreat" xmi:id="_b-4XuawUEeuTd_dJv2zYfQ" name="Web Service" id="T1481" description="Adversaries may use an existing, legitimate external Web service as a means for relaying commands to a compromised system.&#xA;&#xA;These commands may also include pointers to command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.&#xA;&#xA;Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.&#xA;&#xA;Use of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed)." applicability="Android,iOS" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/techniques/T1481"/>
  </threatOwner>
  <controlOwner xmi:id="_b-4XuqwUEeuTd_dJv2zYfQ">
    <externals xsi:type="TRADES:ExternalControl" xmi:id="_b-4Xu6wUEeuTd_dJv2zYfQ" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/mitigations/M1013" name="Application Developer Guidance" id="M1013" description="This mitigation describes any guidance or training given to developers of applications to avoid introducing security weaknesses that an adversary may be able to take advantage of.">
      <mitigationRelations xmi:id="_b-4XvKwUEeuTd_dJv2zYfQ" threat="_b-4XWawUEeuTd_dJv2zYfQ" description="Application developers should be discouraged from writing sensitive data to the system log in production apps."/>
      <mitigationRelations xmi:id="_b-4XvawUEeuTd_dJv2zYfQ" threat="_b-4XrKwUEeuTd_dJv2zYfQ" description="Application developers can apply `FLAG_SECURE` to sensitive screens within their apps to make it more difficult for the screen contents to be captured.(Citation: Nightwatch screencap April 2016)"/>
      <mitigationRelations xmi:id="_b-4XvqwUEeuTd_dJv2zYfQ" threat="_b-4XWKwUEeuTd_dJv2zYfQ" description="Application developers could be encouraged to avoid placing sensitive data in notification text."/>
      <mitigationRelations xmi:id="_b-4Xv6wUEeuTd_dJv2zYfQ" threat="_b-4XtawUEeuTd_dJv2zYfQ" description="Developers should use Android App Links(Citation: Android App Links) and iOS Universal Links(Citation: iOS Universal Links) to provide a secure binding between URIs and applications, preventing malicious applications from intercepting redirections. Additionally, for OAuth use cases, PKCE(Citation: IETF-PKCE) should be used to prevent use of stolen authorization codes."/>
    </externals>
    <externals xsi:type="TRADES:ExternalControl" xmi:id="_b-4XwKwUEeuTd_dJv2zYfQ" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/mitigations/M1005" name="Application Vetting" id="M1005" description="Enterprises can vet applications for exploitable vulnerabilities or unwanted (privacy-invasive or malicious) behaviors. Enterprises can inspect applications themselves or use a third-party service.&#xA;&#xA;Enterprises may impose policies to only allow pre-approved applications to be installed on their devices or may impose policies to block use of specific applications known to have issues. In Bring Your Own Device (BYOD) environments, enterprises may only be able to impose these policies over an enterprise-managed portion of the device.&#xA;&#xA;Application Vetting is not a complete mitigation. Techniques such as [Detect App Analysis Environment](https://attack.mitre.org/techniques/T1440) exist that can enable adversaries to bypass vetting.">
      <mitigationRelations xmi:id="_b-4XwawUEeuTd_dJv2zYfQ" threat="_b-4XUqwUEeuTd_dJv2zYfQ" description="Enterprises could perform app vetting before allowing apps to be installed on devices and search for abuse of accessibility features as part of the analysis, or otherwise use mobile app reputation services to search for known malicious apps."/>
      <mitigationRelations xmi:id="_b-4XwqwUEeuTd_dJv2zYfQ" threat="_b-4XU6wUEeuTd_dJv2zYfQ" description="It is rare for applications to utilize Device Administrator access. App vetting can detect apps that do so, and those apps should be closely scrutinized. A static analysis approach can be used to identify ransomware apps including apps that abuse Device Administrator access.(Citation: Maggi-Ransomware)"/>
      <mitigationRelations xmi:id="_b-4Xw6wUEeuTd_dJv2zYfQ" threat="_b-4XVawUEeuTd_dJv2zYfQ" description="On Android, accessing device calendar data requires that the app hold the READ_CALENDAR permission. Apps that request this permission could be closely scrutinized to ensure that the request is appropriate. On iOS, the app vetting process can determine whether apps access device calendar data, with extra scrutiny applied to any that do so."/>
      <mitigationRelations xmi:id="_b-4XxKwUEeuTd_dJv2zYfQ" threat="_b-4XVqwUEeuTd_dJv2zYfQ" description="On Android, accessing the device call log requires that the app hold the READ_CALL_LOG permission. Apps that request this permission could be closely scrutinized to ensure that the request is appropriate."/>
      <mitigationRelations xmi:id="_b-4XxawUEeuTd_dJv2zYfQ" threat="_b-4XZawUEeuTd_dJv2zYfQ" description="Enterprises performing application vetting could search for applications that declare the RECEIVE_SMS permission and scrutinize them closely."/>
      <mitigationRelations xmi:id="_b-4XxqwUEeuTd_dJv2zYfQ" threat="_b-4Xh6wUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4Xx6wUEeuTd_dJv2zYfQ" threat="_b-4Xo6wUEeuTd_dJv2zYfQ" description="Application vetting techniques could be used to attempt to identify applications with this behavior."/>
      <mitigationRelations xmi:id="_b-4XyKwUEeuTd_dJv2zYfQ" threat="_b-4Xb6wUEeuTd_dJv2zYfQ" description="App store operators and enterprises could assess reputational characteristics of the app, including the popularity of the app or other apps from the same developer and whether or not security issues have been found in other apps from the same developer."/>
      <mitigationRelations xmi:id="_b-4XyawUEeuTd_dJv2zYfQ" threat="_b-4XgawUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4XyqwUEeuTd_dJv2zYfQ" threat="_b-4XoawUEeuTd_dJv2zYfQ" description="Application vetting techniques may be able to alert to the presence of obfuscated or encrypted code in applications, and such applications could have extra scrutiny applied. Unfortunately, this mitigation is likely impractical, as many legitimate applications apply code obfuscation or encryption to resist adversary techniques such as Repackaged Application. Dynamic analysis when used in application vetting may in some cases be able to identify malicious code in obfuscated or encrypted form by detecting the code at execution time (after it is deobfuscated or decrypted). Some application vetting techniques apply reputation analysis of the application developer and can alert to potentially suspicious applications without actual examination of application code."/>
      <mitigationRelations xmi:id="_b-4Xy6wUEeuTd_dJv2zYfQ" threat="_b-4XtKwUEeuTd_dJv2zYfQ" description="During application vetting, applications could be examined to see if they have this behavior, and extra scrutiny could potentially be given to applications that do."/>
      <mitigationRelations xmi:id="_b-4XzKwUEeuTd_dJv2zYfQ" threat="_b-4XV6wUEeuTd_dJv2zYfQ" description="On Android, accessing the device contact list requires that the app hold the READ_CONTACTS permission. Apps that request this permission could be closely scrutinized to ensure that the request is appropriate. On iOS, the app vetting process can determine whether apps access the device contact list, with extra scrutiny applied to any that do so."/>
      <mitigationRelations xmi:id="_b-4XzawUEeuTd_dJv2zYfQ" threat="_b-4XsqwUEeuTd_dJv2zYfQ" description="App vetting procedures can search for apps that use the android.os.Build class, but these procedures could potentially be evaded and are likely not practical in this case, as many apps are likely to use this functionality as part of their legitimate behavior."/>
      <mitigationRelations xmi:id="_b-4XzqwUEeuTd_dJv2zYfQ" threat="_b-4XfqwUEeuTd_dJv2zYfQ" description="Application vetting may be able to identify the presence of exploit code within applications."/>
      <mitigationRelations xmi:id="_b-4Xz6wUEeuTd_dJv2zYfQ" threat="_b-4XoKwUEeuTd_dJv2zYfQ" description="Closely scrutinize applications that request VPN access before allowing their use."/>
      <mitigationRelations xmi:id="_b-4X0KwUEeuTd_dJv2zYfQ" threat="_b-4XWawUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4X0awUEeuTd_dJv2zYfQ" threat="_b-4XZKwUEeuTd_dJv2zYfQ" description="Applications could be vetted for their use of the clipboard manager APIs with extra scrutiny given to application that make use of them."/>
      <mitigationRelations xmi:id="_b-4X0qwUEeuTd_dJv2zYfQ" threat="_b-4XeKwUEeuTd_dJv2zYfQ" description="Application vetting techniques could (either statically or dynamically) look for indications that the application downloads and executes new code at runtime (e.g., on Android use of DexClassLoader, System.load, or the WebView JavaScriptInterface capability, or on iOS use of JSPatch or similar capabilities). Unfortunately, this is only a partial mitigation, as additional scrutiny would still need to be applied to applications that use these techniques, as the techniques are often used without malicious intent, and because applications may employ other techniques such as to hide their use of these techniques."/>
      <mitigationRelations xmi:id="_b-4X06wUEeuTd_dJv2zYfQ" threat="_b-4XkKwUEeuTd_dJv2zYfQ" description="On Android, applications must request the ACCESS_COARSE_LOCATION or ACCESS_FINE_LOCATION permission to access the device's physical location. Extra scrutiny could be given to applications that request these permissions. On iOS, calls to the relevant APIs could be detected during the vetting process."/>
      <mitigationRelations xmi:id="_b-4X1KwUEeuTd_dJv2zYfQ" threat="_b-4Xs6wUEeuTd_dJv2zYfQ" description="Application vetting could be used to analyze applications to determine whether they access this information, including determining whether the application requests the Android ACCESS_NETWORK_STATE permission (required in order to access NetworkInterface information) or the READ_PHONE_STATE permission (required in order to access TelephonyManager information)."/>
      <mitigationRelations xmi:id="_b-4X1awUEeuTd_dJv2zYfQ" threat="_b-4XXqwUEeuTd_dJv2zYfQ" description="Application vetting techniques could search for use of the Android PackageManager class to enumerate other apps, and such applications could have extra scrutiny applied to them. However, this technique may not be practical if many apps invoke these methods as part of their legitimate behavior. On iOS, application vetting techniques could similarly search for use of the private API call necessary to obtain a list of apps installed on the device. Additionally, on iOS, use of the private API call is likely to result in the app not being accepted into Apple's App Store."/>
      <mitigationRelations xmi:id="_b-4X1qwUEeuTd_dJv2zYfQ" threat="_b-4XZqwUEeuTd_dJv2zYfQ" description="Application vetting services can check for applications that request SMS permissions, and can provide extra scrutiny to those that do."/>
      <mitigationRelations xmi:id="_b-4X16wUEeuTd_dJv2zYfQ" threat="_b-4XtqwUEeuTd_dJv2zYfQ" description="Check for potential malicious definitions of URL schemes when vetting applications. Also, when examining apps for potential vulnerabilities, encourage use of universal links as an alternative to URL schemes. When examining apps that use OAuth, encourage use of best practices.(Citation: Apple-UniversalLinks)(Citation: IETF-OAuthNativeApps)"/>
      <mitigationRelations xmi:id="_b-4X2KwUEeuTd_dJv2zYfQ" threat="_b-4XtawUEeuTd_dJv2zYfQ" description="When vetting applications for potential security weaknesses, the vetting process could look for insecure use of intents. Developers should be encouraged to use techniques to ensure that the intent can only be sent to an appropriate destination (e.g., use explicit rather than implicit intents, permission checking, checking of the destination app's signing certificate, or the App Links feature added in Android 6.0). For mobile applications using OAuth, encourage use of best practice.(Citation: IETF-OAuthNativeApps)(Citation: Android-AppLinks)"/>
      <mitigationRelations xmi:id="_b-4X2awUEeuTd_dJv2zYfQ" threat="_b-4XbKwUEeuTd_dJv2zYfQ" description="A static analysis approach may be able to identify ransomware apps that encrypt user files on the device.(Citation: Maggi-Ransomware)"/>
      <mitigationRelations xmi:id="_b-4X2qwUEeuTd_dJv2zYfQ" threat="_b-4Xl6wUEeuTd_dJv2zYfQ" description="Application vetting techniques can scan for use of cleartext communication, insecure TrustManager implementations, and other potential network communication weaknesses. The Google Play Store now automatically assesses submitted applications for insecure TrustManager implementations.(Citation: Google-TrustManager)"/>
      <mitigationRelations xmi:id="_b-4X26wUEeuTd_dJv2zYfQ" threat="_b-4Xt6wUEeuTd_dJv2zYfQ" description="Application vetting reports may show network communications performed by the application, including hosts, ports, protocols, and URLs."/>
      <mitigationRelations xmi:id="_b-4X3KwUEeuTd_dJv2zYfQ" threat="_b-4XiqwUEeuTd_dJv2zYfQ" description="Applications that register an accessibility service should be scrutinized further for malicious behavior."/>
      <mitigationRelations xmi:id="_b-4X3awUEeuTd_dJv2zYfQ" threat="_b-4XcqwUEeuTd_dJv2zYfQ" description="It is rare for applications to utilize Device Administrator access. App vetting can detect apps that do so, and those apps should be closely scrutinized. A static analysis approach can be used to identify ransomware apps including apps that abuse Device Administrator access.(Citation: Maggi-Ransomware)"/>
      <mitigationRelations xmi:id="_b-4X3qwUEeuTd_dJv2zYfQ" threat="_b-4XiawUEeuTd_dJv2zYfQ" description="Applications that attempt to register themselves as a device keyboard or request the `android.permission.BIND_ACCESSIBILITY_SERVICE` permission in a service declaration should be closely scrutinized during the vetting process."/>
      <mitigationRelations xmi:id="_b-4X36wUEeuTd_dJv2zYfQ" threat="_b-4XYqwUEeuTd_dJv2zYfQ" description="Applications using the android permission `android.permission.RECORD_AUDIO` or iOS applications using `RequestRecordPermission` could be more closely scrutinized and monitored. If `android.permission.CAPTURE_AUDIO_OUTPUT` is found in a third-party application, it should be heavily scrutinized."/>
      <mitigationRelations xmi:id="_b-4X4KwUEeuTd_dJv2zYfQ" threat="_b-4XWqwUEeuTd_dJv2zYfQ" description="Ensure applications do not store data in an insecure fashion, such as in unprotected external storage, without acknowledging the risk that the data can potentially be accessed or modified by other applications."/>
      <mitigationRelations xmi:id="_b-4X4awUEeuTd_dJv2zYfQ" threat="_b-4Xe6wUEeuTd_dJv2zYfQ" description="Applications attempting to get `android.os.SystemProperties` or `getprop` with the runtime `exec()` commands should be closely scrutinized. Google does not recommend the use of system properties within applications."/>
      <mitigationRelations xmi:id="_b-4X4qwUEeuTd_dJv2zYfQ" threat="_b-4XY6wUEeuTd_dJv2zYfQ" description="During the vetting process applications using the android permission `android.permission.CAMERA`, or the iOS `NSCameraUsageDescription` plist entry could be analyzed more closely."/>
      <mitigationRelations xmi:id="_b-4X46wUEeuTd_dJv2zYfQ" threat="_b-4XrKwUEeuTd_dJv2zYfQ" description="Applications can be vetted for their use of the Android MediaProjectionManager class, with extra scrutiny applied to any application that uses the class."/>
      <mitigationRelations xmi:id="_b-4X5KwUEeuTd_dJv2zYfQ" threat="_b-4XZ6wUEeuTd_dJv2zYfQ" description="Applications could be vetted for their use of the clipboard manager APIs with extra scrutiny given to application that make use of them."/>
      <mitigationRelations xmi:id="_b-4X5awUEeuTd_dJv2zYfQ" threat="_b-4Xi6wUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4X5qwUEeuTd_dJv2zYfQ" threat="_b-4XaKwUEeuTd_dJv2zYfQ" description="Static or dynamic code analysis to look for misuse of dynamic libraries. Increased focus on applications utilizing `DexClassLoader`. "/>
      <mitigationRelations xmi:id="_b-4X56wUEeuTd_dJv2zYfQ" threat="_b-4XhqwUEeuTd_dJv2zYfQ" description="Applications could be vetted for their use of the `startForeground()` API, and could be further scrutinized if usage is found."/>
      <mitigationRelations xmi:id="_b-4X6KwUEeuTd_dJv2zYfQ" threat="_b-4XpKwUEeuTd_dJv2zYfQ" description="Applications with network connections to unknown domains or IP addresses could be further scrutinized to detect unauthorized file copying. Further, some application vetting services may indicate precisely what content was requested during application execution."/>
      <mitigationRelations xmi:id="_b-4X6awUEeuTd_dJv2zYfQ" threat="_b-4XnawUEeuTd_dJv2zYfQ" description="Application vetting services could look for the `native` keyword in function definitions. However, this is widely used for legitimate purposes, so this may not be feasible. Application vetting services may also be able to detect behaviors carried out through the Native Development Kit (NDK) via dynamic analysis."/>
      <mitigationRelations xmi:id="_b-4X6qwUEeuTd_dJv2zYfQ" threat="_b-4XuKwUEeuTd_dJv2zYfQ" description="Application vetting services could look for use of the accessibility service or features that typically require root access."/>
      <mitigationRelations xmi:id="_b-4X66wUEeuTd_dJv2zYfQ" threat="_b-4XaqwUEeuTd_dJv2zYfQ" description="Application vetting services could look for attempted usage of the Janus vulnerability."/>
      <mitigationRelations xmi:id="_b-4X7KwUEeuTd_dJv2zYfQ" threat="_b-4Xj6wUEeuTd_dJv2zYfQ" description="Application vetting services may be able to detect known privilege escalation exploits contained within applications."/>
      <mitigationRelations xmi:id="_b-4X7awUEeuTd_dJv2zYfQ" threat="_b-4XbqwUEeuTd_dJv2zYfQ" description="Application vetting services could be extra scrutinous of applications that request device administrator permissions."/>
      <mitigationRelations xmi:id="_b-4X7qwUEeuTd_dJv2zYfQ" threat="_b-4XiKwUEeuTd_dJv2zYfQ" description="Application vetting services can detect unnecessary and potentially abused location permissions or API calls."/>
      <mitigationRelations xmi:id="_b-4X76wUEeuTd_dJv2zYfQ" threat="_b-4Xq6wUEeuTd_dJv2zYfQ" description="Application vetting services could provide further scrutiny to applications that request SMS-based permissions."/>
    </externals>
    <externals xsi:type="TRADES:ExternalControl" xmi:id="_b-4X8KwUEeuTd_dJv2zYfQ" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/mitigations/M1002" name="Attestation" id="M1002" description="Enable remote attestation capabilities when available (such as Android SafetyNet or Samsung Knox TIMA Attestation) and prohibit devices that fail the attestation from accessing enterprise resources.">
      <mitigationRelations xmi:id="_b-4X8awUEeuTd_dJv2zYfQ" threat="_b-4XmqwUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4X8qwUEeuTd_dJv2zYfQ" threat="_b-4XuKwUEeuTd_dJv2zYfQ" description="Attestation can detect rooted devices."/>
    </externals>
    <externals xsi:type="TRADES:ExternalControl" xmi:id="_b-4X86wUEeuTd_dJv2zYfQ" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/mitigations/M1007" name="Caution with Device Administrator Access" id="M1007" description="Warn device users not to accept requests to grant Device Administrator access to applications without good reason.&#xA;&#xA;Additionally, application vetting should include a check on whether the application requests Device Administrator access. Applications that do request Device Administrator access should be carefully scrutinized and only allowed to be used if a valid reason exists.">
      <mitigationRelations xmi:id="_b-4X9KwUEeuTd_dJv2zYfQ" threat="_b-4XcqwUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4X9awUEeuTd_dJv2zYfQ" threat="_b-4XbqwUEeuTd_dJv2zYfQ" description="There are very limited circumstances under which device administrator access should be granted."/>
      <mitigationRelations xmi:id="_b-4X9qwUEeuTd_dJv2zYfQ" threat="_b-4XU6wUEeuTd_dJv2zYfQ"/>
    </externals>
    <externals xsi:type="TRADES:ExternalControl" xmi:id="_b-4X96wUEeuTd_dJv2zYfQ" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/mitigations/M1010" name="Deploy Compromised Device Detection Method" id="M1010" description="A variety of methods exist that can be used to enable enterprises to identify compromised (e.g. rooted/jailbroken) devices, whether using security mechanisms built directly into the device, third-party mobile security applications, enterprise mobility management (EMM)/mobile device management (MDM) capabilities, or other methods. Some methods may be trivial to evade while others may be more sophisticated.">
      <mitigationRelations xmi:id="_b-4X-KwUEeuTd_dJv2zYfQ" threat="_b-4XcqwUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4X-awUEeuTd_dJv2zYfQ" threat="_b-4Xj6wUEeuTd_dJv2zYfQ" description="Mobile security products can potentially detect jailbroken devices and take responsive action."/>
    </externals>
    <externals xsi:type="TRADES:ExternalControl" xmi:id="_b-4X-qwUEeuTd_dJv2zYfQ" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/mitigations/M1009" name="Encrypt Network Traffic" id="M1009" description="Application developers should encrypt all of their application network traffic using the Transport Layer Security (TLS) protocol to ensure protection of sensitive data and deter network-based attacks. If desired, application developers could perform message-based encryption of data before passing it for TLS encryption.&#xA;&#xA;iOS's App Transport Security feature can be used to help ensure that all application network traffic is appropriately protected. Apple intends to mandate use of App Transport Security  (Citation: TechCrunch-ATS) for all apps in the Apple App Store unless appropriate justification is given.&#xA;&#xA;Android's Network Security Configuration feature similarly can be used by app developers to help ensure that all of their application network traffic is appropriately protected  (Citation: Android-NetworkSecurityConfig).&#xA;&#xA;Use of Virtual Private Network (VPN) tunnels, e.g. using the IPsec protocol, can help mitigate some types of network attacks as well.">
      <mitigationRelations xmi:id="_b-4X-6wUEeuTd_dJv2zYfQ" threat="_b-4XqawUEeuTd_dJv2zYfQ" description="Application-layer encryption (e.g. use of the Transport Layer Security protocol) or a Virtual Private Network (VPN) tunnel (e.g. using the IPsec protocol) may help mitigate use of untrusted Wi-Fi networks."/>
      <mitigationRelations xmi:id="_b-4X_KwUEeuTd_dJv2zYfQ" threat="_b-4Xd6wUEeuTd_dJv2zYfQ" description="Application-layer encryption (e.g. use of the Transport Layer Security protocol) or a Virtual Private Network (VPN) tunnel (e.g. using the IPsec protocol) may help mitigate weaknesses in the cellular network encryption."/>
      <mitigationRelations xmi:id="_b-4X_awUEeuTd_dJv2zYfQ" threat="_b-4XoKwUEeuTd_dJv2zYfQ" description="This mitigation may not always be effective depending on the method used to encrypt network traffic. In some cases, an adversary may be able to capture traffic before it is encrypted."/>
      <mitigationRelations xmi:id="_b-4X_qwUEeuTd_dJv2zYfQ" threat="_b-4XeqwUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4X_6wUEeuTd_dJv2zYfQ" threat="_b-4XqKwUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YAKwUEeuTd_dJv2zYfQ" threat="_b-4Xl6wUEeuTd_dJv2zYfQ" description="App developers should be advised to use the Android Network Security Configuration feature and the iOS App Transport Security feature to gain some level of assurance that app network traffic is protected.(Citation: Google-TrustManager)"/>
      <mitigationRelations xmi:id="_b-4YAawUEeuTd_dJv2zYfQ" threat="_b-4Xf6wUEeuTd_dJv2zYfQ" description="Use of end-to-end encryption of voice calls and text messages &quot;provides another layer in the defense against potential information compromise by SS7 enabled eavesdropping.&quot;(Citation: CSRIC5-WG10-FinalReport)"/>
    </externals>
    <externals xsi:type="TRADES:ExternalControl" xmi:id="_b-4YAqwUEeuTd_dJv2zYfQ" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/mitigations/M1012" name="Enterprise Policy" id="M1012" description="An enterprise mobility management (EMM), also known as mobile device management (MDM), system can be used to provision policies to mobile devices to control aspects of their allowed behavior.">
      <mitigationRelations xmi:id="_b-4YA6wUEeuTd_dJv2zYfQ" threat="_b-4XgqwUEeuTd_dJv2zYfQ" description="Enterprise policies should prevent enabling USB debugging on Android devices unless specifically needed (e.g., if the device is used for application development)."/>
      <mitigationRelations xmi:id="_b-4YBKwUEeuTd_dJv2zYfQ" threat="_b-4XqawUEeuTd_dJv2zYfQ" description="Enterprise policies could be provisioned to devices to control the Wi-Fi access points that they are allowed to connect to."/>
      <mitigationRelations xmi:id="_b-4YBawUEeuTd_dJv2zYfQ" threat="_b-4XkawUEeuTd_dJv2zYfQ" description="Enterprises can provision policies to mobile devices to require a minimum complexity (length, etc.) for the device passcode. Enterprises can provision policies to mobile devices to cause the device to wipe all data if an incorrect passcode is entered too many times. Both policies would mitigate brute-force, guessing, or shoulder surfing of the device passcode. If desired, enterprises can provision policies to mobile devices to disallow biometric authentication. However, biometric authentication can help make &quot;using a longer, more complex passcode far more practical because you don't need to enter it as frequently.&quot;(Citation: Apple-iOSSecurityGuide)"/>
      <mitigationRelations xmi:id="_b-4YBqwUEeuTd_dJv2zYfQ" threat="_b-4XcKwUEeuTd_dJv2zYfQ" description="On iOS, the `allowEnterpriseAppTrust` and `allowEnterpriseAppTrustModification` configuration profile restrictions can be used to prevent users from installing apps signed using enterprise distribution keys."/>
      <mitigationRelations xmi:id="_b-4YB6wUEeuTd_dJv2zYfQ" threat="_b-4XUqwUEeuTd_dJv2zYfQ" description="An EMM/MDM can use the Android `DevicePolicyManager.setPermittedAccessibilityServices` method to whitelist applications that are allowed to use Android's accessibility features."/>
      <mitigationRelations xmi:id="_b-4YCKwUEeuTd_dJv2zYfQ" threat="_b-4XiawUEeuTd_dJv2zYfQ" description="When using Samsung Knox, third-party keyboards must be explicitly added to an allow list in order to be available to the end-user.(Citation: Samsung Keyboards)"/>
      <mitigationRelations xmi:id="_b-4YCawUEeuTd_dJv2zYfQ" threat="_b-4XrKwUEeuTd_dJv2zYfQ" description="Enterprise policies should block access to the Android Debug Bridge (ADB) by preventing users from enabling USB debugging on Android devices unless specifically needed (e.g., if the device is used for application development). An EMM/MDM can use the Android `DevicePolicyManager.setPermittedAccessibilityServices` method to set an explicit list of applications that are allowed to use Android's accessibility features."/>
      <mitigationRelations xmi:id="_b-4YCqwUEeuTd_dJv2zYfQ" threat="_b-4XiqwUEeuTd_dJv2zYfQ" description="An EMM/MDM can use the Android `DevicePolicyManager.setPermittedAccessibilityServices` method to set an explicit list of applications that are allowed to use Android's accessibility features."/>
      <mitigationRelations xmi:id="_b-4YC6wUEeuTd_dJv2zYfQ" threat="_b-4XWKwUEeuTd_dJv2zYfQ" description="On Android devices with a managed work profile (enterprise managed portion of the device), the `DevicePolicyManager.setPermittedCrossProfileNotificationListeners` method can be used to manage the list of applications (including setting it to an empty list) running within the primary user (personal side of the device) that can see notifications occurring within the managed profile. However, this policy only affects notifications generated within the managed profile, not by the rest of the device. The `DevicePolicyManager.setApplicationHidden` method can be used to disable unwanted applications that are accessing notifications, but using this method would block that entire application from running.(Citation: Android Notification Listeners)"/>
      <mitigationRelations xmi:id="_b-4YDKwUEeuTd_dJv2zYfQ" threat="_b-4Xi6wUEeuTd_dJv2zYfQ" description="An EMM/MDM can use the Android `DevicePolicyManager.setPermittedAccessibilityServices` method to set an explicit list of applications that are allowed to use Android's accessibility features."/>
    </externals>
    <externals xsi:type="TRADES:ExternalControl" xmi:id="_b-4YDawUEeuTd_dJv2zYfQ" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/mitigations/M1014" name="Interconnection Filtering" id="M1014" description="In order to mitigate Signaling System 7 (SS7) exploitation, the Communications, Security, Reliability, and Interoperability Council (CSRIC) describes filtering interconnections between network operators to block inappropriate requests (Citation: CSRIC5-WG10-FinalReport).">
      <mitigationRelations xmi:id="_b-4YDqwUEeuTd_dJv2zYfQ" threat="_b-4XgKwUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YD6wUEeuTd_dJv2zYfQ" threat="_b-4Xf6wUEeuTd_dJv2zYfQ"/>
    </externals>
    <externals xsi:type="TRADES:ExternalControl" xmi:id="_b-4YEKwUEeuTd_dJv2zYfQ" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/mitigations/M1003" name="Lock Bootloader" id="M1003" description="On devices that provide the capability to unlock the bootloader (hence allowing any operating system code to be flashed onto the device), perform periodic checks to ensure that the bootloader is locked.">
      <mitigationRelations xmi:id="_b-4YEawUEeuTd_dJv2zYfQ" threat="_b-4Xm6wUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YEqwUEeuTd_dJv2zYfQ" threat="_b-4XmqwUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YE6wUEeuTd_dJv2zYfQ" threat="_b-4XgqwUEeuTd_dJv2zYfQ"/>
    </externals>
    <externals xsi:type="TRADES:ExternalControl" xmi:id="_b-4YFKwUEeuTd_dJv2zYfQ" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/mitigations/M1001" name="Security Updates" id="M1001" description="Install security updates in response to discovered vulnerabilities.&#xA;&#xA;Purchase devices with a vendor and/or mobile carrier commitment to provide security updates in a prompt manner for a set period of time.&#xA;&#xA;Decommission devices that will no longer receive security updates.&#xA;&#xA;Limit or block access to enterprise resources from devices that have not installed recent security updates.&#xA;&#xA;On Android devices, access can be controlled based on each device's security patch level. On iOS devices, access can be controlled based on the iOS version.">
      <mitigationRelations xmi:id="_b-4YFawUEeuTd_dJv2zYfQ" threat="_b-4XVqwUEeuTd_dJv2zYfQ" description="Decrease likelihood of successful privilege escalation attack."/>
      <mitigationRelations xmi:id="_b-4YFqwUEeuTd_dJv2zYfQ" threat="_b-4XWawUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YF6wUEeuTd_dJv2zYfQ" threat="_b-4XX6wUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YGKwUEeuTd_dJv2zYfQ" threat="_b-4XZawUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YGawUEeuTd_dJv2zYfQ" threat="_b-4XdawUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YGqwUEeuTd_dJv2zYfQ" threat="_b-4XeawUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YG6wUEeuTd_dJv2zYfQ" threat="_b-4XkawUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YHKwUEeuTd_dJv2zYfQ" threat="_b-4XgawUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YHawUEeuTd_dJv2zYfQ" threat="_b-4XfqwUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YHqwUEeuTd_dJv2zYfQ" threat="_b-4XgqwUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YH6wUEeuTd_dJv2zYfQ" threat="_b-4Xg6wUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YIKwUEeuTd_dJv2zYfQ" threat="_b-4XmawUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YIawUEeuTd_dJv2zYfQ" threat="_b-4XmqwUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YIqwUEeuTd_dJv2zYfQ" threat="_b-4Xm6wUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YI6wUEeuTd_dJv2zYfQ" threat="_b-4XnKwUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YJKwUEeuTd_dJv2zYfQ" threat="_b-4XoKwUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YJawUEeuTd_dJv2zYfQ" threat="_b-4XuKwUEeuTd_dJv2zYfQ" description="Security updates typically provide patches for vulnerabilities that enable device rooting."/>
      <mitigationRelations xmi:id="_b-4YJqwUEeuTd_dJv2zYfQ" threat="_b-4XaqwUEeuTd_dJv2zYfQ" description="Security updates frequently contain patches to vulnerabilities."/>
      <mitigationRelations xmi:id="_b-4YJ6wUEeuTd_dJv2zYfQ" threat="_b-4Xj6wUEeuTd_dJv2zYfQ" description="Apple regularly provides security updates for known OS vulnerabilities."/>
    </externals>
    <externals xsi:type="TRADES:ExternalControl" xmi:id="_b-4YKKwUEeuTd_dJv2zYfQ" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/mitigations/M1004" name="System Partition Integrity" id="M1004" description="Ensure that Android devices being used include and enable the Verified Boot capability, which cryptographically ensures the integrity of the system partition.">
      <mitigationRelations xmi:id="_b-4YKawUEeuTd_dJv2zYfQ" threat="_b-4Xm6wUEeuTd_dJv2zYfQ"/>
    </externals>
    <externals xsi:type="TRADES:ExternalControl" xmi:id="_b-4YKqwUEeuTd_dJv2zYfQ" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/mitigations/M1006" name="Use Recent OS Version" id="M1006" description="New mobile operating system versions bring not only patches against discovered vulnerabilities but also often bring security architecture improvements that provide resilience against potential vulnerabilities or weaknesses that have not yet been discovered. They may also bring improvements that block use of observed adversary techniques.">
      <mitigationRelations xmi:id="_b-4YK6wUEeuTd_dJv2zYfQ" threat="_b-4XjawUEeuTd_dJv2zYfQ" description="iOS 10.3 and higher add an additional step for users to install new trusted CA certificates to make it more difficult to trick users into installing them. On Android, apps that target compatibility with Android 7 and higher (API Level 24) default to only trusting CA certificates that are bundled with the operating system, not CA certificates that are added by the user or administrator, hence decreasing their susceptibility to successful man-in-the-middle attack.(Citation: Symantec-iOSProfile2)(Citation: Android-TrustedCA)"/>
      <mitigationRelations xmi:id="_b-4YLKwUEeuTd_dJv2zYfQ" threat="_b-4Xs6wUEeuTd_dJv2zYfQ" description="Starting in Android 6.0, applications can no longer access MAC addresses of network interfaces.(Citation: Android60Changes)"/>
      <mitigationRelations xmi:id="_b-4YLawUEeuTd_dJv2zYfQ" threat="_b-4XcqwUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YLqwUEeuTd_dJv2zYfQ" threat="_b-4XWawUEeuTd_dJv2zYfQ" description="Starting in Android 4.1, this technique requires privilege escalation for malicious applications to perform, as apps can no longer access the system log (other than log entries added by a particular app itself). (Additionally, with physical access to the device, the system log could be accessed via USB through the Android Debug Bridge.)(Citation: Android-ReadLogs)"/>
      <mitigationRelations xmi:id="_b-4YL6wUEeuTd_dJv2zYfQ" threat="_b-4XoKwUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YMKwUEeuTd_dJv2zYfQ" threat="_b-4XVqwUEeuTd_dJv2zYfQ" description="Decrease likelihood of successful privilege escalation attack."/>
      <mitigationRelations xmi:id="_b-4YMawUEeuTd_dJv2zYfQ" threat="_b-4Xg6wUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YMqwUEeuTd_dJv2zYfQ" threat="_b-4XWqwUEeuTd_dJv2zYfQ" description="Most new versions of mobile operating systems include patches to newly discovered privilege escalation exploits used to root or jailbreak devices. Further, applications that target Android API level 28 or higher on Android 9.0 and above devices have a policy applied that prevents other applications from reading or writing data in their internal storage directories, regardless of file permissions.(Citation: Android-9.0-API-Changes)"/>
      <mitigationRelations xmi:id="_b-4YM6wUEeuTd_dJv2zYfQ" threat="_b-4XZawUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YNKwUEeuTd_dJv2zYfQ" threat="_b-4XhawUEeuTd_dJv2zYfQ" description="Increase difficulty of escalating privileges, as security architecture improvements in each new version of Android and iOS make it more difficult to escalate privileges. Additionally, newer versions of Android have strengthened the sandboxing applied to applications, restricting their ability to enumerate file system contents."/>
      <mitigationRelations xmi:id="_b-4YNawUEeuTd_dJv2zYfQ" threat="_b-4Xo6wUEeuTd_dJv2zYfQ" description="As stated in the technical description, Android 7 and above prevent applications from accessing this information."/>
      <mitigationRelations xmi:id="_b-4YNqwUEeuTd_dJv2zYfQ" threat="_b-4Xi6wUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YN6wUEeuTd_dJv2zYfQ" threat="_b-4XZqwUEeuTd_dJv2zYfQ" description="Starting with Android 4.2 the user must provide consent before applications can send SMS messages to premium numbers.(Citation: AndroidSecurity2014)"/>
      <mitigationRelations xmi:id="_b-4YOKwUEeuTd_dJv2zYfQ" threat="_b-4XU6wUEeuTd_dJv2zYfQ" description="Changes were made in Android 7 to help prevent use of this technique.(Citation: GoogleIO2016)"/>
      <mitigationRelations xmi:id="_b-4YOawUEeuTd_dJv2zYfQ" threat="_b-4XeawUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YOqwUEeuTd_dJv2zYfQ" threat="_b-4XfqwUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YO6wUEeuTd_dJv2zYfQ" threat="_b-4XkawUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YPKwUEeuTd_dJv2zYfQ" threat="_b-4XgawUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YPawUEeuTd_dJv2zYfQ" threat="_b-4XmawUEeuTd_dJv2zYfQ" description="For applications running on Android 10 and higher devices, application developers can indicate that DEX code should always be executed directly from the application package.(Citation: Android 10 DEX)"/>
      <mitigationRelations xmi:id="_b-4YPqwUEeuTd_dJv2zYfQ" threat="_b-4XUqwUEeuTd_dJv2zYfQ" description="Android 7.0 and higher includes additional protections against this technique."/>
      <mitigationRelations xmi:id="_b-4YP6wUEeuTd_dJv2zYfQ" threat="_b-4XgqwUEeuTd_dJv2zYfQ" description="Newer OS versions generally will include security patches against discovered vulnerabilities that become known to the vendor. Additionally, iOS 11.4.1 and higher introduce USB Restricted Mode, which under certain conditions disables data access through the device's charging port (making the port only usable for power), likely preventing this technique from working.(Citation: Elcomsoft-iOSRestricted)"/>
      <mitigationRelations xmi:id="_b-4YQKwUEeuTd_dJv2zYfQ" threat="_b-4XX6wUEeuTd_dJv2zYfQ"/>
      <mitigationRelations xmi:id="_b-4YQawUEeuTd_dJv2zYfQ" threat="_b-4XZ6wUEeuTd_dJv2zYfQ" description="Android 10 prevents applications from accessing clipboard data unless the application is on the foreground or is set as the device&#x2019;s default input method editor (IME).(Citation: Android 10 Privacy Changes)"/>
      <mitigationRelations xmi:id="_b-4YQqwUEeuTd_dJv2zYfQ" threat="_b-4XZKwUEeuTd_dJv2zYfQ" description="Android 10 prevents applications from accessing clipboard data unless the application is on the foreground or is set as the device&#x2019;s default input method editor (IME).(Citation: Android 10 Privacy Changes)"/>
      <mitigationRelations xmi:id="_b-4YQ6wUEeuTd_dJv2zYfQ" threat="_b-4XY6wUEeuTd_dJv2zYfQ" description="Android 9 and above restricts access to mic, camera, and other sensors from background applications.(Citation: Android Capture Sensor 2019) "/>
      <mitigationRelations xmi:id="_b-4YRKwUEeuTd_dJv2zYfQ" threat="_b-4XYqwUEeuTd_dJv2zYfQ" description="Android 9 and above restricts access to microphone, camera, and other sensors from background applications.(Citation: Android Capture Sensor 2019)"/>
      <mitigationRelations xmi:id="_b-4YRawUEeuTd_dJv2zYfQ" threat="_b-4XeKwUEeuTd_dJv2zYfQ" description="On Android 10 and above devices, applications that target Android API level 29 or higher cannot execute native code stored in the application's internal data storage directory, limiting the ability of applications to download and execute native code at runtime.(Citation: Android 10 Execute)"/>
      <mitigationRelations xmi:id="_b-4YRqwUEeuTd_dJv2zYfQ" threat="_b-4XYawUEeuTd_dJv2zYfQ" description="In Android 8, broadcast intent behavior was changed, limiting the implicit intents that applications can register for in the manifest.(Citation: Android Changes to System Broadcasts)"/>
      <mitigationRelations xmi:id="_b-4YR6wUEeuTd_dJv2zYfQ" threat="_b-4XaqwUEeuTd_dJv2zYfQ" description="Many vulnerabilities related to injecting code into existing applications have been patched in previous Android releases."/>
      <mitigationRelations xmi:id="_b-4YSKwUEeuTd_dJv2zYfQ" threat="_b-4Xj6wUEeuTd_dJv2zYfQ" description="Newer OS releases typically patch known root exploits disclosed in previous versions."/>
      <mitigationRelations xmi:id="_b-4YSawUEeuTd_dJv2zYfQ" threat="_b-4XtawUEeuTd_dJv2zYfQ" description="iOS 11 introduced a first-come-first-served principle for URIs, allowing only the prior installed app to be launched via the URI.(Citation: Trend Micro iOS URL Hijacking)"/>
      <mitigationRelations xmi:id="_b-4YSqwUEeuTd_dJv2zYfQ" threat="_b-4XiKwUEeuTd_dJv2zYfQ" description="New OS releases frequently contain additional limitations or controls around device location access."/>
    </externals>
    <externals xsi:type="TRADES:ExternalControl" xmi:id="_b-4YS6wUEeuTd_dJv2zYfQ" source="Mitre Att&amp;ck : mobile-attack" link="https://attack.mitre.org/mitigations/M1011" name="User Guidance" id="M1011" description="Describes any guidance or training given to users to set particular configuration settings or avoid specific potentially risky behaviors.">
      <mitigationRelations xmi:id="_b-4YTKwUEeuTd_dJv2zYfQ" threat="_b-4XrKwUEeuTd_dJv2zYfQ" description="Users should be advised not to grant consent for screen captures to occur unless expected. Users should avoid enabling USB debugging (Android Debug Bridge) unless explicitly required."/>
      <mitigationRelations xmi:id="_b-4YTawUEeuTd_dJv2zYfQ" threat="_b-4XmKwUEeuTd_dJv2zYfQ" description="Users should be encouraged to only install apps from authorized app stores, which are less likely to contain malicious repackaged apps."/>
      <mitigationRelations xmi:id="_b-4YTqwUEeuTd_dJv2zYfQ" threat="_b-4XiqwUEeuTd_dJv2zYfQ" description="Users should be warned against granting access to accessibility features, and to carefully scrutinize applications that request this dangerous permission."/>
      <mitigationRelations xmi:id="_b-4YT6wUEeuTd_dJv2zYfQ" threat="_b-4XiawUEeuTd_dJv2zYfQ" description="Users should be weary of granting applications dangerous or privacy-intrusive permissions, such as keyboard registration and accessibility permissions requests."/>
      <mitigationRelations xmi:id="_b-4YUKwUEeuTd_dJv2zYfQ" threat="_b-4XX6wUEeuTd_dJv2zYfQ" description="Advise users to only connect mobile devices to PCs when a justified need exists (e.g., mobile app development and debugging)."/>
      <mitigationRelations xmi:id="_b-4YUawUEeuTd_dJv2zYfQ" threat="_b-4Xb6wUEeuTd_dJv2zYfQ" description="Encourage developers to protect their account credentials and enable multi-factor authentication if available. Encourage developers to protect their signing keys."/>
      <mitigationRelations xmi:id="_b-4YUqwUEeuTd_dJv2zYfQ" threat="_b-4XcKwUEeuTd_dJv2zYfQ" description="iOS 9 and above requires explicit user consent before allowing installation of applications signed with enterprise distribution keys rather than installed from Apple's App Store. Users should be encouraged to not agree to installation of applications signed with enterprise distribution keys unless absolutely certain of the source of the application. On Android, the &quot;Unknown Sources&quot; setting must be enabled for users to install apps from sources other than an authorized app store (such as the Google Play Store), so users should be encouraged not to enable that setting."/>
      <mitigationRelations xmi:id="_b-4YU6wUEeuTd_dJv2zYfQ" threat="_b-4XoqwUEeuTd_dJv2zYfQ" description="Encourage users to protect their account credentials and to enable available multi-factor authentication options."/>
      <mitigationRelations xmi:id="_b-4YVKwUEeuTd_dJv2zYfQ" threat="_b-4XjawUEeuTd_dJv2zYfQ" description="Typically, insecure or malicious configuration settings are not installed without the user's consent. Users should be advised not to install unexpected configuration settings (CA certificates, iOS Configuration Profiles, Mobile Device Management server provisioning)."/>
      <mitigationRelations xmi:id="_b-4YVawUEeuTd_dJv2zYfQ" threat="_b-4XgqwUEeuTd_dJv2zYfQ" description="Users should be advised not to use public charging stations or computers to charge their devices. Instead, users should be issued a charger acquired from a trustworthy source. Users should be advised not to click on device prompts to trust attached computers unless absolutely necessary."/>
      <mitigationRelations xmi:id="_b-4YVqwUEeuTd_dJv2zYfQ" threat="_b-4XpqwUEeuTd_dJv2zYfQ" description="Encourage users to protect their account credentials and to enable available multi-factor authentication options."/>
      <mitigationRelations xmi:id="_b-4YV6wUEeuTd_dJv2zYfQ" threat="_b-4Xp6wUEeuTd_dJv2zYfQ" description="Encourage users to protect their account credentials and to enable available multi-factor authentication options."/>
      <mitigationRelations xmi:id="_b-4YWKwUEeuTd_dJv2zYfQ" threat="_b-4XhqwUEeuTd_dJv2zYfQ" description="If a user sees a persistent notification they do not recognize, they should uninstall the source application and look for other unwanted applications or anomalies."/>
      <mitigationRelations xmi:id="_b-4YWawUEeuTd_dJv2zYfQ" threat="_b-4XuKwUEeuTd_dJv2zYfQ" description="Inform users that device rooting or granting unnecessary access to the accessibility service presents security risks that could be taken advantage of without their knowledge."/>
      <mitigationRelations xmi:id="_b-4YWqwUEeuTd_dJv2zYfQ" threat="_b-4XbqwUEeuTd_dJv2zYfQ" description="Users should be trained on what device administrator permission request prompts look like, and how to avoid granting permissions on phishing popups."/>
      <mitigationRelations xmi:id="_b-4YW6wUEeuTd_dJv2zYfQ" threat="_b-4XiKwUEeuTd_dJv2zYfQ" description="Users should be advised to be extra scrutinous of applications that request location permissions, and to deny any permissions requests for applications they do not recognize."/>
      <mitigationRelations xmi:id="_b-4YXKwUEeuTd_dJv2zYfQ" threat="_b-4Xq6wUEeuTd_dJv2zYfQ" description="Users should be encouraged to be very careful with what applications they grant SMS access to. Further, users should not change their default SMS handler to applications they do not recognize.(Citation: SMS KitKat)"/>
    </externals>
  </controlOwner>
</TRADES:Catalog>
