<?xml version="1.0" encoding="ASCII"?>
<TRADES:Analysis xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:TRADES="dsm.TRADES" name="ScenarioA" id="8213ab09-aab9-4cfc-92fc-393ed1552a9d">
  <components name="System Scope">
    <components name="X Application Server[]">
      <components name="Internally Developed Software X" componenttype="//@componenttype.1">
        <controlOwner>
          <externals source="NIST Special Publication 800-53 Revision 5: Security and Privacy Controls for Federal Information Systems and Organizations" link="Catalog:/CONTROL/613fca2d-704a-42e7-8e2b-b206fb92b456#sa-11.1" sourceID="613fca2d-704a-42e7-8e2b-b206fb92b456" name="Static Code Analysis" id="sa-11.1" description="Require the developer of the system, system component, or system service to employ static code analysis tools to identify common flaws and document the results of the analysis.&#xA;&#xA;&#xD;&#xA;Static code analysis provides a technology and methodology for security reviews and includes checking for weaknesses in the code as well as for the incorporation of libraries or other included code with known vulnerabilities or that are out-of-date and not supported. Static code analysis can be used to identify vulnerabilities and enforce secure coding practices. It is most effective when used early in the development process, when each code change can automatically be scanned for potential weaknesses. Static code analysis can provide clear remediation guidance and identify defects for developers to fix. Evidence of the correct implementation of static analysis can include aggregate defect density for critical defect types, evidence that defects were inspected by developers or security professionals, and evidence that defects were remediated. A high density of ignored findings, commonly referred to as false positives, indicates a potential problem with the analysis process or the analysis tool. In such cases, organizations weigh the validity of the evidence against evidence from other sources.&#xA;&#xA;&#xD;&#xA;"/>
        </controlOwner>
      </components>
      <components name="Operating System" componenttype="//@componenttype.0">
        <controlOwner>
          <externals source="NIST Special Publication 800-53 Revision 5: Security and Privacy Controls for Federal Information Systems and Organizations" link="Catalog:/CONTROL/613fca2d-704a-42e7-8e2b-b206fb92b456#ia-2.2" sourceID="613fca2d-704a-42e7-8e2b-b206fb92b456" name="Multi-factor Authentication to Non-privileged Accounts" id="ia-2.2" description="Implement multi-factor authentication for access to non-privileged accounts.&#xA;&#xA;&#xD;&#xA;Multi-factor authentication requires the use of two or more different factors to achieve authentication. The authentication factors are defined as follows: something you know (e.g., a personal identification number \[PIN\]), something you have (e.g., a physical authenticator such as a cryptographic private key), or something you are (e.g., a biometric). Multi-factor authentication solutions that feature physical authenticators include hardware authenticators that provide time-based or challenge-response outputs and smart cards such as the U.S. Government Personal Identity Verification card or the DoD Common Access Card. In addition to authenticating users at the system level, organizations may also employ authentication mechanisms at the application level, at their discretion, to provide increased information security. Regardless of the type of access (i.e., local, network, remote), non-privileged accounts are authenticated using multi-factor options appropriate for the level of risk. Organizations can provide additional security measures, such as additional or more rigorous authentication mechanisms, for specific types of access.&#xA;&#xA;&#xD;&#xA;"/>
          <externals source="NIST Special Publication 800-53 Revision 5: Security and Privacy Controls for Federal Information Systems and Organizations" link="Catalog:/CONTROL/613fca2d-704a-42e7-8e2b-b206fb92b456#si-16" sourceID="613fca2d-704a-42e7-8e2b-b206fb92b456" name="Memory Protection" id="si-16" description="Implement the following controls to protect the system memory from unauthorized code execution: {{ insert: param, si-16_prm_1 }}.&#xA;&#xA;&#xD;&#xA;Some adversaries launch attacks with the intent of executing code in non-executable regions of memory or in memory locations that are prohibited. Controls employed to protect memory include data execution prevention and address space layout randomization. Data execution prevention controls can either be hardware-enforced or software-enforced with hardware enforcement providing the greater strength of mechanism.&#xA;&#xA;&#xD;&#xA;"/>
        </controlOwner>
      </components>
      <controlOwner/>
    </components>
    <controlOwner/>
  </components>
  <dataOwner/>
  <controlOwner>
    <internals id="6eaad7a7-10ad-4fcc-893b-1c63db4cf137"/>
  </controlOwner>
  <threatOwner/>
  <vulnerabilities name="CWE-308: Use of Single-factor Authentication"/>
  <vulnerabilities name="CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer"/>
  <vulnerabilities name="CWE-248: Uncaught Exception"/>
  <vulnerabilities name="CWE-798: Use of Hard-coded Credentials"/>
  <componenttype name="Server"/>
  <componenttype name="Internally developed application"/>
  <componenttype/>
  <componenttype name="Windows Server"/>
  <vulnerableasset name="Server authentication" vulnerability="//@vulnerabilities.0" componentTypeAffected="//@componenttype.0" controls="//@components.0/@components.0/@components.1/@controlOwner/@externals.0"/>
  <vulnerableasset name="Unprotected memory access" vulnerability="//@vulnerabilities.1" componentTypeAffected="//@componenttype.0" controls="//@components.0/@components.0/@components.1/@controlOwner/@externals.1"/>
  <vulnerableasset name="Internally developed application - base" vulnerability="//@vulnerabilities.2 //@vulnerabilities.3" componentTypeAffected="//@componenttype.1" controls="//@components.0/@components.0/@components.0/@controlOwner/@externals.0"/>
  <scoreSystem>
    <impactScores name="Low" impact="1">
      <configurations difficulty="//@scoreSystem/@difficultyScores.0"/>
      <configurations difficulty="//@scoreSystem/@difficultyScores.1"/>
      <configurations difficulty="//@scoreSystem/@difficultyScores.2"/>
    </impactScores>
    <impactScores name="Medium" impact="2">
      <configurations difficulty="//@scoreSystem/@difficultyScores.0"/>
      <configurations difficulty="//@scoreSystem/@difficultyScores.1"/>
      <configurations difficulty="//@scoreSystem/@difficultyScores.2"/>
    </impactScores>
    <impactScores name="High" impact="3">
      <configurations difficulty="//@scoreSystem/@difficultyScores.0"/>
      <configurations difficulty="//@scoreSystem/@difficultyScores.1"/>
      <configurations difficulty="//@scoreSystem/@difficultyScores.2"/>
    </impactScores>
    <difficultyScores name="Low" difficulty="1"/>
    <difficultyScores name="Medium" difficulty="2"/>
    <difficultyScores name="High" difficulty="3"/>
  </scoreSystem>
</TRADES:Analysis>
